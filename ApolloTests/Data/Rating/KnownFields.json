{
  "Class Code": {
    "type": "string",
    "source": "VehicleClassCode"
  },
  "ClassCode": {
    "type": "string",
    "source": "VehicleClassCode"
  },
  "Predominant Class Code": {
    "type": "string",
    "source": "VehicleClassCode"
  },
  "Covered Autos": {
    "source": "\"Scheduled Autos\""
  },
  "Radius": {
    "source": "int.Parse(root.GetQuestionResponse(\"VehicleRadius\"))"
  },
  "Vehicle Age": {
    "setter": "Vehicle.YearOfManufacture = DateTime.Now.Year - value",
    "source": "DateTime.Now.Year - Vehicle.YearOfManufacture"
  },
  "Fleet Size": {
    "source": "root.GetVehicles().Count"
  },
  "Motor Carrier Filing Type": {
    "source": "MotorCarrierFilingType"
  },
  "Insurance Score Tier": {
    "source": "InsuranceScoreTier"
  },
  "Territory": {
    "source": "Territory"
  },
  "Organization Type": {
    "source": "root.BusinessInformation.BusinessType.Name"
  },
  "Billing Type": {
    "source": "BillingType"
  },
  "Payment Plan": {
    "source": "PaymentPlan"
  },
  "EFT": {
    "source": "IsEft"
  },
  "Vehicle Type": {
    "source": "Vehicle.TypeName.Replace(\"Semi-Trailer\", \"SemiTrailer\")"
  },
  "Vehicle Type Description": {
    "source": "Vehicle.TypeName.Replace(\"Semi-Trailer\", \"SemiTrailer\")"
  },
  "BodySubCategoryTypeId":{
    "source":"Vehicle.BodySubCategoryTypeId"
  },
  "GVW/GCW": {
    "source": "Vehicle.GrossVehicleWeight==null? 0 : decimal.Parse(Vehicle.GrossVehicleWeight)"
  },
  "Business Experience": {
    "source": "DateTime.Now.Year - root.BusinessInformation.YearBusinessStarted"
  },
  "Limit": {
    "source": "Limit.SelectedLimits[0]",
    "type": "Currency"
  },
  "Seating Capacity": {
    "source": "int.Parse(Vehicle.SeatingCapacity)"
  },
  //CAB response
  "Inspection Count": {
    "source": "root.InspectionCount"
  },
  "Deductible": {
    "source": "Limit.SelectedDeductibles != null && Limit.SelectedDeductibles.Count > 0 ? Limit.SelectedDeductibles[0] : 0"
  },
  //default to false as per BUG 31745
  "Combined Deductible": {
    "source": "false"

  },
  //Preferred Trucking refer to CL.15
  //US 12237
  "Preferred Trucking": {
    "source": "false"
  },
  "Team Driving": {
    "source": "root.GetQuestionResponse(\"TeamDriving\")?? \"false\""
  },
  //CAB response
  "Out Of Service Violation Ratio": {
    "source": "root.OutOfServiceViolationRatio"
  },
  "Stated Value": {
    "source": "Vehicle.StatedAmount?? 0"
  },
  //CAB response
  "Total BASIC Violation Weight": {
    "source": "root.TotalBASICViolationWeight"
  },
  "Total Basic Violation Weight": {
    "source": "root.TotalBASICViolationWeight"
  },
  "Safety Features": {
    "source": "Vehicle.SafetyFeatures ?? false"
  },
  "Anti-Theft Category": {
    "source": "Vehicle.Antitheft==true? \"Type 1\" : \"Not Applicable\""
  },
  "Auto Coverage Type": {
    "source": "\"Physical Damage - Comprehensive\""
  },
  "Driver Rating Plan": {
    "source": "AlgorithmAssignment.DriverRatingPlan"
  },
  "Driver Points": {
    "source": "DriverRisk.GetPoints(root, AlgorithmAssignment.DriverRatingPlan)"
  },
  "Driver Age": {
    "source": "DriverRisk.Driver.Age"
  },
  "Increased Limit Group": {
    "source": "AlgorithmAssignment.IncreasedLimitGroup"
  },
  "Combined Single Limit": {
    "source": "Limit.SelectedLimits[0]",
    "type": "Currency"
  },
  "Bodily Injury Limit Per Person": {
    "source": "Limit.SelectedLimits[0]",
    "type": "Currency"
  },
  "Bodily Injury Limit Per Occurrence": {
    "source": "Limit.SelectedLimits[1]",
    "type": "Currency"
  },
  "Property Damage Limit Per Occurrence": {
    "source": "Limit.SelectedLimits.ElementAtOrDefault(2)",
    "type": "Currency"
  },
  //default to false as per paula
  "Is Stacking": {
    "source": "false"
  },
  "Add On Coverage": {
    "source": "Limit.GetQuestionResponse(\"AtFaultLiability\")?? \"No\"",
    "type": "Boolean"

  },
  "Add On": {
    "source": "Limit.GetQuestionResponse(\"AtFaultLiability\")?? \"No\"",
    "type": "Boolean"

  },
  "Benefits Limit": {
    "source": "Limit.SelectedLimits[0]"
  },
  "Written Agreement": {
    "source": "root.GetQuestionResponse(\"TrailerInterchangeAgreements\")",
    "type": "Boolean"

  },
  "Other Than Collision Type": {
    "source": "\"Comprehensive\""
  },
  "Collision Type": {
    "source": "\"Collision\""
  },
  "Other Than Collision Deductible": {
    "source": "Limit.SelectedDeductibles[0]"
  },
  "Collision Deductible": {
    "source": "Limit.SelectedDeductibles[1]"
  },
  "State": {
    "source": "State"
  },
  "Auto Liability Limit":{
    "source": "Limit.SelectedLimits[0]"
  },
  "Cargo that is Hauled":{
    "source": "root.GetQuestionResponse(\"Haul\")"
  },
  "Theft Coverage":{
    "source": "Limit.GetQuestionResponse(\"IncludeCargoTheftCoverage\")"
  },
  "Named Perils Coverage":{
    "source": "Limit.GetQuestionResponse(\"IncludeCargoNamedPerilsCoverage\")"
  },
  "Earned Freight Coverage":{
    "source": "((string)Limit.GetQuestionResponse(\"IncludeEarnedFreightCoverage\")).ToLower() == \"true\" ? \"Included\" : \"Excluded\""
  },
  "Customer Cargo Coverage":{
    "source": "Limit.GetQuestionResponse(\"CustomerCargoCoverage\")"
  },
  "Driver Count":{
    "source": "root.GetDrivers().Count"
  },
  "Driver to Vehicle Ratio":{
    "source": "DrivertoVehicleRatio"
  },
  "Hours of Operation":{
    "source": "Boolean.Parse((string)root.GetQuestionResponse(\"OnCall\")) ? 24 : 23"
  },
  "Downtime":{
    "source": "Limit.GetQuestionResponse(\"RentalDowntimeIncluded\")"
  }
}
  

