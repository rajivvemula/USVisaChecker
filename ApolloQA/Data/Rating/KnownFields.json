{
  "Class Code": {
    "type": "string",
    "source": "VehicleClassCode"
  },
  "ClassCode": {
    "type": "string",
    "source": "VehicleClassCode"
  },
  "Predominant Class Code": {
    "type": "string",
    "source": "VehicleClassCode"
  },
  "Covered Autos": {
    "source": "root.CoveredAutos"
  },
  "Radius": {
    "source": "root.RadiusOfOperation"
  },
  "Vehicle Age": {
    "setter": "Vehicle.YearOfManufacture = DateTime.Now.Year - value",
    "source": "DateTime.Now.Year - Vehicle.YearOfManufacture"
  },
  "Fleet Size": {
    "source": "root.GetVehicles().Count"
  },
  "Motor Carrier Filing Type": {
    "source": "root.MotorCarrierFiling"
  },
  "Insurance Score Tier": {
    "source": "InsuranceScoreTier"
  },
  "Territory": {
    "source": "Territory"
  },
  "Organization Type": {
    "source": "root.Organization.TypeName"
  },
  "Billing Type": {
    "source": "BillingType"
  },
  "Payment Plan": {
    "source": "PaymentPlan"
  },
  "EFT": {
    "source": "IsEft"
  },
  "Vehicle Type": {
    "source": "Vehicle.TypeName"
  },
  "Vehicle Type Description": {
    "source": "Vehicle.TypeName"
  },
  "GVW/GCW": {
    "source": "Vehicle.GrossVehicleWeight"
  },
  "Business Experience": {
    "source": "DateTime.Now.Year - root.Organization.YearBusinessStarted"
  },
  "Limit": {
    "source": "Limit.selectedLimits[0]",
    "type": "Currency"
  },
  "Seating Capacity": {
    "source": "Vehicle.SeatingCapacity"
  },
  //CAB response
  "Inspection Count": {
    "source": "root.InspectionCount"
  },
  "Deductible": {
    "source": "Limit.selectedDeductibles != null && Limit.selectedDeductibles.Count > 0 ? Limit.selectedDeductibles[0] : 0"
  },
  //default to false as per BUG 31745
  "Combined Deductible": {
    "source": "false"

  },
  //Preferred Trucking refer to CL.15
  //US 12237
  "Preferred Trucking": {
    "source": "false"
  },
  "Team Driving": {
    "source": "root.GetQuestionResponse(\"TeamDriving\")"
  },
  //CAB response
  "Out Of Service Violation Ratio": {
    "source": "root.OutOfServiceViolationRatio"
  },
  "Stated Value": {
    "source": "Vehicle.StatedAmount?? 0"
  },
  //CAB response
  "Total BASIC Violation Weight": {
    "source": "root.TotalBASICViolationWeight"
  },
  "Total Basic Violation Weight": {
    "source": "root.TotalBASICViolationWeight"
  },
  "Safety Features": {
    "source": "Vehicle.SafetyFeatures"
  },
  "Anti-Theft Category": {
    "source": "Vehicle.AntiTheft"
  },
  "Auto Coverage Type": {
    "source": "\"Physical Damage - Comprehensive\""
  },
  "Driver Rating Plan": {
    "source": "AlgorithmAssignment.DriverRatingPlan"
  },
  "Driver Points": {
    "source": "Driver.GetPoints(root, AlgorithmAssignment.DriverRatingPlan)"
  },
  "Driver Age": {
    "source": "Driver.Age"
  },
  "Increased Limit Group": {
    "source": "AlgorithmAssignment.IncreasedLimitGroup"
  },
  "Combined Single Limit": {
    "source": "Limit.selectedLimits[0]",
    "type": "Currency"
  },
  "Bodily Injury Limit Per Person": {
    "source": "Limit.selectedLimits[0]",
    "type": "Currency"
  },
  "Bodily Injury Limit Per Occurrence": {
    "source": "Limit.selectedLimits[1]",
    "type": "Currency"
  },
  "Property Damage Limit Per Occurrence": {
    "source": "Limit.selectedLimits[2]",
    "type": "Currency"
  },
  //default to false as per paula
  "Is Stacking": {
    "source": "false"
  },
  "Add On Coverage": {
    "source": "Limit.getQuestionResponse(\"AtFaultLiability\")?? \"No\""
  }

}
  

