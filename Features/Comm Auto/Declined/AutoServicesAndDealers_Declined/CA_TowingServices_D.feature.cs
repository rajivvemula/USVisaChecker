// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.CommAuto.Declined.AutoServicesAndDealers_Declined
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_TowingServices_DFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_TowingServices_D.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Declined/AutoServicesAndDealers_Declined", "CA_TowingServices_D", "US 79738 - Added new CA questions", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_TowingServices_D")))
            {
                global::ApolloQAAutomation.Features.CommAuto.Declined.AutoServicesAndDealers_Declined.CA_TowingServices_DFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Towing Service Declined Snow Plowing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_TowingServices_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SC")]
        public void CATowingServiceDeclinedSnowPlowing()
        {
            string[] tagsOfScenario = new string[] {
                    "Declined",
                    "CA",
                    "Regression",
                    "SC"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Towing Service Declined Snow Plowing", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table15.AddRow(new string[] {
                            "Towing Services",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles;Tools or Equipment",
                            "29209",
                            "CA"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table15, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table16.AddRow(new string[] {
                            "test",
                            "No",
                            ""});
#line 11
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table16, "Then ");
#line hidden
#line 14
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table17.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "806 Universal Dr",
                            "",
                            "Columbia",
                            ""});
#line 16
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table17, "And ");
#line hidden
#line 19
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fifth Wheel",
                            "Plowing Snow"});
                table18.AddRow(new string[] {
                            "1FTFW1E88NFA58133",
                            "South Carolina",
                            "No",
                            "Yes"});
#line 21
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table18, "And ");
#line hidden
#line 24
 testRunner.Then("user adds another vehicle or trailer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fifth Wheel",
                            "Plowing Snow"});
                table19.AddRow(new string[] {
                            "3TMCZ5AN3KM237222",
                            "South Carolina",
                            "Yes",
                            "Yes"});
#line 25
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table19, "And ");
#line hidden
#line 28
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table20.AddRow(new string[] {
                            "Test",
                            "Driver",
                            "SC",
                            "03/13/1986",
                            "Yes 3 or more years",
                            "No",
                            "085671243"});
#line 30
 testRunner.And("user creates a driver with these values:", ((string)(null)), table20, "And ");
#line hidden
#line 33
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table21.AddRow(new string[] {
                            "Do you haul intermodal containers?",
                            "No"});
                table21.AddRow(new string[] {
                            "Do you have any active Trailer Interchange Agreements?",
                            "No"});
                table21.AddRow(new string[] {
                            "Is your business on call 24/7?",
                            "No"});
                table21.AddRow(new string[] {
                            "Does your business also have a repair shop, impound lot, or salvage yard?",
                            "No we only provide towing or roadside assistance services"});
                table21.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table21.AddRow(new string[] {
                            "Do you haul any fine art or jewelry?",
                            "No"});
                table21.AddRow(new string[] {
                            "Do you provide residential moving services?",
                            "No"});
                table21.AddRow(new string[] {
                            "Does your business engage in team driving?",
                            "No - one driver per haul"});
                table21.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table21.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table21.AddRow(new string[] {
                            "I agree to submit proof of insurance claims history, also known as loss runs, for" +
                                " the last 3 years within 30 days of the effective date of the policy",
                            "true"});
                table21.AddRow(new string[] {
                            "Do you haul large equipment or machinery requiring chains to secure in transit?",
                            "No"});
                table21.AddRow(new string[] {
                            "Do you haul any hazardous materials?",
                            "No"});
                table21.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table21.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table21.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table21.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from a South Carolina " +
                                "state department?",
                            "Yes"});
                table21.AddRow(new string[] {
                            "Do the owner(s) of this business have a combined majority ownership in any other " +
                                "transportation business?",
                            "No"});
#line 34
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table21, "Then ");
#line hidden
#line 54
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table22.AddRow(new string[] {
                            "First Name",
                            "Test"});
                table22.AddRow(new string[] {
                            "Last Name",
                            "Driver"});
                table22.AddRow(new string[] {
                            "Business Email",
                            "abc@321.com"});
                table22.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table22.AddRow(new string[] {
                            "Business Website",
                            ""});
                table22.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table22.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table22.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Test"});
                table22.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Owner"});
                table22.AddRow(new string[] {
                            "Owner\'s Address",
                            "806 Universal Dr"});
                table22.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table22.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "29209"});
                table22.AddRow(new string[] {
                            "Owner\'s City",
                            "Columbia"});
                table22.AddRow(new string[] {
                            "Owner\'s State",
                            "SC"});
#line 55
 testRunner.And("user enters contact information:", ((string)(null)), table22, "And ");
#line hidden
#line 71
 testRunner.Then("user verifies the appearance of the Decline page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Towing Services Declined Garage Keeper’s Liability")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_TowingServices_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SC")]
        public void CATowingServicesDeclinedGarageKeeperSLiability()
        {
            string[] tagsOfScenario = new string[] {
                    "Declined",
                    "CA",
                    "Regression",
                    "SC"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Towing Services Declined Garage Keeper’s Liability", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 74
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table23.AddRow(new string[] {
                            "Towing Services",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles;Tools or Equipment",
                            "29209",
                            "CA"});
#line 75
 testRunner.Given("user starts a quote with:", ((string)(null)), table23, "Given ");
#line hidden
#line 78
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table24.AddRow(new string[] {
                            "test",
                            "No",
                            ""});
#line 79
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table24, "Then ");
#line hidden
#line 85
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table25.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "806 Universal Dr",
                            "",
                            "Columbia",
                            ""});
#line 87
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table25, "And ");
#line hidden
#line 90
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fifth Wheel",
                            "Plowing Snow"});
                table26.AddRow(new string[] {
                            "1FTFW1E88NFA58133",
                            "South Carolina",
                            "No",
                            "No"});
#line 92
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table26, "And ");
#line hidden
#line 95
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 96
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table27.AddRow(new string[] {
                            "Test",
                            "Driver",
                            "SC",
                            "03/13/1986",
                            "Yes 3 or more years",
                            "No",
                            "085671243"});
#line 97
 testRunner.And("user creates a driver with these values:", ((string)(null)), table27, "And ");
#line hidden
#line 100
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table28.AddRow(new string[] {
                            "Do you haul intermodal containers?",
                            "No"});
                table28.AddRow(new string[] {
                            "Is your business on call 24/7?",
                            "No"});
                table28.AddRow(new string[] {
                            "Does your business also have a repair shop, impound lot, or salvage yard?",
                            "Yes we have a repair shop, impound lot, or salvage yard"});
                table28.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table28.AddRow(new string[] {
                            "Do you haul any fine art or jewelry?",
                            "No"});
                table28.AddRow(new string[] {
                            "Do you provide residential moving services?",
                            "No"});
                table28.AddRow(new string[] {
                            "Does your business engage in team driving?",
                            "No - one driver per haul"});
                table28.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table28.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table28.AddRow(new string[] {
                            "I agree to submit proof of insurance claims history, also known as loss runs, for" +
                                " the last 3 years within 30 days of the effective date of the policy",
                            "true"});
                table28.AddRow(new string[] {
                            @"This policy is only for vehicles you own or lease for business purposes and also add to the policy.  It does not cover vehicles on your business premises that you are repairing, servicing, or have in an impound, or salvage yard.   Separate coverage known as garagekeeper's liability must be purchased.",
                            "I do not agree"});
                table28.AddRow(new string[] {
                            "Do you haul large equipment or machinery requiring chains to secure in transit?",
                            "No"});
                table28.AddRow(new string[] {
                            "Do you haul any hazardous materials?",
                            "No"});
                table28.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table28.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table28.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table28.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from a South Carolina " +
                                "state department?",
                            "Yes"});
                table28.AddRow(new string[] {
                            "Do the owner(s) of this business have a combined majority ownership in any other " +
                                "transportation business?",
                            "No"});
#line 101
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table28, "Then ");
#line hidden
#line 121
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table29.AddRow(new string[] {
                            "First Name",
                            "Test"});
                table29.AddRow(new string[] {
                            "Last Name",
                            "Driver"});
                table29.AddRow(new string[] {
                            "Business Email",
                            "abc@3212.com"});
                table29.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5209"});
                table29.AddRow(new string[] {
                            "Business Website",
                            ""});
                table29.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table29.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table29.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Test"});
                table29.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Owner"});
                table29.AddRow(new string[] {
                            "Owner\'s Address",
                            "806 Universal Dr"});
                table29.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table29.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "29209"});
                table29.AddRow(new string[] {
                            "Owner\'s City",
                            "Columbia"});
                table29.AddRow(new string[] {
                            "Owner\'s State",
                            "SC"});
#line 122
 testRunner.And("user enters contact information:", ((string)(null)), table29, "And ");
#line hidden
#line 138
 testRunner.Then("user verifies the appearance of the Decline page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Towing Services Declined Loss Coverage Jewelry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_TowingServices_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SC")]
        public void CATowingServicesDeclinedLossCoverageJewelry()
        {
            string[] tagsOfScenario = new string[] {
                    "Declined",
                    "CA",
                    "Regression",
                    "SC"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Towing Services Declined Loss Coverage Jewelry", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 141
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table30.AddRow(new string[] {
                            "Towing Services",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles;Tools or Equipment",
                            "29209",
                            "CA"});
#line 142
 testRunner.Given("user starts a quote with:", ((string)(null)), table30, "Given ");
#line hidden
#line 145
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table31.AddRow(new string[] {
                            "test",
                            "No",
                            ""});
#line 146
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table31, "Then ");
#line hidden
#line 152
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 153
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table32.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "806 Universal Dr",
                            "",
                            "Columbia",
                            ""});
#line 154
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table32, "And ");
#line hidden
#line 157
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 158
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fifth Wheel",
                            "Plowing Snow"});
                table33.AddRow(new string[] {
                            "1FTFW1E88NFA58133",
                            "South Carolina",
                            "No",
                            "No"});
#line 159
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table33, "And ");
#line hidden
#line 162
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 163
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table34.AddRow(new string[] {
                            "Test",
                            "Driver",
                            "SC",
                            "03/13/1986",
                            "Yes 3 or more years",
                            "No",
                            "085671243"});
#line 164
 testRunner.And("user creates a driver with these values:", ((string)(null)), table34, "And ");
#line hidden
#line 167
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table35.AddRow(new string[] {
                            "Do you haul intermodal containers?",
                            "No"});
                table35.AddRow(new string[] {
                            "Is your business on call 24/7?",
                            "No"});
                table35.AddRow(new string[] {
                            "Does your business also have a repair shop, impound lot, or salvage yard?",
                            "No we only provide towing or roadside assistance services"});
                table35.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table35.AddRow(new string[] {
                            "Do you haul any fine art or jewelry?",
                            "Yes"});
                table35.AddRow(new string[] {
                            "Do you provide residential moving services?",
                            "No"});
                table35.AddRow(new string[] {
                            "Does your business engage in team driving?",
                            "No - one driver per haul"});
                table35.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table35.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table35.AddRow(new string[] {
                            "I agree to submit proof of insurance claims history, also known as loss runs, for" +
                                " the last 3 years within 30 days of the effective date of the policy",
                            "true"});
                table35.AddRow(new string[] {
                            "If you choose to purchase the optional Cargo Coverage then claims for damage or l" +
                                "oss regarding fine art or jewelry will not be covered.",
                            "I do not agree"});
                table35.AddRow(new string[] {
                            "Do you haul large equipment or machinery requiring chains to secure in transit?",
                            "No"});
                table35.AddRow(new string[] {
                            "Do you haul any hazardous materials?",
                            "No"});
                table35.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table35.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table35.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table35.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from a South Carolina " +
                                "state department?",
                            "Yes"});
                table35.AddRow(new string[] {
                            "Do the owner(s) of this business have a combined majority ownership in any other " +
                                "transportation business?",
                            "No"});
#line 168
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table35, "Then ");
#line hidden
#line 188
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table36.AddRow(new string[] {
                            "First Name",
                            "Test"});
                table36.AddRow(new string[] {
                            "Last Name",
                            "Driver"});
                table36.AddRow(new string[] {
                            "Business Email",
                            "abc@3212.com"});
                table36.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5209"});
                table36.AddRow(new string[] {
                            "Business Website",
                            ""});
                table36.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table36.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table36.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Test"});
                table36.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Owner"});
                table36.AddRow(new string[] {
                            "Owner\'s Address",
                            "806 Universal Dr"});
                table36.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table36.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "29209"});
                table36.AddRow(new string[] {
                            "Owner\'s City",
                            "Columbia"});
                table36.AddRow(new string[] {
                            "Owner\'s State",
                            "SC"});
#line 189
 testRunner.And("user enters contact information:", ((string)(null)), table36, "And ");
#line hidden
#line 205
 testRunner.Then("user verifies the appearance of the Decline page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
