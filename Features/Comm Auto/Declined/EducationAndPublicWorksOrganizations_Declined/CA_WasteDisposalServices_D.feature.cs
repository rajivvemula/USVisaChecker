// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.CommAuto.Declined.EducationAndPublicWorksOrganizations_Declined
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_WasteDisposalServices_DFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_WasteDisposalServices_D.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Declined/EducationAndPublicWorksOrganizations_Declined", "CA_WasteDisposalServices_D", "US 79738 - Added new CA questions", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_WasteDisposalServices_D")))
            {
                global::ApolloQAAutomation.Features.CommAuto.Declined.EducationAndPublicWorksOrganizations_Declined.CA_WasteDisposalServices_DFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Waste Disposal Services Declined Hauling Hazardous Materials")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_WasteDisposalServices_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SC")]
        public void CAWasteDisposalServicesDeclinedHaulingHazardousMaterials()
        {
            string[] tagsOfScenario = new string[] {
                    "Declined",
                    "CA",
                    "Regression",
                    "SC"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Waste Disposal Services Declined Hauling Hazardous Materials", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table50.AddRow(new string[] {
                            "Waste Disposal Services",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles;Tools or Equipment",
                            "29209",
                            "CA"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table50, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table51.AddRow(new string[] {
                            "test",
                            "No",
                            ""});
#line 11
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table51, "Then ");
#line hidden
#line 14
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table52.AddRow(new string[] {
                            "2022",
                            "Corporation",
                            "806 Universal Dr",
                            "",
                            "Columbia",
                            ""});
#line 16
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table52, "And ");
#line hidden
#line 19
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Haul",
                            "Plowing Snow"});
                table53.AddRow(new string[] {
                            "1FTFW1E88NFA58133",
                            "South Carolina",
                            "No",
                            "No"});
#line 21
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table53, "And ");
#line hidden
#line 24
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table54.AddRow(new string[] {
                            "Test",
                            "Driver",
                            "SC",
                            "03/13/1986",
                            "No",
                            "085671243"});
#line 26
 testRunner.And("user creates a driver with these values:", ((string)(null)), table54, "And ");
#line hidden
#line 29
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table55.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table55.AddRow(new string[] {
                            "How many auto insurance claims did your business file since it started?",
                            "0"});
                table55.AddRow(new string[] {
                            "Do you haul any hazardous waste or hazardous materials?",
                            "Yes"});
                table55.AddRow(new string[] {
                            "Do you enter inside customer\'s homes or buildings to pick up or deliver any items" +
                                "?",
                            "No"});
#line 30
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table55, "Then ");
#line hidden
#line 36
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table56.AddRow(new string[] {
                            "First Name",
                            "Test"});
                table56.AddRow(new string[] {
                            "Last Name",
                            "Driver"});
                table56.AddRow(new string[] {
                            "Business Email",
                            "abc@3212.com"});
                table56.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5209"});
                table56.AddRow(new string[] {
                            "Business Website",
                            ""});
                table56.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table56.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table56.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Test"});
                table56.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Owner"});
                table56.AddRow(new string[] {
                            "Owner\'s Address",
                            "806 Universal Dr"});
                table56.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table56.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "29209"});
                table56.AddRow(new string[] {
                            "Owner\'s City",
                            "Columbia"});
                table56.AddRow(new string[] {
                            "Owner\'s State",
                            "SC"});
#line 37
 testRunner.And("user enters contact information:", ((string)(null)), table56, "And ");
#line hidden
#line 53
 testRunner.Then("user verifies the appearance of the Decline page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Waste Disposal Services Declined Scheduling Debit Increase Entering Clients Ho" +
            "mes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_WasteDisposalServices_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SC")]
        public void CAWasteDisposalServicesDeclinedSchedulingDebitIncreaseEnteringClientsHomes()
        {
            string[] tagsOfScenario = new string[] {
                    "Declined",
                    "CA",
                    "Regression",
                    "SC"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Waste Disposal Services Declined Scheduling Debit Increase Entering Clients Ho" +
                    "mes", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 56
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table57.AddRow(new string[] {
                            "Waste Disposal Services",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles;Tools or Equipment",
                            "29209",
                            "CA"});
#line 57
 testRunner.Given("user starts a quote with:", ((string)(null)), table57, "Given ");
#line hidden
#line 60
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table58.AddRow(new string[] {
                            "test",
                            "No",
                            ""});
#line 61
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table58, "Then ");
#line hidden
#line 67
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table59.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "806 Universal Dr",
                            "",
                            "Columbia",
                            ""});
#line 69
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table59, "And ");
#line hidden
#line 72
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Haul",
                            "Plowing Snow"});
                table60.AddRow(new string[] {
                            "1FTFW1E88NFA58133",
                            "South Carolina",
                            "No",
                            "No"});
#line 74
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table60, "And ");
#line hidden
#line 77
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table61.AddRow(new string[] {
                            "Test",
                            "Driver",
                            "SC",
                            "03/13/1986",
                            "No",
                            "085671243"});
#line 79
 testRunner.And("user creates a driver with these values:", ((string)(null)), table61, "And ");
#line hidden
#line 82
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table62.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table62.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table62.AddRow(new string[] {
                            "Do you haul any hazardous waste or hazardous materials?",
                            "No"});
                table62.AddRow(new string[] {
                            "Do you enter inside customer\'s homes or buildings to pick up or deliver any items" +
                                "?",
                            "Yes"});
#line 83
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table62, "Then ");
#line hidden
#line 89
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table63.AddRow(new string[] {
                            "First Name",
                            "Test"});
                table63.AddRow(new string[] {
                            "Last Name",
                            "Driver"});
                table63.AddRow(new string[] {
                            "Business Email",
                            "abc@3212.com"});
                table63.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5209"});
                table63.AddRow(new string[] {
                            "Business Website",
                            ""});
                table63.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table63.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table63.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Test"});
                table63.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Owner"});
                table63.AddRow(new string[] {
                            "Owner\'s Address",
                            "806 Universal Dr"});
                table63.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table63.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "29209"});
                table63.AddRow(new string[] {
                            "Owner\'s City",
                            "Columbia"});
                table63.AddRow(new string[] {
                            "Owner\'s State",
                            "SC"});
#line 90
 testRunner.And("user enters contact information:", ((string)(null)), table63, "And ");
#line hidden
#line 106
 testRunner.Then("user verifies the appearance of the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 107
 testRunner.Then("user clicks continue from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
 testRunner.Then("user verifies the appearance of the Quote Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table64.AddRow(new string[] {
                            "Yearly",
                            "No"});
#line 109
 testRunner.And("user completes their Quote", ((string)(null)), table64, "And ");
#line hidden
#line 112
 testRunner.Then("user clicks continue from the Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table65.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 114
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table65, "And ");
#line hidden
#line 117
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                            "Payment Plan",
                            "Card Type"});
                table66.AddRow(new string[] {
                            "12 Monthly",
                            "Visa"});
#line 118
    testRunner.Then("user goes to purchase a plan using the following information:", ((string)(null)), table66, "Then ");
#line hidden
#line 121
 testRunner.Then("user clicks purchase", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
 testRunner.Then("user verifies the Thank You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
