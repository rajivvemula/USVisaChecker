// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.CommAuto.Declined.TransportationAndWarehousing_Declined
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_TruckingRetailToHomesNoFurniture_DFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_TruckingRetailToHomesNoFurniture_D.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Declined/TransportationAndWarehousing_Declined", "CA_TruckingRetailToHomesNoFurniture_D", "A short summary of the feature", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_TruckingRetailToHomesNoFurniture_D")))
            {
                global::ApolloQAAutomation.Features.CommAuto.Declined.TransportationAndWarehousing_Declined.CA_TruckingRetailToHomesNoFurniture_DFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Trucking Retail To Homes No Furniture Declined Too Many Accidents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_TruckingRetailToHomesNoFurniture_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CATruckingRetailToHomesNoFurnitureDeclinedTooManyAccidents()
        {
            string[] tagsOfScenario = new string[] {
                    "Transportation",
                    "Declined",
                    "Regression",
                    "IL",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Trucking Retail To Homes No Furniture Declined Too Many Accidents", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table131.AddRow(new string[] {
                            "Trucking: Retail to Homes; No Furniture or Mattress",
                            "2",
                            "I Run My Business From Property I Own",
                            "Vehicles",
                            "60634",
                            "CA"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table131, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table132.AddRow(new string[] {
                            "",
                            "",
                            ""});
#line 11
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table132, "Then ");
#line hidden
#line 17
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table133.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "3622 N Newcastle Ave",
                            "",
                            "Chicago",
                            ""});
#line 19
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table133, "And ");
#line hidden
#line 22
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table134.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "Illinois",
                            "2800"});
#line 24
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table134, "And ");
#line hidden
#line 27
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table135.AddRow(new string[] {
                            "Sol",
                            "Badguy",
                            "IL",
                            "03/13/1988",
                            "Yes 3 or more years",
                            "",
                            "",
                            "",
                            "Yes",
                            "A56712812351"});
#line 29
 testRunner.And("user creates a driver with these values:", ((string)(null)), table135, "And ");
#line hidden
#line 32
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 33
 testRunner.Then("user verifies the appearance of the Drivers Incidents page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                            "Driver",
                            "Date",
                            "Incident Type",
                            "At Fault"});
                table136.AddRow(new string[] {
                            "Sol Badguy",
                            "11/11/2021",
                            "Accident",
                            "Yes"});
                table136.AddRow(new string[] {
                            "Sol Badguy",
                            "11/12/2021",
                            "Accident",
                            "No"});
                table136.AddRow(new string[] {
                            "Sol Badguy",
                            "11/13/2021",
                            "Accident",
                            "Yes"});
#line 34
 testRunner.Then("user adds incidents with the following values:", ((string)(null)), table136, "Then ");
#line hidden
#line 39
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table137.AddRow(new string[] {
                            "Do you haul intermodal containers?",
                            "No"});
                table137.AddRow(new string[] {
                            "Do you have any active Trailer Interchange Agreements?",
                            "No"});
                table137.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table137.AddRow(new string[] {
                            "Do you haul any fine art or jewelry?",
                            "No"});
                table137.AddRow(new string[] {
                            "Do you provide residential moving services?",
                            "No"});
                table137.AddRow(new string[] {
                            "Does your business engage in team driving?",
                            "No - one driver per haul"});
                table137.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table137.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table137.AddRow(new string[] {
                            "I agree to submit proof of insurance claims history, also known as loss runs, for" +
                                " the last 3 years within 30 days of the effective date of the policy",
                            "true"});
                table137.AddRow(new string[] {
                            "Do you haul any of these? Check all that apply:",
                            ""});
                table137.AddRow(new string[] {
                            "Do you haul large equipment or machinery requiring chains to secure in transit?",
                            "No"});
                table137.AddRow(new string[] {
                            "Do you haul any hazardous materials?",
                            "No"});
                table137.AddRow(new string[] {
                            "Do you participate in a delivery service on behalf of Amazon.com, Inc.?",
                            "No"});
                table137.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table137.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table137.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table137.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from the Illinois Comm" +
                                "erce Commission?",
                            "No"});
#line 40
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table137, "Then ");
#line hidden
#line 59
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table138.AddRow(new string[] {
                            "First Name",
                            "Sol"});
                table138.AddRow(new string[] {
                            "Last Name",
                            "Badguy"});
                table138.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table138.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table138.AddRow(new string[] {
                            "Business Website",
                            ""});
                table138.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table138.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table138.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larry"});
                table138.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barry"});
                table138.AddRow(new string[] {
                            "Owner\'s Address",
                            "3622 N Newcastle Ave"});
                table138.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table138.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "60634"});
                table138.AddRow(new string[] {
                            "Owner\'s City",
                            "Chicago"});
                table138.AddRow(new string[] {
                            "Owner\'s State",
                            "IL"});
#line 61
 testRunner.And("user enters contact information:", ((string)(null)), table138, "And ");
#line hidden
#line 77
 testRunner.Then("user verifies the appearance of the Decline page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Trucking Retail To Homes No Furniture Declined Two Or More Convictions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_TruckingRetailToHomesNoFurniture_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CATruckingRetailToHomesNoFurnitureDeclinedTwoOrMoreConvictions()
        {
            string[] tagsOfScenario = new string[] {
                    "Transportation",
                    "Declined",
                    "Regression",
                    "IL",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Trucking Retail To Homes No Furniture Declined Two Or More Convictions", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 82
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table139.AddRow(new string[] {
                            "Trucking: Retail to Homes; No Furniture or Mattress",
                            "2",
                            "I Run My Business From Property I Own",
                            "Vehicles",
                            "60634",
                            "CA"});
#line 83
 testRunner.Given("user starts a quote with:", ((string)(null)), table139, "Given ");
#line hidden
#line 86
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table140.AddRow(new string[] {
                            "",
                            "",
                            ""});
#line 87
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table140, "Then ");
#line hidden
#line 93
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 94
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table141.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "3622 N Newcastle Ave",
                            "",
                            "Chicago",
                            ""});
#line 95
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table141, "And ");
#line hidden
#line 98
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table142.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "Illinois",
                            "2800"});
#line 100
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table142, "And ");
#line hidden
#line 103
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table143.AddRow(new string[] {
                            "Sol",
                            "Badguy",
                            "IL",
                            "03/13/1988",
                            "Yes 3 or more years",
                            "",
                            "",
                            "",
                            "Yes",
                            "A56712812351"});
#line 105
 testRunner.And("user creates a driver with these values:", ((string)(null)), table143, "And ");
#line hidden
#line 108
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                            "Driver",
                            "Date",
                            "Incident Type",
                            "Violation/Conviction",
                            "Another V/C",
                            "Violation/Conviction",
                            "Another V/C"});
                table144.AddRow(new string[] {
                            "Sol Badguy",
                            "11/11/2021",
                            "Violation/Conviction",
                            "Hit and Run",
                            "Yes",
                            "Reckless/Careless driving",
                            "No"});
#line 109
 testRunner.Then("user adds an incident with variable values:", ((string)(null)), table144, "Then ");
#line hidden
#line 112
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table145.AddRow(new string[] {
                            "Do you haul intermodal containers?",
                            "No"});
                table145.AddRow(new string[] {
                            "Do you have any active Trailer Interchange Agreements?",
                            "No"});
                table145.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table145.AddRow(new string[] {
                            "Do you haul any fine art or jewelry?",
                            "No"});
                table145.AddRow(new string[] {
                            "Do you provide residential moving services?",
                            "No"});
                table145.AddRow(new string[] {
                            "Does your business engage in team driving?",
                            "No - one driver per haul"});
                table145.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table145.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table145.AddRow(new string[] {
                            "I agree to submit proof of insurance claims history, also known as loss runs, for" +
                                " the last 3 years within 30 days of the effective date of the policy",
                            "true"});
                table145.AddRow(new string[] {
                            "Do you haul any of these? Check all that apply:",
                            ""});
                table145.AddRow(new string[] {
                            "Do you haul large equipment or machinery requiring chains to secure in transit?",
                            "No"});
                table145.AddRow(new string[] {
                            "Do you participate in a delivery service on behalf of Amazon.com, Inc.?",
                            "No"});
                table145.AddRow(new string[] {
                            "Do you haul any hazardous materials?",
                            "No"});
                table145.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table145.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table145.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table145.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from the Illinois Comm" +
                                "erce Commission?",
                            "No"});
#line 113
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table145, "Then ");
#line hidden
#line 132
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table146.AddRow(new string[] {
                            "First Name",
                            "Sol"});
                table146.AddRow(new string[] {
                            "Last Name",
                            "Badguy"});
                table146.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table146.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table146.AddRow(new string[] {
                            "Business Website",
                            ""});
                table146.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table146.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table146.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larry"});
                table146.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barry"});
                table146.AddRow(new string[] {
                            "Owner\'s Address",
                            "3622 N Newcastle Ave"});
                table146.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table146.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "60634"});
                table146.AddRow(new string[] {
                            "Owner\'s City",
                            "Chicago"});
                table146.AddRow(new string[] {
                            "Owner\'s State",
                            "IL"});
#line 134
 testRunner.And("user enters contact information:", ((string)(null)), table146, "And ");
#line hidden
#line 150
 testRunner.Then("user verifies the appearance of the Decline page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Trucking Retail To Homes No Furniture Declined 5 or More Violations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_TruckingRetailToHomesNoFurniture_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CATruckingRetailToHomesNoFurnitureDeclined5OrMoreViolations()
        {
            string[] tagsOfScenario = new string[] {
                    "Transportation",
                    "Declined",
                    "Regression",
                    "IL",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Trucking Retail To Homes No Furniture Declined 5 or More Violations", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 155
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table147.AddRow(new string[] {
                            "Trucking: Retail to Homes; No Furniture or Mattress",
                            "2",
                            "I Run My Business From Property I Own",
                            "Vehicles",
                            "60634",
                            "CA"});
#line 156
 testRunner.Given("user starts a quote with:", ((string)(null)), table147, "Given ");
#line hidden
#line 159
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table148.AddRow(new string[] {
                            "",
                            "",
                            ""});
#line 160
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table148, "Then ");
#line hidden
#line 166
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 167
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table149.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "3622 N Newcastle Ave",
                            "",
                            "Chicago",
                            ""});
#line 168
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table149, "And ");
#line hidden
#line 171
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 172
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table150.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "Illinois",
                            "2800"});
#line 173
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table150, "And ");
#line hidden
#line 176
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 177
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table151.AddRow(new string[] {
                            "Sol",
                            "Badguy",
                            "IL",
                            "03/13/1988",
                            "Yes 3 or more years",
                            "",
                            "",
                            "",
                            "Yes",
                            "A56712812351"});
#line 178
 testRunner.And("user creates a driver with these values:", ((string)(null)), table151, "And ");
#line hidden
#line 181
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                            "Driver",
                            "Date",
                            "Incident Type",
                            "Violation/Conviction",
                            "Another V/C"});
                table152.AddRow(new string[] {
                            "Sol Badguy",
                            "11/11/2021",
                            "Violation/Conviction",
                            "Equipment/Safety Violation",
                            "No"});
#line 182
 testRunner.Then("user adds an incident with variable values:", ((string)(null)), table152, "Then ");
#line hidden
#line 185
 testRunner.Then("user will add another incident", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                            "Driver",
                            "Date",
                            "Incident Type",
                            "Violation/Conviction",
                            "Reckless",
                            "Another V/C"});
                table153.AddRow(new string[] {
                            "Sol Badguy",
                            "11/12/2021",
                            "Violation/Conviction",
                            "Speeding 16 MPH or more over the Speed Limit",
                            "No",
                            "No"});
#line 186
 testRunner.Then("user adds an incident with variable values:", ((string)(null)), table153, "Then ");
#line hidden
#line 189
 testRunner.Then("user will add another incident", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                            "Driver",
                            "Date",
                            "Incident Type",
                            "Violation/Conviction",
                            "Another V/C"});
                table154.AddRow(new string[] {
                            "Sol Badguy",
                            "11/13/2021",
                            "Violation/Conviction",
                            "Other Minor Moving Violation",
                            "No"});
#line 190
 testRunner.Then("user adds an incident with variable values:", ((string)(null)), table154, "Then ");
#line hidden
#line 193
 testRunner.Then("user will add another incident", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                            "Driver",
                            "Date",
                            "Incident Type",
                            "Violation/Conviction",
                            "Another V/C"});
                table155.AddRow(new string[] {
                            "Sol Badguy",
                            "11/14/2021",
                            "Violation/Conviction",
                            "Red Light/Stop Sign violation",
                            "No"});
#line 194
 testRunner.Then("user adds an incident with variable values:", ((string)(null)), table155, "Then ");
#line hidden
#line 197
 testRunner.Then("user will add another incident", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                            "Driver",
                            "Date",
                            "Incident Type",
                            "Violation/Conviction",
                            "Another V/C"});
                table156.AddRow(new string[] {
                            "Sol Badguy",
                            "11/15/2021",
                            "Violation/Conviction",
                            "Other Non-Moving Violation",
                            "No"});
#line 198
 testRunner.Then("user adds an incident with variable values:", ((string)(null)), table156, "Then ");
#line hidden
#line 201
 testRunner.Then("user continues to the Operations page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table157.AddRow(new string[] {
                            "Do you haul intermodal containers?",
                            "No"});
                table157.AddRow(new string[] {
                            "Do you have any active Trailer Interchange Agreements?",
                            "No"});
                table157.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table157.AddRow(new string[] {
                            "Do you haul any fine art or jewelry?",
                            "No"});
                table157.AddRow(new string[] {
                            "Do you provide residential moving services?",
                            "No"});
                table157.AddRow(new string[] {
                            "Does your business engage in team driving?",
                            "No - one driver per haul"});
                table157.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table157.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table157.AddRow(new string[] {
                            "I agree to submit proof of insurance claims history, also known as loss runs, for" +
                                " the last 3 years within 30 days of the effective date of the policy",
                            "true"});
                table157.AddRow(new string[] {
                            "Do you haul any of these? Check all that apply:",
                            ""});
                table157.AddRow(new string[] {
                            "Do you haul large equipment or machinery requiring chains to secure in transit?",
                            "No"});
                table157.AddRow(new string[] {
                            "Do you haul any hazardous materials?",
                            "No"});
                table157.AddRow(new string[] {
                            "Do you participate in a delivery service on behalf of Amazon.com, Inc.?",
                            "No"});
                table157.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table157.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table157.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table157.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from the Illinois Comm" +
                                "erce Commission?",
                            "No"});
#line 202
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table157, "Then ");
#line hidden
#line 221
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 222
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table158.AddRow(new string[] {
                            "First Name",
                            "Sol"});
                table158.AddRow(new string[] {
                            "Last Name",
                            "Badguy"});
                table158.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table158.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table158.AddRow(new string[] {
                            "Business Website",
                            ""});
                table158.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table158.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table158.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larry"});
                table158.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barry"});
                table158.AddRow(new string[] {
                            "Owner\'s Address",
                            "3622 N Newcastle Ave"});
                table158.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table158.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "60634"});
                table158.AddRow(new string[] {
                            "Owner\'s City",
                            "Chicago"});
                table158.AddRow(new string[] {
                            "Owner\'s State",
                            "IL"});
#line 223
 testRunner.And("user enters contact information:", ((string)(null)), table158, "And ");
#line hidden
#line 239
 testRunner.Then("user verifies the appearance of the Decline page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
