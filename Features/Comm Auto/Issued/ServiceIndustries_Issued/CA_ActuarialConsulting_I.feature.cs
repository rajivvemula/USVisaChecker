// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.CommAuto.Issued.ServiceIndustries_Issued
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_ActuarialConsulting_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_ActuarialConsulting_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Issued/ServiceIndustries_Issued", "CA_ActuarialConsulting_I", @"Verify that autopay toggle is not on the Purchase Page because the cost of the policy is less than $1,000.
They will see a statement saying they are automatically enrolled in autopay.
Wisconsin - Optional credit check - choose NO, then go back and choose YES
Ohio - Optional credit check - choose NO, then go back and choose YES", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_ActuarialConsulting_I")))
            {
                global::ApolloQAAutomation.Features.CommAuto.Issued.ServiceIndustries_Issued.CA_ActuarialConsulting_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Actuarial Consulting Issued In Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_ActuarialConsulting_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Staging")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Service")]
        public void CAActuarialConsultingIssuedInWisconsin()
        {
            string[] tagsOfScenario = new string[] {
                    "Issued",
                    "Regression",
                    "Staging",
                    "WI",
                    "CA",
                    "Service"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Actuarial Consulting Issued In Wisconsin", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table117.AddRow(new string[] {
                            "Actuarial Consulting",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles",
                            "54311",
                            "CA"});
#line 10
 testRunner.Given("user starts a quote with:", ((string)(null)), table117, "Given ");
#line hidden
#line 13
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table118.AddRow(new string[] {
                            "Test wisconsin",
                            "TEST DBA",
                            ""});
#line 14
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table118, "Then ");
#line hidden
#line 17
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table119.AddRow(new string[] {
                            "2015",
                            "Limited Liability Co. (LLC)",
                            "2535 Wildflower Row",
                            "",
                            "Green Bay",
                            ""});
#line 19
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table119, "And ");
#line hidden
#line 22
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table120.AddRow(new string[] {
                            "2HGCA5534HH007097",
                            "Wisconsin",
                            "1000"});
#line 24
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table120, "And ");
#line hidden
#line 27
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table121.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "WI",
                            "09/01/1991",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            "W1234567890123"});
#line 29
 testRunner.And("user creates a driver with these values:", ((string)(null)), table121, "And ");
#line hidden
#line 32
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table122.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table122.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
#line 33
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table122, "Then ");
#line hidden
#line 37
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table123.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table123.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table123.AddRow(new string[] {
                            "Business Email",
                            "QAAutomation@biberk.com"});
                table123.AddRow(new string[] {
                            "Business Phone",
                            "(123) 123-1321"});
                table123.AddRow(new string[] {
                            "Business Website",
                            "test.com"});
                table123.AddRow(new string[] {
                            "Want Save Money",
                            "No"});
#line 39
 testRunner.And("user enters contact information:", ((string)(null)), table123, "And ");
#line hidden
#line 47
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.Then("user clicks back from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table124.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table124.AddRow(new string[] {
                            "Owner\'s First Name",
                            "TestF"});
                table124.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "TestL"});
                table124.AddRow(new string[] {
                            "Owner\'s Address",
                            "2535 Wildflower Row"});
                table124.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table124.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "54311"});
                table124.AddRow(new string[] {
                            "Owner\'s City",
                            "Green Bay"});
                table124.AddRow(new string[] {
                            "Owner\'s State",
                            "Wisconsin"});
#line 50
 testRunner.And("user enters contact information:", ((string)(null)), table124, "And ");
#line hidden
#line 60
 testRunner.Then("user verifies the appearance of the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 61
 testRunner.Then("user clicks continue from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 62
 testRunner.Then("user verifies the appearance of the Quote Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table125.AddRow(new string[] {
                            "Yearly",
                            "No"});
                table125.AddRow(new string[] {
                            "Policy Coverages",
                            "$300,000 Combined Single Limit"});
                table125.AddRow(new string[] {
                            "Vehicle 1 Coverage",
                            "$500 Comprehensive Deductible / $500 Collision Deductible"});
#line 63
 testRunner.And("user completes their Quote", ((string)(null)), table125, "And ");
#line hidden
#line 68
 testRunner.Then("user clicks continue from the Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table126.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 70
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table126, "And ");
#line hidden
#line 73
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                            "Payment Plan",
                            "Card Type"});
                table127.AddRow(new string[] {
                            "12 Monthly",
                            "Visa"});
#line 74
 testRunner.Then("user goes to purchase a plan using the following information:", ((string)(null)), table127, "Then ");
#line hidden
#line 77
 testRunner.Then("user clicks purchase", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.Then("user verifies the Thank You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.And("user verifies the PL section on the Thank You page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Actuarial Consulting Issued In Ohio")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_ActuarialConsulting_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Staging")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OH")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Service")]
        public void CAActuarialConsultingIssuedInOhio()
        {
            string[] tagsOfScenario = new string[] {
                    "Issued",
                    "Regression",
                    "Staging",
                    "OH",
                    "CA",
                    "Service"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Actuarial Consulting Issued In Ohio", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 83
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table128.AddRow(new string[] {
                            "Actuarial Consulting",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles",
                            "43614",
                            "CA"});
#line 84
 testRunner.Given("user starts a quote with:", ((string)(null)), table128, "Given ");
#line hidden
#line 87
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table129.AddRow(new string[] {
                            "Test Ohio",
                            "TEST DBA",
                            ""});
#line 88
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table129, "Then ");
#line hidden
#line 91
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 92
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table130.AddRow(new string[] {
                            "2015",
                            "Limited Liability Co. (LLC)",
                            "3025 Glendale Ave",
                            "",
                            "Toledo",
                            ""});
#line 93
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table130, "And ");
#line hidden
#line 96
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table131.AddRow(new string[] {
                            "2HGCA5534HH007097",
                            "Ohio",
                            "1000"});
#line 98
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table131, "And ");
#line hidden
#line 101
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table132.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "OH",
                            "09/01/1991",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            "OH123456"});
#line 103
 testRunner.And("user creates a driver with these values:", ((string)(null)), table132, "And ");
#line hidden
#line 106
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table133.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table133.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
#line 107
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table133, "Then ");
#line hidden
#line 111
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 112
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table134.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table134.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table134.AddRow(new string[] {
                            "Business Email",
                            "QAAutomation@biberk.com"});
                table134.AddRow(new string[] {
                            "Business Phone",
                            "(123) 123-1321"});
                table134.AddRow(new string[] {
                            "Business Website",
                            "test.com"});
                table134.AddRow(new string[] {
                            "Want Save Money",
                            "No"});
#line 113
 testRunner.And("user enters contact information:", ((string)(null)), table134, "And ");
#line hidden
#line 121
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
 testRunner.Then("user clicks back from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table135.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table135.AddRow(new string[] {
                            "Owner\'s First Name",
                            "TestF"});
                table135.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "TestL"});
                table135.AddRow(new string[] {
                            "Owner\'s Address",
                            "3025 Glendale Ave"});
                table135.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table135.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "43614"});
                table135.AddRow(new string[] {
                            "Owner\'s City",
                            "Toledo"});
                table135.AddRow(new string[] {
                            "Owner\'s State",
                            "Ohio"});
#line 124
 testRunner.And("user enters contact information:", ((string)(null)), table135, "And ");
#line hidden
#line 134
 testRunner.Then("user verifies the appearance of the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 135
 testRunner.Then("user clicks continue from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 136
 testRunner.Then("user verifies the appearance of the Quote Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table136.AddRow(new string[] {
                            "Yearly",
                            "No"});
                table136.AddRow(new string[] {
                            "Policy Coverages",
                            "$300,000 Combined Single Limit"});
                table136.AddRow(new string[] {
                            "Vehicle 1 Coverage",
                            "$500 Comprehensive Deductible / $500 Collision Deductible"});
#line 137
 testRunner.And("user completes their Quote", ((string)(null)), table136, "And ");
#line hidden
#line 142
 testRunner.Then("user clicks continue from the Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 143
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table137.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 144
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table137, "And ");
#line hidden
#line 147
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                            "Payment Plan",
                            "Card Type"});
                table138.AddRow(new string[] {
                            "12 Monthly",
                            "Visa"});
#line 148
 testRunner.Then("user goes to purchase a plan using the following information:", ((string)(null)), table138, "Then ");
#line hidden
#line 151
 testRunner.Then("user clicks purchase", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 152
 testRunner.Then("user verifies the Thank You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 153
 testRunner.And("user verifies the PL section on the Thank You page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Actuarial Consulting Issued In Illinois With Mandatory Autopay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_ActuarialConsulting_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Staging")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Service")]
        public void CAActuarialConsultingIssuedInIllinoisWithMandatoryAutopay()
        {
            string[] tagsOfScenario = new string[] {
                    "Issued",
                    "Regression",
                    "Staging",
                    "IL",
                    "CA",
                    "Service"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Actuarial Consulting Issued In Illinois With Mandatory Autopay", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 157
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table139.AddRow(new string[] {
                            "Actuarial Consulting",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles",
                            "46001",
                            "CA"});
#line 158
 testRunner.Given("user starts a quote with:", ((string)(null)), table139, "Given ");
#line hidden
#line 161
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table140.AddRow(new string[] {
                            "Test CA",
                            "Test DBA",
                            ""});
#line 162
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table140, "Then ");
#line hidden
#line 165
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 166
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table141.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "402 E Washington St",
                            "",
                            "Alexandria",
                            ""});
#line 167
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table141, "And ");
#line hidden
#line 170
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 171
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table142.AddRow(new string[] {
                            "2HGCA5534HH007097",
                            "Indiana",
                            "20"});
#line 172
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table142, "And ");
#line hidden
#line 175
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 176
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table143.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "IN",
                            "09/01/1991",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            "1523456985"});
#line 177
 testRunner.And("user creates a driver with these values:", ((string)(null)), table143, "And ");
#line hidden
#line 180
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table144.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table144.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
#line 181
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table144, "Then ");
#line hidden
#line 185
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 186
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table145.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table145.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table145.AddRow(new string[] {
                            "Business Email",
                            "qaautomation@biberk.com"});
                table145.AddRow(new string[] {
                            "Business Phone",
                            "(123) 123-1321"});
                table145.AddRow(new string[] {
                            "Business Website",
                            "test.com"});
                table145.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table145.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table145.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table145.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table145.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table145.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table145.AddRow(new string[] {
                            "Owner\'s First Name",
                            "TestF"});
                table145.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "TestL"});
                table145.AddRow(new string[] {
                            "Owner\'s Address",
                            "402 E Washington St"});
                table145.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table145.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "46001"});
                table145.AddRow(new string[] {
                            "Owner\'s City",
                            "Alexandria"});
                table145.AddRow(new string[] {
                            "Owner\'s State",
                            "Indiana"});
#line 187
 testRunner.And("user enters contact information:", ((string)(null)), table145, "And ");
#line hidden
#line 207
 testRunner.Then("user verifies the appearance of the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 208
 testRunner.Then("user clicks continue from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 209
 testRunner.Then("user verifies the appearance of the Quote Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table146.AddRow(new string[] {
                            "Yearly",
                            ""});
                table146.AddRow(new string[] {
                            "Policy Coverages",
                            "$100,000 Combined Single Limit"});
                table146.AddRow(new string[] {
                            "Vehicle 1 Coverage",
                            "No Physical Damage Coverage"});
#line 210
 testRunner.And("user completes their Quote", ((string)(null)), table146, "And ");
#line hidden
#line 215
 testRunner.Then("user verifies the current price is less than $1,000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
 testRunner.Then("user clicks continue from the Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 217
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table147.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 218
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table147, "And ");
#line hidden
#line 221
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                            "Payment Plan",
                            "Card Type",
                            "Autopay"});
                table148.AddRow(new string[] {
                            "12 Monthly",
                            "Visa",
                            "Required"});
#line 222
 testRunner.Then("user goes to purchase a plan using the following information:", ((string)(null)), table148, "Then ");
#line hidden
#line 225
 testRunner.Then("user clicks purchase", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 226
 testRunner.Then("user verifies the Thank You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 227
 testRunner.And("user verifies the PL section on the Thank You page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 228
 testRunner.And("user verifies the BOP section on the Thank You page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
