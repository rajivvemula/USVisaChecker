// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.CommAuto.Issued.TransportationAndWarehousing_Issued
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_MovingCompany_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_MovingCompany_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Issued/TransportationAndWarehousing_Issued", "CA_MovingCompany_I", "Purpose: Verify question \"What services do you provide?\" appears and is functiona" +
                    "l as well as \"Do you haul any of these? Check all that apply: \" pops up after ", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_MovingCompany_I")))
            {
                global::ApolloQAAutomation.Features.CommAuto.Issued.TransportationAndWarehousing_Issued.CA_MovingCompany_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Moving Company Issued In Florida")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_MovingCompany_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("FL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("YourServices")]
        public void CAMovingCompanyIssuedInFlorida()
        {
            string[] tagsOfScenario = new string[] {
                    "Issued",
                    "FL",
                    "Transportation",
                    "CA",
                    "Regression",
                    "YourServices"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Moving Company Issued In Florida", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table365.AddRow(new string[] {
                            "Moving Company",
                            "2",
                            "I Run My Business From Property I Own",
                            "Vehicles",
                            "33065",
                            "CA"});
#line 6
 testRunner.Given("user starts a quote with:", ((string)(null)), table365, "Given ");
#line hidden
#line 9
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table366.AddRow(new string[] {
                            "",
                            "",
                            ""});
#line 10
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table366, "Then ");
#line hidden
#line 13
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table367.AddRow(new string[] {
                            "2019",
                            "Corporation",
                            "11048 Royal Palm Blvd",
                            "",
                            "Coral Springs",
                            ""});
#line 15
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table367, "And ");
#line hidden
#line 18
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table368.AddRow(new string[] {
                            "3A8FY48B48T179053",
                            "Florida",
                            "5000"});
#line 20
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table368, "And ");
#line hidden
#line 23
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table369.AddRow(new string[] {
                            "Samus",
                            "Zero",
                            "FL",
                            "01/01/1988",
                            "Yes 3 or more years",
                            "",
                            "",
                            "",
                            "No",
                            "C101010101010"});
#line 25
 testRunner.And("user creates a driver with these values:", ((string)(null)), table369, "And ");
#line hidden
#line 28
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table370.AddRow(new string[] {
                            "Do you haul intermodal containers?",
                            "No"});
                table370.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table370.AddRow(new string[] {
                            "Do you haul any fine art or jewelry?",
                            "No"});
                table370.AddRow(new string[] {
                            "Do you provide residential moving services?",
                            "Yes"});
                table370.AddRow(new string[] {
                            "Does your business engage in team driving?",
                            "No - one driver per haul"});
                table370.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table370.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table370.AddRow(new string[] {
                            "What services do you provide?",
                            "Moving Services and other Delivery/Trucking services are provided"});
                table370.AddRow(new string[] {
                            "Do you haul any of these? Check all that apply:",
                            "Livestock"});
                table370.AddRow(new string[] {
                            "Do you haul large equipment or machinery requiring chains to secure in transit?",
                            "No"});
                table370.AddRow(new string[] {
                            "Do you haul any hazardous materials?",
                            "No"});
                table370.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table370.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table370.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table370.AddRow(new string[] {
                            "I agree to provide a claims history (also known as a \"loss run\") that matches the" +
                                " information in this application for the last 3 years within 30 days of {effecti" +
                                "ve date}.",
                            "true"});
#line 29
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table370, "Then ");
#line hidden
#line 46
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table371 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table371.AddRow(new string[] {
                            "First Name",
                            "Mona"});
                table371.AddRow(new string[] {
                            "Last Name",
                            "Leo"});
                table371.AddRow(new string[] {
                            "Business Email",
                            "test@test.com"});
                table371.AddRow(new string[] {
                            "Business Phone",
                            "(777) 777-7777"});
                table371.AddRow(new string[] {
                            "Business Website",
                            ""});
                table371.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table371.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table371.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Flo"});
                table371.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Mili"});
                table371.AddRow(new string[] {
                            "Owner\'s Address",
                            "11048 Royal Palm Blvd"});
                table371.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table371.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "33065"});
                table371.AddRow(new string[] {
                            "Owner\'s City",
                            "Coral Springs"});
                table371.AddRow(new string[] {
                            "Owner\'s State",
                            "FL"});
#line 48
 testRunner.And("user enters contact information:", ((string)(null)), table371, "And ");
#line hidden
#line 64
 testRunner.Then("user verifies the appearance of the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
 testRunner.Then("user clicks continue from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 66
 testRunner.Then("user verifies the appearance of the Quote Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table372 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table372.AddRow(new string[] {
                            "Yearly",
                            "No"});
                table372.AddRow(new string[] {
                            "Policy Coverages",
                            "$300,000 Combined Single Limit"});
                table372.AddRow(new string[] {
                            "Vehicle 1 Coverage",
                            "$1000 Comprehensive Deductible / $1000 Collision Deductible"});
#line 67
 testRunner.And("user completes their Quote", ((string)(null)), table372, "And ");
#line hidden
#line 72
 testRunner.Then("user clicks continue from the Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table373 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table373.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 74
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table373, "And ");
#line hidden
#line 77
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table374 = new TechTalk.SpecFlow.Table(new string[] {
                            "Payment Plan",
                            "Card Type"});
                table374.AddRow(new string[] {
                            "12 Monthly",
                            "Visa"});
#line 78
 testRunner.Then("user goes to purchase a plan using the following information:", ((string)(null)), table374, "Then ");
#line hidden
#line 81
 testRunner.Then("user clicks purchase", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.Then("user verifies the Thank You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
 testRunner.And("user verifies the WC section on the Thank You page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
