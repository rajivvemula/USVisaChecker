// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.CommAuto.Referred.TransportationAndWarehousing_Referred
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_UberDriver_RFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_UberDriver_R.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Referred/TransportationAndWarehousing_Referred", "CA_UberDriver_R", "Policy gets referred due to the reason Vehicle has 16 or more seats", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_UberDriver_R")))
            {
                global::ApolloQAAutomation.Features.CommAuto.Referred.TransportationAndWarehousing_Referred.CA_UberDriver_RFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Uber Driver Referred In Illinois")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_UberDriver_R")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Referred")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAUberDriverReferredInIllinois()
        {
            string[] tagsOfScenario = new string[] {
                    "Referred",
                    "CA",
                    "Regression",
                    "IL",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Uber Driver Referred In Illinois", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table491 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table491.AddRow(new string[] {
                            "Uber Driver",
                            "2",
                            "I Run My Business From Property I Own",
                            "",
                            "62704",
                            "CA"});
#line 6
 testRunner.Given("user starts a quote with:", ((string)(null)), table491, "Given ");
#line hidden
#line 9
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table492 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table492.AddRow(new string[] {
                            "",
                            "Random",
                            ""});
#line 10
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table492, "Then ");
#line hidden
#line 16
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table493 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table493.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "2112 S Spring St",
                            "",
                            "Springfield",
                            ""});
#line 18
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table493, "And ");
#line hidden
                TechTalk.SpecFlow.Table table494 = new TechTalk.SpecFlow.Table(new string[] {
                            "Address1",
                            "Address2",
                            "Zip",
                            "City",
                            "State",
                            "Select an Address"});
                table494.AddRow(new string[] {
                            "225 S canal St",
                            "",
                            "60606",
                            "Chicago",
                            "Illinois",
                            "Suggested"});
#line 21
 testRunner.And("user fills in the alternate mailing address with these values:", ((string)(null)), table494, "And ");
#line hidden
#line 24
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table495 = new TechTalk.SpecFlow.Table(new string[] {
                            "No VIN",
                            "Type Insure",
                            "Year",
                            "Make",
                            "Model",
                            "Parking Address",
                            "Vehicle Worth",
                            "Fare Box"});
                table495.AddRow(new string[] {
                            "1N4AL3A94DC145157",
                            "Car - Sedan",
                            "2013",
                            "NISSAN",
                            "ALTIMA",
                            "Illinois",
                            "2000",
                            "No"});
#line 26
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table495, "And ");
#line hidden
#line 29
 testRunner.Then("user adds another vehicle or trailer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table496 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Type Insure",
                            "Parking Address",
                            "Vehicle Worth",
                            "Fare Box",
                            "Passengers Seat"});
                table496.AddRow(new string[] {
                            "1FDEE3FS1GDC33319",
                            "Bus",
                            "Illinois",
                            "3000",
                            "No",
                            "21 - 40"});
#line 30
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table496, "And ");
#line hidden
#line 33
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 34
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table497 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table497.AddRow(new string[] {
                            "Aubrey",
                            "Plaza",
                            "IL",
                            "03/13/1985",
                            "Yes 3 or more years",
                            "No",
                            "a01234567890"});
#line 35
 testRunner.And("user creates a driver with these values:", ((string)(null)), table497, "And ");
#line hidden
#line 38
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table498 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table498.AddRow(new string[] {
                            "Do you offer \"party\" bus or limousine services where alcohol is provided or expre" +
                                "ssly permitted?",
                            "No"});
                table498.AddRow(new string[] {
                            "Do you provide any school, camp, day care, or field trip transportation for child" +
                                "ren 12 or younger?",
                            "No"});
                table498.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "51 to 100 miles"});
                table498.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table498.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table498.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table498.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
                table498.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "No"});
                table498.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from the Illinois Comm" +
                                "erce Commission?",
                            "Yes"});
                table498.AddRow(new string[] {
                            "Do the owner(s) of this business have a combined majority ownership in any other " +
                                "transportation business?",
                            "No"});
#line 39
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table498, "Then ");
#line hidden
#line 51
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table499 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table499.AddRow(new string[] {
                            "First Name",
                            "Ariana"});
                table499.AddRow(new string[] {
                            "Last Name",
                            "Grande"});
                table499.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table499.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table499.AddRow(new string[] {
                            "Business Website",
                            ""});
                table499.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table499.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table499.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table499.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table499.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table499.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table499.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larry"});
                table499.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barry"});
                table499.AddRow(new string[] {
                            "Owner\'s Address",
                            "2112 S Spring St"});
                table499.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table499.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "62704"});
                table499.AddRow(new string[] {
                            "Owner\'s City",
                            "Springfield"});
                table499.AddRow(new string[] {
                            "Owner\'s State",
                            "Illinois"});
#line 53
 testRunner.And("user enters contact information:", ((string)(null)), table499, "And ");
#line hidden
#line 73
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table500 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table500.AddRow(new string[] {
                            "1N4AL3A94DC145157",
                            "Owned",
                            "The Business"});
                table500.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 74
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table500, "And ");
#line hidden
#line 78
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.And("user verifies the CA refer confirmation appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
