// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BiBerkLOB.Features.CommAuto.Unit
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_OptCreditCheckFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_OptCreditCheck.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Unit", "CA_OptCreditCheck", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_OptCreditCheck")))
            {
                global::BiBerkLOB.Features.CommAuto.Unit.CA_OptCreditCheckFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA_OptCreditCheck opts out of Credit Check for OH")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OptCreditCheck")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CA_OptCreditCheckOptsOutOfCreditCheckForOH()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA_OptCreditCheck opts out of Credit Check for OH", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table585 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table585.AddRow(new string[] {
                            "Uber Driver",
                            "2",
                            "I Run My Business From Property I Own",
                            "",
                            "45102",
                            "CA"});
#line 5
 testRunner.Given("user starts a quote with:", ((string)(null)), table585, "Given ");
#line hidden
#line 8
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table586 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table586.AddRow(new string[] {
                            "PassOn CreditCheck",
                            "",
                            ""});
#line 9
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table586, "Then ");
#line hidden
#line 12
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table587 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table587.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "1261 Ohio Pike",
                            "",
                            "Amelia",
                            "Suggested"});
#line 13
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table587, "And ");
#line hidden
#line 16
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table588 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Trim",
                            "Parking Address",
                            "Vehicle Worth",
                            "Fare Box"});
                table588.AddRow(new string[] {
                            "3N1CB51DX3L800403",
                            "Sedan 4D XE",
                            "Ohio",
                            "2000",
                            "No"});
#line 17
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table588, "And ");
#line hidden
#line 20
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table589 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table589.AddRow(new string[] {
                            "Aubrey",
                            "Plaza",
                            "OH",
                            "03/13/1985",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            ""});
#line 22
 testRunner.And("user creates a driver with these values:", ((string)(null)), table589, "And ");
#line hidden
#line 25
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table590 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table590.AddRow(new string[] {
                            "Do you offer \"party\" bus or limousine services where alcohol is provided or expre" +
                                "ssly permitted?",
                            "No"});
                table590.AddRow(new string[] {
                            "Do you provide any school, camp, day care, or field trip transportation for child" +
                                "ren 12 or younger?",
                            "No"});
                table590.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "51 to 100 miles"});
                table590.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table590.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table590.AddRow(new string[] {
                            "Do you rent, hire, or borrow any vehicles?",
                            "No"});
                table590.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
#line 26
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table590, "Then ");
#line hidden
#line 35
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table591 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table591.AddRow(new string[] {
                            "First Name",
                            "Ariana"});
                table591.AddRow(new string[] {
                            "Last Name",
                            "Grande"});
                table591.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table591.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table591.AddRow(new string[] {
                            "Business Website",
                            ""});
                table591.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table591.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table591.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table591.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table591.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table591.AddRow(new string[] {
                            "Want Save Money",
                            "No"});
#line 37
 testRunner.And("user enters contact information:", ((string)(null)), table591, "And ");
#line hidden
#line 50
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA_OptCreditCheck opts into Credit Check for WI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OptCreditCheck")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CA_OptCreditCheckOptsIntoCreditCheckForWI()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA_OptCreditCheck opts into Credit Check for WI", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 53
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table592 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table592.AddRow(new string[] {
                            "Uber Driver",
                            "2",
                            "I Run My Business From Property I Own",
                            "",
                            "53223",
                            "CA"});
#line 54
 testRunner.Given("user starts a quote with:", ((string)(null)), table592, "Given ");
#line hidden
#line 57
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table593 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table593.AddRow(new string[] {
                            "DoThe CreditCheck",
                            "",
                            ""});
#line 58
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table593, "Then ");
#line hidden
#line 61
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table594 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table594.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "2455 W Wisconsin Ave",
                            "",
                            "Milwaukee",
                            "Suggested"});
#line 62
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table594, "And ");
#line hidden
#line 65
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table595 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fare Box"});
                table595.AddRow(new string[] {
                            "1G6DP1E33C0141237",
                            "Wisconsin",
                            "No"});
#line 66
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table595, "And ");
#line hidden
#line 69
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 70
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table596 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table596.AddRow(new string[] {
                            "Aubrey",
                            "Plaza",
                            "WI",
                            "03/13/1985",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            ""});
#line 71
 testRunner.And("user creates a driver with these values:", ((string)(null)), table596, "And ");
#line hidden
#line 74
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table597 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table597.AddRow(new string[] {
                            "Do you offer \"party\" bus or limousine services where alcohol is provided or expre" +
                                "ssly permitted?",
                            "No"});
                table597.AddRow(new string[] {
                            "Do you provide any school, camp, day care, or field trip transportation for child" +
                                "ren 12 or younger?",
                            "No"});
                table597.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "51 to 100 miles"});
                table597.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table597.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table597.AddRow(new string[] {
                            "Do you rent, hire, or borrow any vehicles?",
                            "No"});
                table597.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
#line 75
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table597, "Then ");
#line hidden
#line 84
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 85
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table598 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table598.AddRow(new string[] {
                            "First Name",
                            "Ariana"});
                table598.AddRow(new string[] {
                            "Last Name",
                            "Grande"});
                table598.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table598.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table598.AddRow(new string[] {
                            "Business Website",
                            ""});
                table598.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table598.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table598.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table598.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table598.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table598.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table598.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larryzzz"});
                table598.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barryzzzz"});
                table598.AddRow(new string[] {
                            "Owner\'s Address",
                            "2455 W Wisconsin Ave"});
                table598.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table598.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "53223"});
                table598.AddRow(new string[] {
                            "Owner\'s City",
                            "Milwaukee"});
                table598.AddRow(new string[] {
                            "Owner\'s State",
                            "Wisconsin"});
                table598.AddRow(new string[] {
                            "Select an Address",
                            "Suggested"});
#line 86
 testRunner.And("user enters contact information:", ((string)(null)), table598, "And ");
#line hidden
#line 107
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA_OptCreditCheck is mandatory for IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OptCreditCheck")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CA_OptCreditCheckIsMandatoryForIL()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA_OptCreditCheck is mandatory for IL", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 110
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table599 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table599.AddRow(new string[] {
                            "Uber Driver",
                            "2",
                            "I Run My Business From Property I Own",
                            "",
                            "60606",
                            "CA"});
#line 111
 testRunner.Given("user starts a quote with:", ((string)(null)), table599, "Given ");
#line hidden
#line 114
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table600 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table600.AddRow(new string[] {
                            "CreditCheck Mandatory",
                            "",
                            ""});
#line 115
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table600, "Then ");
#line hidden
#line 118
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table601 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table601.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "225 S Canal St",
                            "",
                            "Chicago",
                            ""});
#line 119
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table601, "And ");
#line hidden
#line 122
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table602 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fare Box"});
                table602.AddRow(new string[] {
                            "1G6DP1E33C0141237",
                            "Illinois",
                            "No"});
#line 123
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table602, "And ");
#line hidden
#line 126
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 127
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table603 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table603.AddRow(new string[] {
                            "Aubrey",
                            "Plaza",
                            "IL",
                            "03/13/1985",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            "t74187457844"});
#line 128
 testRunner.And("user creates a driver with these values:", ((string)(null)), table603, "And ");
#line hidden
#line 131
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table604 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table604.AddRow(new string[] {
                            "Do you offer \"party\" bus or limousine services where alcohol is provided or expre" +
                                "ssly permitted?",
                            "No"});
                table604.AddRow(new string[] {
                            "Do you provide any school, camp, day care, or field trip transportation for child" +
                                "ren 12 or younger?",
                            "No"});
                table604.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "51 to 100 miles"});
                table604.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table604.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table604.AddRow(new string[] {
                            "Do you rent, hire, or borrow any vehicles?",
                            "No"});
                table604.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
#line 132
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table604, "Then ");
#line hidden
#line 141
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 142
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table605 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table605.AddRow(new string[] {
                            "First Name",
                            "Ariana"});
                table605.AddRow(new string[] {
                            "Last Name",
                            "Grande"});
                table605.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table605.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table605.AddRow(new string[] {
                            "Business Website",
                            ""});
                table605.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table605.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table605.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table605.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table605.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table605.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larryzzz"});
                table605.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barryzzzz"});
                table605.AddRow(new string[] {
                            "Owner\'s Address",
                            "225 S Canal St"});
                table605.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table605.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "60606"});
                table605.AddRow(new string[] {
                            "Owner\'s City",
                            "Chicago"});
                table605.AddRow(new string[] {
                            "Owner\'s State",
                            "Illinois"});
#line 143
 testRunner.And("user enters contact information:", ((string)(null)), table605, "And ");
#line hidden
#line 162
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
