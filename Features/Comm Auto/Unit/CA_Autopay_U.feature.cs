// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BiBerkLOB.Features.CommAuto.Unit
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_Autopay_UFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_Autopay_U.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Unit", "CA_Autopay_U", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_Autopay_U")))
            {
                global::BiBerkLOB.Features.CommAuto.Unit.CA_Autopay_UFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Autopay Unit Required For Monthly Less Than $1k Total")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_Autopay_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CAAutopayUnitRequiredForMonthlyLessThan1KTotal()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Autopay Unit Required For Monthly Less Than $1k Total", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table506 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table506.AddRow(new string[] {
                            "Hat Store",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles",
                            "46750",
                            "CA"});
#line 6
 testRunner.Given("user starts a quote with:", ((string)(null)), table506, "Given ");
#line hidden
#line 9
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table507 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table507.AddRow(new string[] {
                            "Forced Autopay",
                            "",
                            ""});
#line 10
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table507, "Then ");
#line hidden
#line 13
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table508 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table508.AddRow(new string[] {
                            "2020",
                            "Corporation",
                            "1746 College Ave",
                            "",
                            "Huntington",
                            ""});
#line 15
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table508, "And ");
#line hidden
#line 18
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table509 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "How Used",
                            "Deliver Goods"});
                table509.AddRow(new string[] {
                            "KNDUP131046570381",
                            "Indiana",
                            "100",
                            "Errands only - no Delivery/Catering",
                            "No"});
#line 20
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table509, "And ");
#line hidden
#line 23
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table510 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table510.AddRow(new string[] {
                            "Forced",
                            "Autopay",
                            "IN",
                            "04/11/1981",
                            "No",
                            "152365987"});
#line 25
 testRunner.And("user creates a driver with these values:", ((string)(null)), table510, "And ");
#line hidden
#line 28
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table511 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table511.AddRow(new string[] {
                            "Do you haul any non-owned goods for pay?",
                            "No"});
                table511.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table511.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
#line 29
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table511, "Then ");
#line hidden
#line 34
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table512 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table512.AddRow(new string[] {
                            "First Name",
                            "Forcedzzzzzzzzz"});
                table512.AddRow(new string[] {
                            "Last Name",
                            "Autopayzzzz"});
                table512.AddRow(new string[] {
                            "Business Email",
                            "forcedautopay@yopmail.com"});
                table512.AddRow(new string[] {
                            "Business Phone",
                            "(657) 478-4378"});
                table512.AddRow(new string[] {
                            "Business Website",
                            ""});
                table512.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table512.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Forcedzzzzzzzzz"});
                table512.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Forcedzzzzzzzzz"});
                table512.AddRow(new string[] {
                            "Owner\'s Address",
                            "368 Harbison Blvd"});
                table512.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table512.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "29212"});
                table512.AddRow(new string[] {
                            "Owner\'s City",
                            "Columbia"});
                table512.AddRow(new string[] {
                            "Owner\'s State",
                            "SC"});
#line 36
 testRunner.And("user enters contact information:", ((string)(null)), table512, "And ");
#line hidden
#line 51
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
 testRunner.Then("user clicks continue from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.Then("user verifies the appearance of the Quote Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table513 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table513.AddRow(new string[] {
                            "Yearly",
                            "No"});
                table513.AddRow(new string[] {
                            "Policy Coverages",
                            "$100,000 Combined Single Limit"});
                table513.AddRow(new string[] {
                            "Vehicle 1 Coverage",
                            "$1000 Comprehensive Deductible / $1000 Collision Deductible"});
#line 54
 testRunner.And("user completes their Quote", ((string)(null)), table513, "And ");
#line hidden
#line 59
 testRunner.Then("user clicks continue from the Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table514 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table514.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 61
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table514, "And ");
#line hidden
#line 64
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table515 = new TechTalk.SpecFlow.Table(new string[] {
                            "Payment Plan",
                            "Autopay"});
                table515.AddRow(new string[] {
                            "12 Monthly",
                            "Required"});
#line 65
    testRunner.Then("user goes to purchase a plan using the following information:", ((string)(null)), table515, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Autopay Unit Optional For Monthly More Than $1k Total")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_Autopay_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CAAutopayUnitOptionalForMonthlyMoreThan1KTotal()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Autopay Unit Optional For Monthly More Than $1k Total", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 72
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table516 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table516.AddRow(new string[] {
                            "Hair Salon",
                            "0",
                            "I Lease a Space From Others",
                            "Vehicles",
                            "60606",
                            "CA"});
#line 73
 testRunner.Given("user starts a quote with:", ((string)(null)), table516, "Given ");
#line hidden
#line 76
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table517 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table517.AddRow(new string[] {
                            "Optional Autopay",
                            "",
                            ""});
#line 77
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table517, "Then ");
#line hidden
#line 80
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table518 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table518.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "225 S Canal St",
                            "",
                            "Chicago",
                            ""});
#line 82
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table518, "And ");
#line hidden
#line 85
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table519 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "How Used",
                            "Deliver Goods"});
                table519.AddRow(new string[] {
                            "SCBBB6ZGXMC085104",
                            "Illinois",
                            "500",
                            "Errands only - no Delivery/Catering",
                            "No"});
#line 87
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table519, "And ");
#line hidden
#line 90
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table520 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table520.AddRow(new string[] {
                            "Optional",
                            "Autopay",
                            "IL",
                            "04/11/1981",
                            "No",
                            "y78965982544"});
#line 92
 testRunner.And("user creates a driver with these values:", ((string)(null)), table520, "And ");
#line hidden
#line 95
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table521 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table521.AddRow(new string[] {
                            "Do you haul any non-owned goods for pay?",
                            "No"});
                table521.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "50 miles or less"});
                table521.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
#line 96
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table521, "Then ");
#line hidden
#line 101
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table522 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table522.AddRow(new string[] {
                            "First Name",
                            "Optionalzzzzzzzzz"});
                table522.AddRow(new string[] {
                            "Last Name",
                            "Autopayzzzz"});
                table522.AddRow(new string[] {
                            "Business Email",
                            "forcedautopay@yopmail.com"});
                table522.AddRow(new string[] {
                            "Business Phone",
                            "(657) 478-4378"});
                table522.AddRow(new string[] {
                            "Business Website",
                            ""});
                table522.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table522.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Optionalzzzzzzzzz"});
                table522.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Autopayzzzzzzzzz"});
                table522.AddRow(new string[] {
                            "Owner\'s Address",
                            "225 S Canal St"});
                table522.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table522.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "60606"});
                table522.AddRow(new string[] {
                            "Owner\'s City",
                            "Chicago"});
                table522.AddRow(new string[] {
                            "Owner\'s State",
                            "IL"});
#line 103
 testRunner.And("user enters contact information:", ((string)(null)), table522, "And ");
#line hidden
#line 118
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 119
 testRunner.Then("user clicks continue from the Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 120
 testRunner.Then("user verifies the appearance of the Quote Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table523 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table523.AddRow(new string[] {
                            "Yearly",
                            "No"});
                table523.AddRow(new string[] {
                            "Policy Coverages",
                            "$2,000,000 Combined Single Limit"});
                table523.AddRow(new string[] {
                            "Vehicle 1 Coverage",
                            "$500 Comprehensive Deductible / $500 Collision Deductible"});
                table523.AddRow(new string[] {
                            "Medical Payments",
                            "$500"});
                table523.AddRow(new string[] {
                            "Rental Reimbursement",
                            "$30 per day/60 days/$1800 total"});
#line 121
 testRunner.And("user completes their Quote", ((string)(null)), table523, "And ");
#line hidden
#line 128
 testRunner.Then("user clicks continue from the Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.Then("user verifies the appearance of the Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table524 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "OLF",
                            "Who Holds Vehicle"});
                table524.AddRow(new string[] {
                            "Yes",
                            "Owned",
                            "The Business"});
#line 130
 testRunner.And("user fills out the Additional Information page:", ((string)(null)), table524, "And ");
#line hidden
#line 133
 testRunner.Then("user clicks continue from Additional Information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table525 = new TechTalk.SpecFlow.Table(new string[] {
                            "Payment Plan",
                            "Autopay"});
                table525.AddRow(new string[] {
                            "12 Monthly",
                            "Optional"});
#line 134
    testRunner.Then("user goes to purchase a plan using the following information:", ((string)(null)), table525, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
