// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BiBerkLOB.Features.CommAuto.Unit
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_OperationsPageHelpErrorText_UFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_OperationsPageHelpErrorText_U.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Comm Auto/Unit", "CA_OperationsPageHelpErrorText_U", "Verifying Help and Error Texts using diffrent keyword and states", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_OperationsPageHelpErrorText_U")))
            {
                global::BiBerkLOB.Features.CommAuto.Unit.CA_OperationsPageHelpErrorText_UFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Unit Hot Shot Trucking In California")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Cali")]
        public void CAOperationsPageHelpErrorTextUnitHotShotTruckingInCalifornia()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation",
                    "Cali"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Unit Hot Shot Trucking In California", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table588 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table588.AddRow(new string[] {
                            "Hot Shot Trucking",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "95204",
                            "CA"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table588, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table589 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table589.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 11
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table589, "Then ");
#line hidden
#line 17
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
    testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table590 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table590.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "1687 N California St",
                            "",
                            "Stockton",
                            "Original"});
#line 19
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table590, "And ");
#line hidden
#line 22
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
    testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table591 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table591.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "California",
                            "3000"});
#line 24
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table591, "And ");
#line hidden
#line 27
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table592 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table592.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "E9758462"});
#line 29
 testRunner.And("user creates a driver with these values:", ((string)(null)), table592, "And ");
#line hidden
#line 32
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table593 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table593.AddRow(new string[] {
                            "HaulIntermodal",
                            "Error"});
                table593.AddRow(new string[] {
                            "TrailerInterchangeAgreements",
                            "Error"});
                table593.AddRow(new string[] {
                            "VehicleRadius",
                            "Error"});
                table593.AddRow(new string[] {
                            "FineArt",
                            "Error"});
                table593.AddRow(new string[] {
                            "ResidentialMoving",
                            "Error"});
                table593.AddRow(new string[] {
                            "TeamDriving",
                            "Error"});
                table593.AddRow(new string[] {
                            "TravelToMexico",
                            "Error"});
                table593.AddRow(new string[] {
                            "ClaimCount",
                            "Error"});
                table593.AddRow(new string[] {
                            "Chains",
                            "Error"});
                table593.AddRow(new string[] {
                            "Biohazard",
                            "Error"});
                table593.AddRow(new string[] {
                            "BorrowVehicles",
                            "Error"});
                table593.AddRow(new string[] {
                            "USDOT",
                            "Error"});
                table593.AddRow(new string[] {
                            "CaliOperatingAuth",
                            "Error"});
                table593.AddRow(new string[] {
                            "TrailerInterchangeAgreements",
                            "Help"});
                table593.AddRow(new string[] {
                            "VehicleRadius",
                            "Help"});
                table593.AddRow(new string[] {
                            "FineArt",
                            "Help"});
                table593.AddRow(new string[] {
                            "ResidentialMoving",
                            "Help"});
                table593.AddRow(new string[] {
                            "Biohazard",
                            "Help"});
                table593.AddRow(new string[] {
                            "BorrowVehicles",
                            "Help"});
                table593.AddRow(new string[] {
                            "USDOT",
                            "Help"});
#line 33
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table593, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Towing Services In SC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextTowingServicesInSC()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Towing Services In SC", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 57
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table594 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table594.AddRow(new string[] {
                            "Towing Services",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "29209",
                            "CA"});
#line 58
 testRunner.Given("user starts a quote with:", ((string)(null)), table594, "Given ");
#line hidden
#line 61
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table595 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table595.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 62
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table595, "Then ");
#line hidden
#line 68
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
    testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table596 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table596.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "7501 Garners Ferry Rd",
                            "",
                            "Columbia",
                            "Original"});
#line 70
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table596, "And ");
#line hidden
#line 73
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
    testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table597 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "Plowing Snow"});
                table597.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "South Carolina",
                            "5000",
                            "Yes"});
#line 75
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table597, "And ");
#line hidden
#line 78
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table598 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table598.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "E9758462"});
#line 80
 testRunner.And("user creates a driver with these values:", ((string)(null)), table598, "And ");
#line hidden
#line 83
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table599 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table599.AddRow(new string[] {
                            "OnCall",
                            "Error"});
                table599.AddRow(new string[] {
                            "Salvage",
                            "Error"});
                table599.AddRow(new string[] {
                            "SC-Authority",
                            "Error"});
                table599.AddRow(new string[] {
                            "SC-Authority",
                            "Help"});
#line 84
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table599, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Uber Driver In IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextUberDriverInIL()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Uber Driver In IL", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 92
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table600 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table600.AddRow(new string[] {
                            "Uber Driver",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "60629",
                            "CA"});
#line 93
 testRunner.Given("user starts a quote with:", ((string)(null)), table600, "Given ");
#line hidden
#line 96
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table601 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table601.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 97
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table601, "Then ");
#line hidden
#line 103
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
    testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table602 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table602.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "515 W Jefferson Blvd",
                            "",
                            "Fort Wayne",
                            "Original"});
#line 105
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table602, "And ");
#line hidden
#line 108
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
    testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table603 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "Fare Box"});
                table603.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "Illinois",
                            "3000",
                            "No"});
#line 110
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table603, "And ");
#line hidden
#line 113
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 114
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table604 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table604.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "No",
                            "E9758462"});
#line 115
 testRunner.And("user creates a driver with these values:", ((string)(null)), table604, "And ");
#line hidden
#line 118
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table605 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table605.AddRow(new string[] {
                            "PartyBus",
                            "Error"});
                table605.AddRow(new string[] {
                            "DayCare",
                            "Error"});
#line 119
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table605, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Limo Driver In CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextLimoDriverInCA()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Limo Driver In CA", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 125
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table606 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table606.AddRow(new string[] {
                            "Limo Driver",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "93644",
                            "CA"});
#line 126
 testRunner.Given("user starts a quote with:", ((string)(null)), table606, "Given ");
#line hidden
#line 129
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table607 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table607.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 130
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table607, "Then ");
#line hidden
#line 136
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 137
    testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table608 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table608.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "40112 Highway 41",
                            "",
                            "Oakhurst",
                            "Original"});
#line 138
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table608, "And ");
#line hidden
#line 141
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 142
    testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table609 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Type Insure",
                            "Parking Address",
                            "Vehicle Worth"});
                table609.AddRow(new string[] {
                            "2L1MJ5LK0FBL00196",
                            "SUV",
                            "California",
                            "8000"});
#line 143
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table609, "And ");
#line hidden
#line 146
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table610 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table610.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "No",
                            "E9758462"});
#line 148
 testRunner.And("user creates a driver with these values:", ((string)(null)), table610, "And ");
#line hidden
#line 151
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table611 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table611.AddRow(new string[] {
                            "ServiceAccess",
                            "Error"});
                table611.AddRow(new string[] {
                            "PUC",
                            "Error"});
#line 152
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table611, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Art Therapist In IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextArtTherapistInIL()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Art Therapist In IL", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 158
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table612 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table612.AddRow(new string[] {
                            "Art Therapist",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "60629",
                            "CA"});
#line 159
 testRunner.Given("user starts a quote with:", ((string)(null)), table612, "Given ");
#line hidden
#line 162
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table613 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table613.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 163
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table613, "Then ");
#line hidden
#line 169
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 170
    testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table614 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table614.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "40112 Highway 41",
                            "",
                            "Chicago",
                            "Original"});
#line 171
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table614, "And ");
#line hidden
#line 174
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 175
    testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table615 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Client Locations",
                            "Vehicle Worth"});
                table615.AddRow(new string[] {
                            "1D4GP24E17B260680",
                            "Illinois",
                            "Yes",
                            "1200"});
#line 176
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table615, "And ");
#line hidden
#line 179
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 180
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table616 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table616.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "No",
                            "E9758462"});
#line 181
 testRunner.And("user creates a driver with these values:", ((string)(null)), table616, "And ");
#line hidden
#line 184
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table617 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table617.AddRow(new string[] {
                            "EmergencyResponse",
                            "Error"});
#line 185
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table617, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Hot Shot Trucking In GA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextHotShotTruckingInGA()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Hot Shot Trucking In GA", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 190
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table618 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table618.AddRow(new string[] {
                            "Hot Shot Trucking",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "31093",
                            "CA"});
#line 191
 testRunner.Given("user starts a quote with:", ((string)(null)), table618, "Given ");
#line hidden
#line 194
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table619 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table619.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 195
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table619, "Then ");
#line hidden
#line 201
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 202
    testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table620 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table620.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "1879 Watson Blvd",
                            "",
                            "Warner Robins",
                            "Original"});
#line 203
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table620, "And ");
#line hidden
#line 206
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 207
    testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table621 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table621.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "Georgia",
                            "3000"});
#line 208
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table621, "And ");
#line hidden
#line 211
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 212
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table622 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table622.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "E9758462"});
#line 213
 testRunner.And("user creates a driver with these values:", ((string)(null)), table622, "And ");
#line hidden
#line 216
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table623 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table623.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "Yes"});
                table623.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from the Federal Motor" +
                                " Carrier Safety Administration (FMCSA)?",
                            "No"});
#line 217
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table623, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table624 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table624.AddRow(new string[] {
                            "GA-Authority",
                            "Error"});
#line 221
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table624, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Roadside Assistance In TX")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextRoadsideAssistanceInTX()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Roadside Assistance In TX", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 226
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table625 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table625.AddRow(new string[] {
                            "Roadside Assistance",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "75662",
                            "CA"});
#line 227
 testRunner.Given("user starts a quote with:", ((string)(null)), table625, "Given ");
#line hidden
#line 230
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table626 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table626.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 231
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table626, "Then ");
#line hidden
#line 237
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 238
    testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table627 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table627.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "906 US Highway 259 N",
                            "",
                            "Kilgore",
                            "Original"});
#line 239
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table627, "And ");
#line hidden
#line 242
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 243
    testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table628 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "Plowing Snow"});
                table628.AddRow(new string[] {
                            "1FUBA5CG83LL10209",
                            "Texas",
                            "9000",
                            "Yes"});
#line 244
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table628, "And ");
#line hidden
#line 247
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table629 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table629.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "TX",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "12345678"});
#line 249
 testRunner.And("user creates a driver with these values:", ((string)(null)), table629, "And ");
#line hidden
#line 252
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table630 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table630.AddRow(new string[] {
                            "TXAuth",
                            "Error"});
#line 253
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table630, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
