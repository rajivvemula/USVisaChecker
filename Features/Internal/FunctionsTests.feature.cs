// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.Internal
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class FunctionsTestsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "FunctionsTests.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Internal", "FunctionsTests", "Tests the Functions class", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "FunctionsTests")))
            {
                global::ApolloQAAutomation.Features.Internal.FunctionsTestsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FunctionsCanGetDifferentDateFromNow(string num, string unit, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Internal",
                    "Build",
                    "Functions",
                    "NoSelenium"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("num", num);
            argumentsOfScenario.Add("unit", unit);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Functions can get different date from now", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.When(string.Format("code gets {0} {1} from now", num, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.Then("the returned date/time should be in the overridden timezone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 9
 testRunner.And("the expected date/time should be approximately correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from now: Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "day")]
        public void FunctionsCanGetDifferentDateFromNow_Variant0()
        {
#line 6
this.FunctionsCanGetDifferentDateFromNow("1", "day", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from now: Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromNow_Variant1()
        {
#line 6
this.FunctionsCanGetDifferentDateFromNow("4", "days", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from now: Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "month")]
        public void FunctionsCanGetDifferentDateFromNow_Variant2()
        {
#line 6
this.FunctionsCanGetDifferentDateFromNow("1", "month", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from now: Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "months")]
        public void FunctionsCanGetDifferentDateFromNow_Variant3()
        {
#line 6
this.FunctionsCanGetDifferentDateFromNow("2", "months", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from now: Variant 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "year")]
        public void FunctionsCanGetDifferentDateFromNow_Variant4()
        {
#line 6
this.FunctionsCanGetDifferentDateFromNow("1", "year", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from now: Variant 5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "years")]
        public void FunctionsCanGetDifferentDateFromNow_Variant5()
        {
#line 6
this.FunctionsCanGetDifferentDateFromNow("8", "years", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from now: Variant 6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromNow_Variant6()
        {
#line 6
this.FunctionsCanGetDifferentDateFromNow("-1", "days", ((string[])(null)));
#line hidden
        }
        
        public virtual void FunctionsCanGetDifferentDateFromAnyDateInUTC(string setDate, string setTime, string num, string unit, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Internal",
                    "Build",
                    "Functions",
                    "NoSelenium"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("set date", setDate);
            argumentsOfScenario.Add("set time", setTime);
            argumentsOfScenario.Add("num", num);
            argumentsOfScenario.Add("unit", unit);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Functions can get different date from any date in UTC", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 22
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 23
 testRunner.Given(string.Format("the date is set to {0} and the time is set to {1} in UTC", setDate, setTime), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 24
 testRunner.When(string.Format("code gets {0} {1} from set date", num, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.Then("the returned date/time should be in the overridden timezone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 26
 testRunner.And("the expected date/time should be correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in UTC: 04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "04:52:35.5421")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "day")]
        public void FunctionsCanGetDifferentDateFromAnyDateInUTC_04052023()
        {
#line 22
this.FunctionsCanGetDifferentDateFromAnyDateInUTC("04/05/2023", "04:52:35.5421", "5", "day", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in UTC: 02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "06:12:10.41201")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromAnyDateInUTC_02052018()
        {
#line 22
this.FunctionsCanGetDifferentDateFromAnyDateInUTC("02/05/2018", "06:12:10.41201", "2", "days", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in UTC: 03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "10:42:21.231")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "month")]
        public void FunctionsCanGetDifferentDateFromAnyDateInUTC_03182021()
        {
#line 22
this.FunctionsCanGetDifferentDateFromAnyDateInUTC("03/18/2021", "10:42:21.231", "10", "month", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in UTC: 01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "18:52:54")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "months")]
        public void FunctionsCanGetDifferentDateFromAnyDateInUTC_01012025()
        {
#line 22
this.FunctionsCanGetDifferentDateFromAnyDateInUTC("01/01/2025", "18:52:54", "-5", "months", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in UTC: 06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "20:32:01.152")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "year")]
        public void FunctionsCanGetDifferentDateFromAnyDateInUTC_06231998()
        {
#line 22
this.FunctionsCanGetDifferentDateFromAnyDateInUTC("06/23/1998", "20:32:01.152", "1", "year", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in UTC: 10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "00:00:00.00000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "years")]
        public void FunctionsCanGetDifferentDateFromAnyDateInUTC_10242000()
        {
#line 22
this.FunctionsCanGetDifferentDateFromAnyDateInUTC("10/24/2000", "00:00:00.00000", "-8", "years", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in UTC: 12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "23:59:59.9999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromAnyDateInUTC_12312023()
        {
#line 22
this.FunctionsCanGetDifferentDateFromAnyDateInUTC("12/31/2023", "23:59:59.9999", "-1", "days", ((string[])(null)));
#line hidden
        }
        
        public virtual void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime(string setDate, string setTime, string num, string unit, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Internal",
                    "Build",
                    "Functions",
                    "NoSelenium"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("set date", setDate);
            argumentsOfScenario.Add("set time", setTime);
            argumentsOfScenario.Add("num", num);
            argumentsOfScenario.Add("unit", unit);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Functions can get different date from any date in system local time", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 40
 testRunner.Given(string.Format("the date is set to {0} and the time is set to {1} from the system timezone", setDate, setTime), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 41
 testRunner.When(string.Format("code gets {0} {1} from set date", num, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.Then("the returned date/time should be in the overridden timezone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.And("the expected date/time should be correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in system local time: 04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "04:52:35.5421")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "day")]
        public void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime_04052023()
        {
#line 39
this.FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime("04/05/2023", "04:52:35.5421", "5", "day", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in system local time: 02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "06:12:10.41201")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime_02052018()
        {
#line 39
this.FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime("02/05/2018", "06:12:10.41201", "2", "days", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in system local time: 03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "10:42:21.231")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "month")]
        public void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime_03182021()
        {
#line 39
this.FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime("03/18/2021", "10:42:21.231", "10", "month", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in system local time: 01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "18:52:54")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "months")]
        public void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime_01012025()
        {
#line 39
this.FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime("01/01/2025", "18:52:54", "-5", "months", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in system local time: 06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "20:32:01.152")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "year")]
        public void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime_06231998()
        {
#line 39
this.FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime("06/23/1998", "20:32:01.152", "1", "year", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in system local time: 10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "00:00:00.00000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "years")]
        public void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime_10242000()
        {
#line 39
this.FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime("10/24/2000", "00:00:00.00000", "-8", "years", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in system local time: 12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "23:59:59.9999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime_12312023()
        {
#line 39
this.FunctionsCanGetDifferentDateFromAnyDateInSystemLocalTime("12/31/2023", "23:59:59.9999", "-1", "days", ((string[])(null)));
#line hidden
        }
        
        public virtual void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride(string setDate, string setTime, string num, string unit, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Internal",
                    "Build",
                    "Functions",
                    "NoSelenium"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("set date", setDate);
            argumentsOfScenario.Add("set time", setTime);
            argumentsOfScenario.Add("num", num);
            argumentsOfScenario.Add("unit", unit);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Functions can get different date from any date in timezeon override", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 56
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 57
 testRunner.Given(string.Format("the date is set to {0} and the time is set to {1} from the overriden timezone", setDate, setTime), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 58
 testRunner.When(string.Format("code gets {0} {1} from set date", num, unit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 59
 testRunner.Then("the returned date/time should be in the overridden timezone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
 testRunner.And("the expected date/time should be correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in timezeon override: 04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "04/05/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "04:52:35.5421")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "day")]
        public void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride_04052023()
        {
#line 56
this.FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride("04/05/2023", "04:52:35.5421", "5", "day", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in timezeon override: 02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "02/05/2018")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "06:12:10.41201")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride_02052018()
        {
#line 56
this.FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride("02/05/2018", "06:12:10.41201", "2", "days", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in timezeon override: 03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "03/18/2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "10:42:21.231")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "month")]
        public void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride_03182021()
        {
#line 56
this.FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride("03/18/2021", "10:42:21.231", "10", "month", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in timezeon override: 01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "01/01/2025")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "18:52:54")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "months")]
        public void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride_01012025()
        {
#line 56
this.FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride("01/01/2025", "18:52:54", "-5", "months", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in timezeon override: 06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "06/23/1998")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "20:32:01.152")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "year")]
        public void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride_06231998()
        {
#line 56
this.FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride("06/23/1998", "20:32:01.152", "1", "year", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in timezeon override: 10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "10/24/2000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "00:00:00.00000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "years")]
        public void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride_10242000()
        {
#line 56
this.FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride("10/24/2000", "00:00:00.00000", "-8", "years", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functions can get different date from any date in timezeon override: 12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FunctionsTests")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Internal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Build")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Functions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NoSelenium")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set date", "12/31/2023")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:set time", "23:59:59.9999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:num", "-1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:unit", "days")]
        public void FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride_12312023()
        {
#line 56
this.FunctionsCanGetDifferentDateFromAnyDateInTimezeonOverride("12/31/2023", "23:59:59.9999", "-1", "days", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
