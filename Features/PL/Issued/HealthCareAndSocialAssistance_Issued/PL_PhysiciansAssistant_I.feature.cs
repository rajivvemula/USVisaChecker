// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.PL.Issued.HealthCareAndSocialAssistance_Issued
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PL_PhysiciansAssistant_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "PL_PhysiciansAssistant_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/PL/Issued/HealthCareAndSocialAssistance_Issued", "PL_PhysiciansAssistant_I", "Issuing PL policies for Physicians Assistant (PA) customers in Texas. Each scenar" +
                    "io verifies that one or more of the questions answered on the business details\r\n" +
                    "page appears and is correct on the summary page. ", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PL_PhysiciansAssistant_I")))
            {
                global::ApolloQAAutomation.Features.PL.Issued.HealthCareAndSocialAssistance_Issued.PL_PhysiciansAssistant_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL Physicians Assistant issued policy in TX")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_PhysiciansAssistant_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Health")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TX")]
        public void PLPhysiciansAssistantIssuedPolicyInTX()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Health",
                    "Issued",
                    "TX"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL Physicians Assistant issued policy in TX", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table981 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table981.AddRow(new string[] {
                            "Physicians Assistant (PA)",
                            "0",
                            "I Work at a Job Site",
                            "",
                            "77002",
                            "PL"});
#line 8
 testRunner.Given("user starts a quote with:", ((string)(null)), table981, "Given ");
#line hidden
#line 11
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table982 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Business Address",
                            "DBA"});
                table982.AddRow(new string[] {
                            "Individual/Sole Proprietor",
                            "1000 Bagby St",
                            "No"});
#line 12
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table982, "Then ");
#line hidden
#line 15
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table983 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table983.AddRow(new string[] {
                            "What year was your business started?",
                            "2020"});
                table983.AddRow(new string[] {
                            "How many healthcare professionals work for your business?",
                            "1"});
                table983.AddRow(new string[] {
                            "Do you work as an independent contractor (paid via 1099) or as an employee of a h" +
                                "ealth organization (paid via W-2)?",
                            "Independent Contractor"});
                table983.AddRow(new string[] {
                            "Have you obtained this professional healthcare designation within the last two ye" +
                                "ars?",
                            "Yes"});
                table983.AddRow(new string[] {
                            "When did you graduate or obtain this designation?",
                            ""});
#line 16
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table983, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table984 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table984.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table984.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table984.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "No"});
                table984.AddRow(new string[] {
                            "Which option best describes your current professional liability policy?",
                            "This was my first policy."});
                table984.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 23
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table984, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table985 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table985.AddRow(new string[] {
                            "Are any business owner(s) or staff an MD (Medical Doctor)?",
                            "No"});
                table985.AddRow(new string[] {
                            "Do you assist with any surgeries?",
                            "No"});
                table985.AddRow(new string[] {
                            "Which of these areas do you practice?",
                            "None of the above"});
                table985.AddRow(new string[] {
                            "Do you administer or assist with general anesthesia or deep sedation?",
                            "No"});
                table985.AddRow(new string[] {
                            "Do you practice any radiology or medical dosimetry?",
                            "No"});
                table985.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 30
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table985, "Then ");
#line hidden
#line 38
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table986 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table986.AddRow(new string[] {
                            "First Name",
                            "Physician\'s"});
                table986.AddRow(new string[] {
                            "Last Name",
                            "Assistant"});
                table986.AddRow(new string[] {
                            "Address",
                            "507 Clay St"});
                table986.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table986.AddRow(new string[] {
                            "City",
                            "Houston"});
                table986.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table986.AddRow(new string[] {
                            "Email",
                            "accountant2@biz2.com"});
                table986.AddRow(new string[] {
                            "Business Phone",
                            "1254875126"});
                table986.AddRow(new string[] {
                            "Ext",
                            ""});
                table986.AddRow(new string[] {
                            "Website/Social",
                            ""});
                table986.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 39
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table986, "Then ");
#line hidden
#line 52
 testRunner.Then("user verifies the appearance of the PL Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.Then("user selects their Yearly - Standard Quote", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.Then("user verifies the PL purchase page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table987 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table987.AddRow(new string[] {
                            "Autopay",
                            "On"});
                table987.AddRow(new string[] {
                            "CC Name",
                            "Tester EJ"});
                table987.AddRow(new string[] {
                            "CC Number",
                            "4111 1111 1111 1111"});
                table987.AddRow(new string[] {
                            "CC Expiration",
                            "03/30"});
                table987.AddRow(new string[] {
                            "Street Address",
                            "12 Bargaintown St"});
                table987.AddRow(new string[] {
                            "ZIP Code",
                            "58108"});
                table987.AddRow(new string[] {
                            "City",
                            "Fargo"});
                table987.AddRow(new string[] {
                            "Phone",
                            "321-321-3221"});
                table987.AddRow(new string[] {
                            "Extension",
                            ""});
#line 55
 testRunner.When("user fills out the PL purchase page with these values:", ((string)(null)), table987, "When ");
#line hidden
#line 66
 testRunner.Then("user verifies the PL how would you rate our service? page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.Then("user verifies the PL thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
 testRunner.And("user verifies that the following LOBs are recommended: GL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PA - Individual Employee with no healthcare designation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_PhysiciansAssistant_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Health")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TX")]
        public void PA_IndividualEmployeeWithNoHealthcareDesignation()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Health",
                    "Issued",
                    "TX"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PA - Individual Employee with no healthcare designation", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 71
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table988 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table988.AddRow(new string[] {
                            "Physicians Assistant (PA)",
                            "0",
                            "I Work at a Job Site",
                            "",
                            "77002",
                            "PL"});
#line 72
 testRunner.Given("user starts a quote with:", ((string)(null)), table988, "Given ");
#line hidden
#line 75
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table989 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Business Address",
                            "DBA"});
                table989.AddRow(new string[] {
                            "Individual/Sole Proprietor",
                            "1000 Bagby St",
                            "No"});
#line 76
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table989, "Then ");
#line hidden
#line 79
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table990 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table990.AddRow(new string[] {
                            "What year was your business started?",
                            "2020"});
                table990.AddRow(new string[] {
                            "How many healthcare professionals work for your business?",
                            "1"});
                table990.AddRow(new string[] {
                            "Do you work as an independent contractor (paid via 1099) or as an employee of a h" +
                                "ealth organization (paid via W-2)?",
                            "Employee of Health Organization"});
                table990.AddRow(new string[] {
                            "Have you obtained this professional healthcare designation within the last two ye" +
                                "ars?",
                            "No"});
#line 80
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table990, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table991 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table991.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table991.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table991.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "No"});
                table991.AddRow(new string[] {
                            "Which option best describes your current professional liability policy?",
                            "This was my first policy."});
                table991.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 86
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table991, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table992 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table992.AddRow(new string[] {
                            "Are any business owner(s) or staff an MD (Medical Doctor)?",
                            "No"});
                table992.AddRow(new string[] {
                            "Do you assist with any surgeries?",
                            "No"});
                table992.AddRow(new string[] {
                            "Which of these areas do you practice?",
                            "None of the above"});
                table992.AddRow(new string[] {
                            "Do you administer or assist with general anesthesia or deep sedation?",
                            "No"});
                table992.AddRow(new string[] {
                            "Do you practice any radiology or medical dosimetry?",
                            "No"});
                table992.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 93
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table992, "Then ");
#line hidden
#line 101
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table993 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table993.AddRow(new string[] {
                            "First Name",
                            "Physician\'s"});
                table993.AddRow(new string[] {
                            "Last Name",
                            "Assistant"});
                table993.AddRow(new string[] {
                            "Address",
                            "507 Clay St"});
                table993.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table993.AddRow(new string[] {
                            "City",
                            "Houston"});
                table993.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table993.AddRow(new string[] {
                            "Email",
                            "accountant2@biz2.com"});
                table993.AddRow(new string[] {
                            "Business Phone",
                            "1254875126"});
                table993.AddRow(new string[] {
                            "Ext",
                            ""});
                table993.AddRow(new string[] {
                            "Website/Social",
                            ""});
                table993.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 102
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table993, "Then ");
#line hidden
#line 115
 testRunner.Then("user verifies the appearance of the PL Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 116
 testRunner.Then("user selects their Yearly - Standard Quote", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 117
 testRunner.Then("user verifies the PL purchase page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table994 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table994.AddRow(new string[] {
                            "Autopay",
                            "On"});
                table994.AddRow(new string[] {
                            "CC Name",
                            "Tester EJ"});
                table994.AddRow(new string[] {
                            "CC Number",
                            "4111 1111 1111 1111"});
                table994.AddRow(new string[] {
                            "CC Expiration",
                            "03/30"});
                table994.AddRow(new string[] {
                            "Street Address",
                            "12 Bargaintown St"});
                table994.AddRow(new string[] {
                            "ZIP Code",
                            "58108"});
                table994.AddRow(new string[] {
                            "City",
                            "Fargo"});
                table994.AddRow(new string[] {
                            "Phone",
                            "321-321-3221"});
                table994.AddRow(new string[] {
                            "Extension",
                            ""});
#line 118
 testRunner.When("user fills out the PL purchase page with these values:", ((string)(null)), table994, "When ");
#line hidden
#line 129
 testRunner.Then("user verifies the PL how would you rate our service? page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.Then("user verifies the PL thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 131
 testRunner.And("user verifies that the following LOBs are recommended: GL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PA - Corporation with health students and professionals")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_PhysiciansAssistant_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Health")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TX")]
        public void PA_CorporationWithHealthStudentsAndProfessionals()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Health",
                    "Issued",
                    "TX"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PA - Corporation with health students and professionals", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 134
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table995 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table995.AddRow(new string[] {
                            "Physicians Assistant (PA)",
                            "7",
                            "I Work at a Job Site",
                            "",
                            "77002",
                            "PL"});
#line 135
 testRunner.Given("user starts a quote with:", ((string)(null)), table995, "Given ");
#line hidden
#line 138
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table996 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table996.AddRow(new string[] {
                            "Corporation",
                            "PA Health",
                            "1000 Bagby St",
                            "No"});
#line 139
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table996, "Then ");
#line hidden
#line 142
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table997 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table997.AddRow(new string[] {
                            "What year was your business started?",
                            "2020"});
                table997.AddRow(new string[] {
                            "How many healthcare professionals work for your business?",
                            "1"});
                table997.AddRow(new string[] {
                            "How many health students work for your business?",
                            "1"});
#line 143
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table997, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table998 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table998.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table998.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table998.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "No"});
                table998.AddRow(new string[] {
                            "Which option best describes your current professional liability policy?",
                            "This was my first policy."});
                table998.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 148
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table998, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table999 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table999.AddRow(new string[] {
                            "Are any business owner(s) or staff an MD (Medical Doctor)?",
                            "No"});
                table999.AddRow(new string[] {
                            "Do you assist with any surgeries?",
                            "No"});
                table999.AddRow(new string[] {
                            "Which of these areas do you practice?",
                            "None of the above"});
                table999.AddRow(new string[] {
                            "Do you administer or assist with general anesthesia or deep sedation?",
                            "No"});
                table999.AddRow(new string[] {
                            "Do you practice any radiology or medical dosimetry?",
                            "No"});
                table999.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 155
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table999, "Then ");
#line hidden
#line 163
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1000 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1000.AddRow(new string[] {
                            "First Name",
                            "Physician\'s"});
                table1000.AddRow(new string[] {
                            "Last Name",
                            "Assistant"});
                table1000.AddRow(new string[] {
                            "Address",
                            "507 Clay St"});
                table1000.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table1000.AddRow(new string[] {
                            "City",
                            "Houston"});
                table1000.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table1000.AddRow(new string[] {
                            "Email",
                            "accountant2@biz2.com"});
                table1000.AddRow(new string[] {
                            "Business Phone",
                            "1254875126"});
                table1000.AddRow(new string[] {
                            "Ext",
                            ""});
                table1000.AddRow(new string[] {
                            "Website/Social",
                            ""});
                table1000.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 164
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table1000, "Then ");
#line hidden
#line 177
 testRunner.Then("user verifies the appearance of the PL Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 178
 testRunner.Then("user selects their Yearly - Standard Quote", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 179
 testRunner.Then("user verifies the PL purchase page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1001 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1001.AddRow(new string[] {
                            "Autopay",
                            "On"});
                table1001.AddRow(new string[] {
                            "CC Name",
                            "Tester EJ"});
                table1001.AddRow(new string[] {
                            "CC Number",
                            "4111 1111 1111 1111"});
                table1001.AddRow(new string[] {
                            "CC Expiration",
                            "03/30"});
                table1001.AddRow(new string[] {
                            "Street Address",
                            "12 Bargaintown St"});
                table1001.AddRow(new string[] {
                            "ZIP Code",
                            "58108"});
                table1001.AddRow(new string[] {
                            "City",
                            "Fargo"});
                table1001.AddRow(new string[] {
                            "Phone",
                            "321-321-3221"});
                table1001.AddRow(new string[] {
                            "Extension",
                            ""});
#line 180
 testRunner.When("user fills out the PL purchase page with these values:", ((string)(null)), table1001, "When ");
#line hidden
#line 191
 testRunner.Then("user verifies the PL how would you rate our service? page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 192
 testRunner.Then("user verifies the PL thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 193
 testRunner.And("user verifies that the following LOBs are recommended: WC,GL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PA - Corporation without healthcare students")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_PhysiciansAssistant_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Health")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TX")]
        public void PA_CorporationWithoutHealthcareStudents()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Health",
                    "Issued",
                    "TX"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PA - Corporation without healthcare students", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 196
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1002 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1002.AddRow(new string[] {
                            "Physicians Assistant (PA)",
                            "7",
                            "I Work at a Job Site",
                            "",
                            "77002",
                            "PL"});
#line 197
 testRunner.Given("user starts a quote with:", ((string)(null)), table1002, "Given ");
#line hidden
#line 200
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1003 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table1003.AddRow(new string[] {
                            "Corporation",
                            "PA",
                            "1000 Bagby St",
                            "No"});
#line 201
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table1003, "Then ");
#line hidden
#line 204
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1004 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1004.AddRow(new string[] {
                            "What year was your business started?",
                            "2020"});
                table1004.AddRow(new string[] {
                            "How many healthcare professionals work for your business?",
                            "1"});
                table1004.AddRow(new string[] {
                            "How many health students work for your business?",
                            "0"});
#line 205
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table1004, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1005 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1005.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table1005.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table1005.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "No"});
                table1005.AddRow(new string[] {
                            "Which option best describes your current professional liability policy?",
                            "This was my first policy."});
                table1005.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 210
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table1005, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1006 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1006.AddRow(new string[] {
                            "Are any business owner(s) or staff an MD (Medical Doctor)?",
                            "No"});
                table1006.AddRow(new string[] {
                            "Do you assist with any surgeries?",
                            "No"});
                table1006.AddRow(new string[] {
                            "Which of these areas do you practice?",
                            "None of the above"});
                table1006.AddRow(new string[] {
                            "Do you administer or assist with general anesthesia or deep sedation?",
                            "No"});
                table1006.AddRow(new string[] {
                            "Do you practice any radiology or medical dosimetry?",
                            "No"});
                table1006.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 217
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table1006, "Then ");
#line hidden
#line 225
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1007 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1007.AddRow(new string[] {
                            "First Name",
                            "Physician\'s"});
                table1007.AddRow(new string[] {
                            "Last Name",
                            "Assistant"});
                table1007.AddRow(new string[] {
                            "Address",
                            "507 Clay St"});
                table1007.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table1007.AddRow(new string[] {
                            "City",
                            "Houston"});
                table1007.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table1007.AddRow(new string[] {
                            "Email",
                            "accountant2@biz2.com"});
                table1007.AddRow(new string[] {
                            "Business Phone",
                            "1254875126"});
                table1007.AddRow(new string[] {
                            "Ext",
                            ""});
                table1007.AddRow(new string[] {
                            "Website/Social",
                            ""});
                table1007.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 226
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table1007, "Then ");
#line hidden
#line 239
 testRunner.Then("user verifies the appearance of the PL Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 240
 testRunner.Then("user selects their Yearly - Standard Quote", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 241
 testRunner.Then("user verifies the PL purchase page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1008 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1008.AddRow(new string[] {
                            "Autopay",
                            "On"});
                table1008.AddRow(new string[] {
                            "CC Name",
                            "Tester EJ"});
                table1008.AddRow(new string[] {
                            "CC Number",
                            "4111 1111 1111 1111"});
                table1008.AddRow(new string[] {
                            "CC Expiration",
                            "03/30"});
                table1008.AddRow(new string[] {
                            "Street Address",
                            "12 Bargaintown St"});
                table1008.AddRow(new string[] {
                            "ZIP Code",
                            "58108"});
                table1008.AddRow(new string[] {
                            "City",
                            "Fargo"});
                table1008.AddRow(new string[] {
                            "Phone",
                            "321-321-3221"});
                table1008.AddRow(new string[] {
                            "Extension",
                            ""});
#line 242
 testRunner.When("user fills out the PL purchase page with these values:", ((string)(null)), table1008, "When ");
#line hidden
#line 253
 testRunner.Then("user verifies the PL how would you rate our service? page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 254
 testRunner.Then("user verifies the PL thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 255
 testRunner.And("user verifies that the following LOBs are recommended: WC,GL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
