// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.PL.Declined.ServiceIndustries
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PL_MechanicalEngineeringConsulting_DFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "PL_MechanicalEngineeringConsulting_D.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/PL/Declined/ServiceIndustries", "PL_MechanicalEngineeringConsulting_D", "Blacklist Declination based on blacklisted phone number or email address\r\n75 Sun " +
                    "Mountain Dr, Monarch, MT 59463", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PL_MechanicalEngineeringConsulting_D")))
            {
                global::ApolloQAAutomation.Features.PL.Declined.ServiceIndustries.PL_MechanicalEngineeringConsulting_DFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL Mechanical Engineering Consulting Declined due to entering a blacklisted phone" +
            " number into the about you page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_MechanicalEngineeringConsulting_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Service")]
        public void PLMechanicalEngineeringConsultingDeclinedDueToEnteringABlacklistedPhoneNumberIntoTheAboutYouPage()
        {
            string[] tagsOfScenario = new string[] {
                    "PL",
                    "Declined",
                    "Service"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL Mechanical Engineering Consulting Declined due to entering a blacklisted phone" +
                    " number into the about you page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table900 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table900.AddRow(new string[] {
                            "Mechanical Engineering Consulting",
                            "7",
                            "I Lease a Space From Others",
                            "Vehicles;Furniture;Inventory or Stock;Tools or Equipment",
                            "59463",
                            "PL"});
#line 8
 testRunner.Given("user starts a quote with:", ((string)(null)), table900, "Given ");
#line hidden
#line 11
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table901 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table901.AddRow(new string[] {
                            "Limited Liability Co LLC",
                            "Mechincal Engineers",
                            "5012 US-89",
                            "ME"});
#line 12
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table901, "Then ");
#line hidden
#line 15
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table902 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table902.AddRow(new string[] {
                            "What year was your business started?",
                            "2019"});
                table902.AddRow(new string[] {
                            "What is your estimated gross annual revenue?",
                            "500,000"});
                table902.AddRow(new string[] {
                            "Do you use a written contract or statement of work (SOW)?",
                            "Always"});
                table902.AddRow(new string[] {
                            "Who signs off on the terms & conditions for written contracts or statements of wo" +
                                "rk (SOW)?",
                            "Legal"});
#line 16
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table902, "Then ");
#line hidden
#line 22
 testRunner.Then("user verifies the appearance of the PL Coverage Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table903 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table903.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table903.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table903.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "No"});
                table903.AddRow(new string[] {
                            "Which option best describes your current professional liability policy?",
                            "This was my first policy."});
                table903.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 23
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table903, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table904 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table904.AddRow(new string[] {
                            "Do you do work involving aerospace engineering?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you advise on Geotechnical, Soils, or Structural Engineering?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you give advice on nuclear materials?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you design any weapons?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you directly perform physical work for others?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you design amusement rides or playgrounds?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do client deliverables undergo a peer review?",
                            "Always"});
                table904.AddRow(new string[] {
                            "Do you advise on the contamination risk, presence of, or clean up of any pollutan" +
                                "ts?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you offer asbestos evaluation or abatement services?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you develop medical diagnostic machines or artificial organs?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you provide emergency response services?",
                            "No"});
                table904.AddRow(new string[] {
                            "Do you manufacture, sell, or distribute products under your business name?",
                            "No"});
                table904.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 30
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table904, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table905 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table905.AddRow(new string[] {
                            "First Name",
                            "Montgomery"});
                table905.AddRow(new string[] {
                            "Last Name",
                            "Scott"});
                table905.AddRow(new string[] {
                            "Address",
                            "5012 US-89"});
                table905.AddRow(new string[] {
                            "Apt/Suite",
                            "1"});
                table905.AddRow(new string[] {
                            "City",
                            "Monarch"});
                table905.AddRow(new string[] {
                            "Use as Mailing Address",
                            "No"});
                table905.AddRow(new string[] {
                            "Mailing Address",
                            "5012 US-89"});
                table905.AddRow(new string[] {
                            "Mailing Apt/Suite",
                            "1"});
                table905.AddRow(new string[] {
                            "Mailing ZIP",
                            "59463"});
                table905.AddRow(new string[] {
                            "Mailing City",
                            "Monarch"});
                table905.AddRow(new string[] {
                            "Email",
                            "GreatScott@UFoP.net"});
                table905.AddRow(new string[] {
                            "Business Phone",
                            "[[BlackListedPhoneNumber]]"});
                table905.AddRow(new string[] {
                            "Ext",
                            "7777"});
                table905.AddRow(new string[] {
                            "Website/Social",
                            "www.MechanicalEngineering.com"});
                table905.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 45
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table905, "Then ");
#line hidden
#line 62
 testRunner.Then("user verifies the PL decline page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL_MechanicalEngineeringConsulting_D Declination due to entering a blacklisted em" +
            "ail address into the about you page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_MechanicalEngineeringConsulting_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Service")]
        public void PL_MechanicalEngineeringConsulting_DDeclinationDueToEnteringABlacklistedEmailAddressIntoTheAboutYouPage()
        {
            string[] tagsOfScenario = new string[] {
                    "PL",
                    "Declined",
                    "Service"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL_MechanicalEngineeringConsulting_D Declination due to entering a blacklisted em" +
                    "ail address into the about you page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 65
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table906 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table906.AddRow(new string[] {
                            "Mechanical Engineering Consulting",
                            "7",
                            "I Lease a Space From Others",
                            "Vehicles;Furniture;Inventory or Stock;Tools or Equipment",
                            "59463",
                            "PL"});
#line 66
 testRunner.Given("user starts a quote with:", ((string)(null)), table906, "Given ");
#line hidden
#line 69
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table907 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table907.AddRow(new string[] {
                            "Limited Liability Co LLC",
                            "Mechincal Engineers",
                            "Egg Harbor Township",
                            "ME"});
#line 70
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table907, "Then ");
#line hidden
#line 73
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table908 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table908.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table908.AddRow(new string[] {
                            "What year was your business started?",
                            "2019"});
                table908.AddRow(new string[] {
                            "What is your estimated gross annual revenue?",
                            "500,000"});
                table908.AddRow(new string[] {
                            "Do you use a written contract or statement of work (SOW)?",
                            "Always"});
                table908.AddRow(new string[] {
                            "Who signs off on the terms & conditions for written contracts or statements of wo" +
                                "rk (SOW)?",
                            "Legal"});
#line 74
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table908, "Then ");
#line hidden
#line 81
 testRunner.Then("user verifies the appearance of the PL Coverage Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table909 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table909.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table909.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "No"});
                table909.AddRow(new string[] {
                            "Which option best describes your current professional liability policy?",
                            "This was my first policy."});
                table909.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 82
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table909, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table910 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table910.AddRow(new string[] {
                            "Do you do work involving aerospace engineering?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you advise on Geotechnical, Soils, or Structural Engineering?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you give advice on nuclear materials?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you design any weapons?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you directly perform physical work for others?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you design amusement rides or playgrounds?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do client deliverables undergo a peer review?",
                            "Always"});
                table910.AddRow(new string[] {
                            "Do you advise on the contamination risk, presence of, or clean up of any pollutan" +
                                "ts?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you offer asbestos evaluation or abatement services?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you develop medical diagnostic machines or artificial organs?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you provide emergency response services?",
                            "No"});
                table910.AddRow(new string[] {
                            "Do you manufacture, sell, or distribute products under your business name?",
                            "No"});
                table910.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 88
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table910, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table911 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table911.AddRow(new string[] {
                            "First Name",
                            "Montgomery"});
                table911.AddRow(new string[] {
                            "Last Name",
                            "Scott"});
                table911.AddRow(new string[] {
                            "Address",
                            "75 Sun Mountain Dr"});
                table911.AddRow(new string[] {
                            "Apt/Suite",
                            "1"});
                table911.AddRow(new string[] {
                            "City",
                            "Monarch"});
                table911.AddRow(new string[] {
                            "Use as Mailing Address",
                            "No"});
                table911.AddRow(new string[] {
                            "Mailing Address",
                            "75 Sun Mountain Dr"});
                table911.AddRow(new string[] {
                            "Mailing Apt/Suite",
                            "1"});
                table911.AddRow(new string[] {
                            "Mailing ZIP",
                            "59463"});
                table911.AddRow(new string[] {
                            "Mailing City",
                            "Monarch"});
                table911.AddRow(new string[] {
                            "Email",
                            "[[BlackListedEmail]]"});
                table911.AddRow(new string[] {
                            "Business Phone",
                            "7777777777"});
                table911.AddRow(new string[] {
                            "Ext",
                            "7777"});
                table911.AddRow(new string[] {
                            "Website/Social",
                            "www.MechanicalEngineering.com"});
                table911.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 103
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table911, "Then ");
#line hidden
#line 120
 testRunner.Then("user verifies the PL decline page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
