// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.Unit.WC
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_XMODPreQuote_UFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_XMODPreQuote_U.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Unit/WC", "WC_XMODPreQuote_U", "US 71882 \r\nWC Solar Panel Manufactor FEIN/SSN is only being asked on one page, af" +
                    "ter the quote selection for no XMOD in state \r\nWC Fireplace Installation FEIN/SS" +
                    "N asked prequote in XMOD state, while shown twice only is displayed in AI page", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_XMODPreQuote_U")))
            {
                global::ApolloQAAutomation.Features.Unit.WC.WC_XMODPreQuote_UFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Solar Panel Manufactor state w/o xmod w/ taxid after quote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_XMODPreQuote_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manufacturing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NJ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("YourServices")]
        public void WCSolarPanelManufactorStateWOXmodWTaxidAfterQuote()
        {
            string[] tagsOfScenario = new string[] {
                    "Manufacturing",
                    "WC",
                    "Unit",
                    "NJ",
                    "YourServices"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Solar Panel Manufactor state w/o xmod w/ taxid after quote", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1861 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1861.AddRow(new string[] {
                            "Solar Panel Manufacturing",
                            "5",
                            "I Lease a Space From Others",
                            "",
                            "08054",
                            "WC"});
#line 10
 testRunner.Given("user starts a quote with:", ((string)(null)), table1861, "Given ");
#line hidden
#line 13
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1862 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1862.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table1862.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 8 years ago"});
                table1862.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table1862.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "40000"});
                table1862.AddRow(new string[] {
                            "Are there any delivery drivers on staff?",
                            "no"});
                table1862.AddRow(new string[] {
                            "Are there any travelling sales staff that are not involved at all in the manufact" +
                                "uring process?",
                            "no"});
                table1862.AddRow(new string[] {
                            "Are there any administrative or back office employees that are not involved at al" +
                                "l in the manufacturing process?",
                            "no"});
                table1862.AddRow(new string[] {
                            "Business",
                            "Test Manual"});
                table1862.AddRow(new string[] {
                            "Address",
                            "100 main st;Mt Laurel"});
                table1862.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table1862.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table1862.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table1862.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table1862.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 14
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table1862, "Then ");
#line hidden
#line 30
 testRunner.Then("user verifies the Wage Calculator page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.When("the business is not seasonal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1863 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Average Employee Wage",
                            "Number of Employees",
                            "Hours per Week"});
                table1863.AddRow(new string[] {
                            "Answer",
                            "15",
                            "5",
                            "40"});
#line 32
 testRunner.Then("user fills out the Wage Calculator with these values:", ((string)(null)), table1863, "Then ");
#line hidden
#line 35
 testRunner.Then("user clicks continue from the Wage Calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1864 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1864.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
#line 37
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table1864, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1865 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name",
                            "W2 payroll",
                            "Annual Payroll",
                            "Job Duty"});
                table1865.AddRow(new string[] {
                            "OneF",
                            "OneL",
                            "yes",
                            "50000",
                            "Manufacturer"});
#line 40
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table1865, "Then ");
#line hidden
#line 43
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1866 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1866.AddRow(new string[] {
                            "Other than hand-held power tools, do you use any equipment or machinery?",
                            "no"});
                table1866.AddRow(new string[] {
                            "Do your employees deliver any of your finished product?",
                            "Never - 3rd party/Postal Service delivers all"});
                table1866.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table1866.AddRow(new string[] {
                            "Are any employees required to physically lift/move more than 50 lbs?",
                            "no"});
                table1866.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "no"});
                table1866.AddRow(new string[] {
                            "When was your last policy in effect?",
                            "Never no prior insurance"});
                table1866.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 44
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table1866, "Then ");
#line hidden
#line 53
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1867 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table1867.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 56
 testRunner.When("user selects a standard single-bundle plan quote with the following customization" +
                        "s from the WC your quote page:", ((string)(null)), table1867, "When ");
#line hidden
#line 59
 testRunner.Then("user begins the WC AI page setting the FEIN with value 63-1212123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Insurance Inspector for state with XMOD prequote")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_XMODPreQuote_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("VT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("YourServices")]
        public void WCInsuranceInspectorForStateWithXMODPrequote()
        {
            string[] tagsOfScenario = new string[] {
                    "WC",
                    "Unit",
                    "VT",
                    "Regression",
                    "YourServices"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Insurance Inspector for state with XMOD prequote", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 62
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1868 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1868.AddRow(new string[] {
                            "Insurance Inspector",
                            "25",
                            "I Lease a Space From Others",
                            "",
                            "05478",
                            "WC"});
#line 63
 testRunner.Given("user starts a quote with:", ((string)(null)), table1868, "Given ");
#line hidden
#line 66
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1869 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1869.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table1869.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 7 years ago"});
                table1869.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table1869.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "40000"});
                table1869.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table1869.AddRow(new string[] {
                            "Do you use any subcontractors or pay any workers using IRS Form 1099?",
                            "no"});
                table1869.AddRow(new string[] {
                            "Business",
                            "Test Manual"});
                table1869.AddRow(new string[] {
                            "Address",
                            "100 main st;Georgia"});
                table1869.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table1869.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table1869.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table1869.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table1869.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 67
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table1869, "Then ");
#line hidden
#line 82
 testRunner.Then("user verifies the Wage Calculator page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
 testRunner.When("the business is not seasonal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1870 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Average Employee Wage",
                            "Number of Employees",
                            "Hours per Week"});
                table1870.AddRow(new string[] {
                            "Answer",
                            "15",
                            "25",
                            "40"});
#line 84
 testRunner.Then("user fills out the Wage Calculator with these values:", ((string)(null)), table1870, "Then ");
#line hidden
#line 87
 testRunner.Then("user clicks continue from the Wage Calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 88
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1871 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1871.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
                table1871.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "0"});
#line 89
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table1871, "Then ");
#line hidden
#line 93
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1872 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1872.AddRow(new string[] {
                            "Do you do any boiler inspections for commercial, industrial, or multi-family resi" +
                                "dences?",
                            "no"});
                table1872.AddRow(new string[] {
                            "Do you travel to damaged properties to adjust claims?",
                            "no"});
                table1872.AddRow(new string[] {
                            "Do you do any installation, repair, or damage restoration services?",
                            "no"});
                table1872.AddRow(new string[] {
                            "Do you do any asbestos inspection?",
                            "no"});
                table1872.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table1872.AddRow(new string[] {
                            "Do you perform any work over 30 feet above ground level?",
                            "no"});
                table1872.AddRow(new string[] {
                            "Do you perform any work underground including in trenches, holes, or tunnels?",
                            "no"});
                table1872.AddRow(new string[] {
                            "Do you inspect any roofs?",
                            "no"});
                table1872.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "no"});
                table1872.AddRow(new string[] {
                            "When was your last policy in effect?",
                            "30 days to 6 months ago"});
                table1872.AddRow(new string[] {
                            "Has there been any worker injuries or accidents since the last policy was in effe" +
                                "ct?",
                            "No to the best of my knowledge"});
                table1872.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
                table1872.AddRow(new string[] {
                            "Federal Employer Identification Number (FEIN)",
                            "23-1234567"});
#line 94
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table1872, "Then ");
#line hidden
#line 109
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 111
 testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1873 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table1873.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 112
 testRunner.When("user selects a standard single-bundle plan quote with the following customization" +
                        "s from the WC your quote page:", ((string)(null)), table1873, "When ");
#line hidden
#line 115
 testRunner.Then("user begins the WC AI page having the FEIN with value 23-1234567", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1874 = new TechTalk.SpecFlow.Table(new string[] {
                            "Set Name"});
                table1874.AddRow(new string[] {
                            "NameA NameB"});
#line 116
 testRunner.Then("wc user handles 1 excluded oo with these values:", ((string)(null)), table1874, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
