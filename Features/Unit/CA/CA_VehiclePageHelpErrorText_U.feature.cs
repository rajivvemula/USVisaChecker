// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.Unit.CA
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_VehiclePageHelpErrorText_UFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_VehiclePageHelpErrorText_U.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Unit/CA", "CA_VehiclePageHelpErrorText_U", "This file validates the appearence of help and error text on the vehicles page", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_VehiclePageHelpErrorText_U")))
            {
                global::ApolloQAAutomation.Features.Unit.CA.CA_VehiclePageHelpErrorText_UFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Vehicle Page Help Error Text Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_VehiclePageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        public void CAVehiclePageHelpErrorTextUnit()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Vehicle Page Help Error Text Unit", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1572 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1572.AddRow(new string[] {
                            "Food Truck",
                            "0",
                            "I Run My Business From Property I Own",
                            "Vehicles",
                            "60004",
                            "CA"});
#line 6
 testRunner.Given("user starts a quote with:", ((string)(null)), table1572, "Given ");
#line hidden
#line 9
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1573 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1573.AddRow(new string[] {
                            "TEST CA AUTH REFER",
                            "",
                            ""});
#line 10
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1573, "Then ");
#line hidden
#line 13
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1574 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1574.AddRow(new string[] {
                            "2010",
                            "Limited Liability Co. (LLC)",
                            "1600 N Yale Ave",
                            "",
                            "Arlington Heights",
                            ""});
#line 15
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1574, "And ");
#line hidden
#line 18
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1575 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1575.AddRow(new string[] {
                            "isVinTelligence",
                            "Error"});
#line 21
 testRunner.Then("user verifies the following front end help and error text of the Vehicle Page:", ((string)(null)), table1575, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1576 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN"});
                table1576.AddRow(new string[] {
                            ""});
#line 24
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1576, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1577 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1577.AddRow(new string[] {
                            "isVinTelligence",
                            "Help"});
                table1577.AddRow(new string[] {
                            "vinNumber",
                            "Error"});
#line 27
 testRunner.Then("user verifies the following front end help and error text of the Vehicle Page:", ((string)(null)), table1577, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1578 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN"});
                table1578.AddRow(new string[] {
                            "1GNFK13067J109399"});
#line 31
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1578, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1579 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1579.AddRow(new string[] {
                            "details",
                            "Help"});
#line 34
 testRunner.Then("user verifies the following front end help and error text of the Vehicle Page:", ((string)(null)), table1579, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1580 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1580.AddRow(new string[] {
                            "VehicleUse",
                            "Error"});
#line 37
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1580, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1581 = new TechTalk.SpecFlow.Table(new string[] {
                            "No VIN"});
                table1581.AddRow(new string[] {
                            ""});
#line 40
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1581, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1582 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1582.AddRow(new string[] {
                            "vehicleCategory",
                            "Error"});
                table1582.AddRow(new string[] {
                            "yearOfManufacture",
                            "Error"});
#line 43
 testRunner.Then("user verifies the following front end help and error text of the Vehicle Page:", ((string)(null)), table1582, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1583 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year",
                            "Enter Year Make Model"});
                table1583.AddRow(new string[] {
                            "2007",
                            ""});
#line 47
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1583, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1584 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1584.AddRow(new string[] {
                            "make",
                            "Error"});
#line 50
 testRunner.Then("user verifies the following front end help and error text of the Vehicle Page:", ((string)(null)), table1584, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1585 = new TechTalk.SpecFlow.Table(new string[] {
                            "Make",
                            "Enter Year Make Model"});
                table1585.AddRow(new string[] {
                            "CHEVROLET",
                            ""});
#line 53
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1585, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1586 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1586.AddRow(new string[] {
                            "model",
                            "Error"});
#line 56
 testRunner.Then("user verifies the following front end help and error text of the Vehicle Page:", ((string)(null)), table1586, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1587 = new TechTalk.SpecFlow.Table(new string[] {
                            "Model"});
                table1587.AddRow(new string[] {
                            "TAHOE"});
#line 59
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1587, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1588 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1588.AddRow(new string[] {
                            "VehicleValue",
                            "Help"});
#line 62
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1588, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1589 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type Insure"});
                table1589.AddRow(new string[] {
                            "Food Truck"});
#line 65
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1589, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1590 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1590.AddRow(new string[] {
                            "GVWr",
                            "Help"});
#line 68
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1590, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1591 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type Insure"});
                table1591.AddRow(new string[] {
                            "Limousine: seating less than 10"});
#line 71
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1591, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1592 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1592.AddRow(new string[] {
                            "Seatbelts",
                            "Error"});
#line 74
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1592, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1593 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type Insure"});
                table1593.AddRow(new string[] {
                            "Bus"});
#line 77
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1593, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1594 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1594.AddRow(new string[] {
                            "VehicleSeatCount",
                            "Error"});
#line 80
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1594, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1595 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type Insure"});
                table1595.AddRow(new string[] {
                            "Tow Truck: Tilt Bed"});
#line 83
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1595, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1596 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1596.AddRow(new string[] {
                            "Repossession",
                            "Error"});
#line 86
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1596, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1597 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type Insure"});
                table1597.AddRow(new string[] {
                            "Dump Truck"});
#line 89
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1597, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1598 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1598.AddRow(new string[] {
                            "Landfills",
                            "Error"});
#line 92
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1598, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1599 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type Insure"});
                table1599.AddRow(new string[] {
                            "Other Open Trailer"});
#line 95
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1599, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1600 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1600.AddRow(new string[] {
                            "TrailerValue",
                            "Error"});
#line 98
 testRunner.Then("user verifies the following Apollo help and error text of the Vehicle Page:", ((string)(null)), table1600, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
