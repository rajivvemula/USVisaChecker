// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.Unit.CA
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_DriverIncidentPageHelpErrorText_UFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_DriverIncidentPageHelpErrorText_U.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Unit/CA", "CA_DriverIncidentPageHelpErrorText_U", "Scenario verifying help and error texts for Drivers Incidents Page", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_DriverIncidentPageHelpErrorText_U")))
            {
                global::ApolloQAAutomation.Features.Unit.CA.CA_DriverIncidentPageHelpErrorText_UFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Driver Incident Page Help Error Text Unit Hot Shot Trucking In CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_DriverIncidentPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Cali")]
        public void CADriverIncidentPageHelpErrorTextUnitHotShotTruckingInCA()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "Regression",
                    "CA",
                    "Transportation",
                    "Cali"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Driver Incident Page Help Error Text Unit Hot Shot Trucking In CA", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1283 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1283.AddRow(new string[] {
                            "Hot Shot Trucking",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "95204",
                            "CA"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table1283, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1284 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1284.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 11
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1284, "Then ");
#line hidden
#line 14
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1285 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1285.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "1687 N California St",
                            "",
                            "Stockton",
                            ""});
#line 16
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1285, "And ");
#line hidden
#line 19
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1286 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Trim",
                            "Parking Address",
                            "Vehicle Worth"});
                table1286.AddRow(new string[] {
                            "3N1CB51DX3L800403",
                            "Sedan 4D XE",
                            "California",
                            "3000"});
#line 21
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1286, "And ");
#line hidden
#line 24
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1287 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table1287.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "Yes",
                            "E9758462"});
#line 26
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1287, "And ");
#line hidden
#line 29
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 30
 testRunner.Then("user verifies the appearance of the Drivers Incidents page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1288 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias"});
                table1288.AddRow(new string[] {
                            "DriverIncidents"});
                table1288.AddRow(new string[] {
                            "DriverIncidentDate"});
                table1288.AddRow(new string[] {
                            "DriverIncidentType"});
#line 31
 testRunner.Then("user verifies each error element on the CA Driver Incidents page for the followin" +
                        "g questions:", ((string)(null)), table1288, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1289 = new TechTalk.SpecFlow.Table(new string[] {
                            "Incident Type"});
                table1289.AddRow(new string[] {
                            "Accident"});
#line 37
 testRunner.Then("user adds incidents with the following values:", ((string)(null)), table1289, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1290 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias"});
                table1290.AddRow(new string[] {
                            "DriverAccidentDetermination"});
#line 40
 testRunner.Then("user verifies each error element on the CA Driver Incidents page for the followin" +
                        "g questions:", ((string)(null)), table1290, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1291 = new TechTalk.SpecFlow.Table(new string[] {
                            "Incident Type"});
                table1291.AddRow(new string[] {
                            "Violation/Conviction"});
#line 44
 testRunner.Then("user edits incident #0 with the following values:", ((string)(null)), table1291, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1292 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias"});
                table1292.AddRow(new string[] {
                            "DriverIncidentViolation"});
                table1292.AddRow(new string[] {
                            "DriverIncident2Flag"});
#line 47
 testRunner.Then("user verifies each error element on the CA Driver Incidents page for the followin" +
                        "g questions:", ((string)(null)), table1292, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1293 = new TechTalk.SpecFlow.Table(new string[] {
                            "Violation/Conviction"});
                table1293.AddRow(new string[] {
                            "Speeding 16 MPH or more over the Speed Limit"});
#line 52
 testRunner.Then("user edits incident #0 with the following values:", ((string)(null)), table1293, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1294 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias"});
                table1294.AddRow(new string[] {
                            "DriverIncidentRecklessConviction"});
#line 55
 testRunner.Then("user verifies each error element on the CA Driver Incidents page for the followin" +
                        "g questions:", ((string)(null)), table1294, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1295 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias"});
                table1295.AddRow(new string[] {
                            "DriverIncidentType"});
                table1295.AddRow(new string[] {
                            "DriverIncidentViolation"});
#line 58
 testRunner.Then("user verifies each help element on the CA Driver Incidents page for the following" +
                        " questions:", ((string)(null)), table1295, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
