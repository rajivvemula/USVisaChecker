// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.Unit.CA
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_OptCreditCheck_UFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_OptCreditCheck_U.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Unit/CA", "CA_OptCreditCheck_U", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_OptCreditCheck_U")))
            {
                global::ApolloQAAutomation.Features.Unit.CA.CA_OptCreditCheck_UFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Opt Credit Check Unit In OH")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OptCreditCheck_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CAOptCreditCheckUnitInOH()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Opt Credit Check Unit In OH", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1408 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1408.AddRow(new string[] {
                            "Uber Driver",
                            "2",
                            "I Run My Business From Property I Own",
                            "",
                            "45102",
                            "CA"});
#line 5
 testRunner.Given("user starts a quote with:", ((string)(null)), table1408, "Given ");
#line hidden
#line 8
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1409 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1409.AddRow(new string[] {
                            "PassOn CreditCheck",
                            "",
                            ""});
#line 9
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1409, "Then ");
#line hidden
#line 12
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 13
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1410 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1410.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "1261 Ohio Pike",
                            "",
                            "Amelia",
                            "Suggested"});
#line 14
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1410, "And ");
#line hidden
#line 17
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1411 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Trim",
                            "Parking Address",
                            "Vehicle Worth",
                            "Fare Box"});
                table1411.AddRow(new string[] {
                            "3N1CB51DX3L800403",
                            "Sedan 4D XE",
                            "Ohio",
                            "2000",
                            "No"});
#line 19
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1411, "And ");
#line hidden
#line 22
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1412 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table1412.AddRow(new string[] {
                            "Aubrey",
                            "Plaza",
                            "OH",
                            "03/13/1985",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            ""});
#line 24
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1412, "And ");
#line hidden
#line 27
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1413 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1413.AddRow(new string[] {
                            "Do you offer \"party\" bus or limousine services where alcohol is provided or expre" +
                                "ssly permitted?",
                            "No"});
                table1413.AddRow(new string[] {
                            "Do you provide any school, camp, day care, or field trip transportation for child" +
                                "ren 12 or younger?",
                            "No"});
                table1413.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "51 to 100 miles"});
                table1413.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table1413.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table1413.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table1413.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
#line 28
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table1413, "Then ");
#line hidden
#line 37
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1414 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1414.AddRow(new string[] {
                            "First Name",
                            "Ariana"});
                table1414.AddRow(new string[] {
                            "Last Name",
                            "Grande"});
                table1414.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table1414.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table1414.AddRow(new string[] {
                            "Business Website",
                            ""});
                table1414.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table1414.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table1414.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table1414.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table1414.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table1414.AddRow(new string[] {
                            "Want Save Money",
                            "No"});
#line 39
 testRunner.And("user enters contact information:", ((string)(null)), table1414, "And ");
#line hidden
#line 52
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Opt Credit Check In WI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OptCreditCheck_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CAOptCreditCheckInWI()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Opt Credit Check In WI", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 55
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1415 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1415.AddRow(new string[] {
                            "Uber Driver",
                            "2",
                            "I Run My Business From Property I Own",
                            "",
                            "53223",
                            "CA"});
#line 56
 testRunner.Given("user starts a quote with:", ((string)(null)), table1415, "Given ");
#line hidden
#line 59
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1416 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1416.AddRow(new string[] {
                            "DoThe CreditCheck",
                            "",
                            ""});
#line 60
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1416, "Then ");
#line hidden
#line 63
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1417 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1417.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "2455 W Wisconsin Ave",
                            "",
                            "Milwaukee",
                            "Suggested"});
#line 65
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1417, "And ");
#line hidden
#line 68
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1418 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fare Box"});
                table1418.AddRow(new string[] {
                            "1G6DP1E33C0141237",
                            "Wisconsin",
                            "No"});
#line 70
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1418, "And ");
#line hidden
#line 73
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1419 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table1419.AddRow(new string[] {
                            "Aubrey",
                            "Plaza",
                            "WI",
                            "03/13/1985",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            ""});
#line 75
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1419, "And ");
#line hidden
#line 78
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1420 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1420.AddRow(new string[] {
                            "Do you offer \"party\" bus or limousine services where alcohol is provided or expre" +
                                "ssly permitted?",
                            "No"});
                table1420.AddRow(new string[] {
                            "Do you provide any school, camp, day care, or field trip transportation for child" +
                                "ren 12 or younger?",
                            "No"});
                table1420.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "51 to 100 miles"});
                table1420.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table1420.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table1420.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table1420.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
#line 79
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table1420, "Then ");
#line hidden
#line 88
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1421 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1421.AddRow(new string[] {
                            "First Name",
                            "Ariana"});
                table1421.AddRow(new string[] {
                            "Last Name",
                            "Grande"});
                table1421.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table1421.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table1421.AddRow(new string[] {
                            "Business Website",
                            ""});
                table1421.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table1421.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table1421.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table1421.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table1421.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table1421.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table1421.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larryzzz"});
                table1421.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barryzzzz"});
                table1421.AddRow(new string[] {
                            "Owner\'s Address",
                            "2455 W Wisconsin Ave"});
                table1421.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table1421.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "53223"});
                table1421.AddRow(new string[] {
                            "Owner\'s City",
                            "Milwaukee"});
                table1421.AddRow(new string[] {
                            "Owner\'s State",
                            "Wisconsin"});
                table1421.AddRow(new string[] {
                            "Select an Address",
                            "Suggested"});
#line 90
 testRunner.And("user enters contact information:", ((string)(null)), table1421, "And ");
#line hidden
#line 111
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Opt Credit Check Mandatory In IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OptCreditCheck_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        public void CAOptCreditCheckMandatoryInIL()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Opt Credit Check Mandatory In IL", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 114
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1422 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1422.AddRow(new string[] {
                            "Uber Driver",
                            "2",
                            "I Run My Business From Property I Own",
                            "",
                            "60606",
                            "CA"});
#line 115
 testRunner.Given("user starts a quote with:", ((string)(null)), table1422, "Given ");
#line hidden
#line 118
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1423 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1423.AddRow(new string[] {
                            "CreditCheck Mandatory",
                            "",
                            ""});
#line 119
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1423, "Then ");
#line hidden
#line 122
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1424 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1424.AddRow(new string[] {
                            "2012",
                            "Corporation",
                            "225 S Canal St",
                            "",
                            "Chicago",
                            ""});
#line 124
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1424, "And ");
#line hidden
#line 127
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 128
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1425 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Fare Box"});
                table1425.AddRow(new string[] {
                            "1G6DP1E33C0141237",
                            "Illinois",
                            "No"});
#line 129
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1425, "And ");
#line hidden
#line 132
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1426 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "ILDDC",
                            "ILViolation",
                            "ILDLRevoked",
                            "Accident",
                            "DLNumber"});
                table1426.AddRow(new string[] {
                            "Aubrey",
                            "Plaza",
                            "IL",
                            "03/13/1985",
                            "",
                            "",
                            "",
                            "",
                            "No",
                            "t74187457844"});
#line 134
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1426, "And ");
#line hidden
#line 137
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1427 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1427.AddRow(new string[] {
                            "Do you offer \"party\" bus or limousine services where alcohol is provided or expre" +
                                "ssly permitted?",
                            "No"});
                table1427.AddRow(new string[] {
                            "Do you provide any school, camp, day care, or field trip transportation for child" +
                                "ren 12 or younger?",
                            "No"});
                table1427.AddRow(new string[] {
                            "What is the furthest any of your vehicles travel in any one direction from their " +
                                "home base?",
                            "51 to 100 miles"});
                table1427.AddRow(new string[] {
                            "Do any of your vehicles travel to Mexico?",
                            "No"});
                table1427.AddRow(new string[] {
                            "How many auto insurance claims did your business file in the last 3 years?",
                            "0"});
                table1427.AddRow(new string[] {
                            "Do you rent any vehicles?",
                            "No"});
                table1427.AddRow(new string[] {
                            "Do you use any Owner-Operators?",
                            "No"});
#line 138
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table1427, "Then ");
#line hidden
#line 147
 testRunner.Then("user continues to the Contact page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 148
 testRunner.Then("user verifies appearance of the contacts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1428 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1428.AddRow(new string[] {
                            "First Name",
                            "Ariana"});
                table1428.AddRow(new string[] {
                            "Last Name",
                            "Grande"});
                table1428.AddRow(new string[] {
                            "Business Email",
                            "a@b.co"});
                table1428.AddRow(new string[] {
                            "Business Phone",
                            "(555) 867-5309"});
                table1428.AddRow(new string[] {
                            "Business Website",
                            ""});
                table1428.AddRow(new string[] {
                            "Business has an account manager",
                            ""});
                table1428.AddRow(new string[] {
                            "Manager\'s First Name",
                            ""});
                table1428.AddRow(new string[] {
                            "Manager\'s Last Name",
                            ""});
                table1428.AddRow(new string[] {
                            "Manager\'s Email",
                            ""});
                table1428.AddRow(new string[] {
                            "Manager\'s Phone",
                            ""});
                table1428.AddRow(new string[] {
                            "Want Save Money",
                            "Yes"});
                table1428.AddRow(new string[] {
                            "Owner\'s First Name",
                            "Larryzzz"});
                table1428.AddRow(new string[] {
                            "Owner\'s Last Name",
                            "Barryzzzz"});
                table1428.AddRow(new string[] {
                            "Owner\'s Address",
                            "225 S Canal St"});
                table1428.AddRow(new string[] {
                            "Owner\'s Address 2",
                            ""});
                table1428.AddRow(new string[] {
                            "Owner\'s Zip Code",
                            "60606"});
                table1428.AddRow(new string[] {
                            "Owner\'s City",
                            "Chicago"});
                table1428.AddRow(new string[] {
                            "Owner\'s State",
                            "Illinois"});
#line 149
 testRunner.And("user enters contact information:", ((string)(null)), table1428, "And ");
#line hidden
#line 169
 testRunner.Then("user verifies landing on Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
