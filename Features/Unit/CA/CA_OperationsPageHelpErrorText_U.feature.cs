// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.Unit.CA
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CA_OperationsPageHelpErrorText_UFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CA_OperationsPageHelpErrorText_U.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Unit/CA", "CA_OperationsPageHelpErrorText_U", "Verifying Help and Error Texts using diffrent keyword and states", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "CA_OperationsPageHelpErrorText_U")))
            {
                global::ApolloQAAutomation.Features.Unit.CA.CA_OperationsPageHelpErrorText_UFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Unit Hot Shot Trucking In California")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Cali")]
        public void CAOperationsPageHelpErrorTextUnitHotShotTruckingInCalifornia()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation",
                    "Cali"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Unit Hot Shot Trucking In California", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1365 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1365.AddRow(new string[] {
                            "Hot Shot Trucking",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "95204",
                            "CA"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table1365, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1366 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1366.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 11
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1366, "Then ");
#line hidden
#line 17
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1367 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1367.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "1687 N California St",
                            "",
                            "Stockton",
                            ""});
#line 19
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1367, "And ");
#line hidden
#line 22
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1368 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table1368.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "California",
                            "3000"});
#line 24
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1368, "And ");
#line hidden
#line 27
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1369 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table1369.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "E9758462"});
#line 29
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1369, "And ");
#line hidden
#line 32
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1370 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1370.AddRow(new string[] {
                            "HaulIntermodal",
                            "Error"});
                table1370.AddRow(new string[] {
                            "TrailerInterchangeAgreements",
                            "Error"});
                table1370.AddRow(new string[] {
                            "VehicleRadius",
                            "Error"});
                table1370.AddRow(new string[] {
                            "FineArt",
                            "Error"});
                table1370.AddRow(new string[] {
                            "ResidentialMoving",
                            "Error"});
                table1370.AddRow(new string[] {
                            "TeamDriving",
                            "Error"});
                table1370.AddRow(new string[] {
                            "TravelToMexico",
                            "Error"});
                table1370.AddRow(new string[] {
                            "ClaimCount",
                            "Error"});
                table1370.AddRow(new string[] {
                            "Chains",
                            "Error"});
                table1370.AddRow(new string[] {
                            "Biohazard",
                            "Error"});
                table1370.AddRow(new string[] {
                            "BorrowVehicles",
                            "Error"});
                table1370.AddRow(new string[] {
                            "USDOT",
                            "Error"});
                table1370.AddRow(new string[] {
                            "CaliOperatingAuth",
                            "Error"});
                table1370.AddRow(new string[] {
                            "TrailerInterchangeAgreements",
                            "Help"});
                table1370.AddRow(new string[] {
                            "VehicleRadius",
                            "Help"});
                table1370.AddRow(new string[] {
                            "FineArt",
                            "Help"});
                table1370.AddRow(new string[] {
                            "ResidentialMoving",
                            "Help"});
                table1370.AddRow(new string[] {
                            "Biohazard",
                            "Help"});
                table1370.AddRow(new string[] {
                            "BorrowVehicles",
                            "Help"});
                table1370.AddRow(new string[] {
                            "USDOT",
                            "Help"});
#line 33
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table1370, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Towing Services In SC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextTowingServicesInSC()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Towing Services In SC", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 57
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1371 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1371.AddRow(new string[] {
                            "Towing Services",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "29209",
                            "CA"});
#line 58
 testRunner.Given("user starts a quote with:", ((string)(null)), table1371, "Given ");
#line hidden
#line 61
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1372 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1372.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 62
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1372, "Then ");
#line hidden
#line 68
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1373 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1373.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "7501 Garners Ferry Rd",
                            "",
                            "Columbia",
                            ""});
#line 70
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1373, "And ");
#line hidden
#line 73
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1374 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "Plowing Snow"});
                table1374.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "South Carolina",
                            "5000",
                            "Yes"});
#line 75
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1374, "And ");
#line hidden
#line 78
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1375 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table1375.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "E9758462"});
#line 80
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1375, "And ");
#line hidden
#line 83
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1376 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1376.AddRow(new string[] {
                            "OnCall",
                            "Error"});
                table1376.AddRow(new string[] {
                            "Salvage",
                            "Error"});
                table1376.AddRow(new string[] {
                            "SC-Authority",
                            "Error"});
                table1376.AddRow(new string[] {
                            "SC-Authority",
                            "Help"});
#line 84
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table1376, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Uber Driver In IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextUberDriverInIL()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Uber Driver In IL", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 92
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1377 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1377.AddRow(new string[] {
                            "Uber Driver",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "60629",
                            "CA"});
#line 93
 testRunner.Given("user starts a quote with:", ((string)(null)), table1377, "Given ");
#line hidden
#line 96
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1378 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1378.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 97
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1378, "Then ");
#line hidden
#line 103
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1379 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1379.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "515 W Jefferson Blvd",
                            "",
                            "Fort Wayne",
                            ""});
#line 105
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1379, "And ");
#line hidden
#line 108
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1380 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "Fare Box"});
                table1380.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "Illinois",
                            "3000",
                            "No"});
#line 110
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1380, "And ");
#line hidden
#line 113
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 114
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1381 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table1381.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "No",
                            "E9758462"});
#line 115
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1381, "And ");
#line hidden
#line 118
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1382 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1382.AddRow(new string[] {
                            "PartyBus",
                            "Error"});
                table1382.AddRow(new string[] {
                            "DayCare",
                            "Error"});
#line 119
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table1382, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Limo Driver In CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextLimoDriverInCA()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Limo Driver In CA", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 125
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1383 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1383.AddRow(new string[] {
                            "Limo Driver",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "93644",
                            "CA"});
#line 126
 testRunner.Given("user starts a quote with:", ((string)(null)), table1383, "Given ");
#line hidden
#line 129
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1384 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1384.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 130
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1384, "Then ");
#line hidden
#line 136
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 137
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1385 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1385.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "40112 Highway 41",
                            "",
                            "Oakhurst",
                            "Original"});
#line 138
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1385, "And ");
#line hidden
#line 141
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 142
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1386 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Type Insure",
                            "Parking Address",
                            "Vehicle Worth"});
                table1386.AddRow(new string[] {
                            "2L1MJ5LK0FBL00196",
                            "SUV",
                            "California",
                            "8000"});
#line 143
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1386, "And ");
#line hidden
#line 146
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1387 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table1387.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "No",
                            "E9758462"});
#line 148
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1387, "And ");
#line hidden
#line 151
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1388 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1388.AddRow(new string[] {
                            "ServiceAccess",
                            "Error"});
                table1388.AddRow(new string[] {
                            "PUC",
                            "Error"});
#line 152
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table1388, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Art Therapist In IL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextArtTherapistInIL()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Art Therapist In IL", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 158
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1389 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1389.AddRow(new string[] {
                            "Art Therapist",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "60629",
                            "CA"});
#line 159
 testRunner.Given("user starts a quote with:", ((string)(null)), table1389, "Given ");
#line hidden
#line 162
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1390 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1390.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 163
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1390, "Then ");
#line hidden
#line 169
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 170
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1391 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1391.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "40112 Highway 41",
                            "",
                            "Chicago",
                            "Original"});
#line 171
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1391, "And ");
#line hidden
#line 174
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 175
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1392 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Client Locations",
                            "Vehicle Worth"});
                table1392.AddRow(new string[] {
                            "1D4GP24E17B260680",
                            "Illinois",
                            "Yes",
                            "1200"});
#line 176
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1392, "And ");
#line hidden
#line 179
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 180
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1393 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "Accident",
                            "DLNumber"});
                table1393.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "No",
                            "E9758462"});
#line 181
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1393, "And ");
#line hidden
#line 184
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1394 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1394.AddRow(new string[] {
                            "EmergencyResponse",
                            "Error"});
#line 185
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table1394, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Hot Shot Trucking In GA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextHotShotTruckingInGA()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Hot Shot Trucking In GA", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 190
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1395 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1395.AddRow(new string[] {
                            "Hot Shot Trucking",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "31093",
                            "CA"});
#line 191
 testRunner.Given("user starts a quote with:", ((string)(null)), table1395, "Given ");
#line hidden
#line 194
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1396 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1396.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 195
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1396, "Then ");
#line hidden
#line 201
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 202
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1397 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1397.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "1879 Watson Bld",
                            "",
                            "Warner Robins",
                            "Original"});
#line 203
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1397, "And ");
#line hidden
#line 206
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 207
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1398 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth"});
                table1398.AddRow(new string[] {
                            "1M1AE07Y63W014598",
                            "Georgia",
                            "3000"});
#line 208
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1398, "And ");
#line hidden
#line 211
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 212
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1399 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table1399.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "CA",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "E9758462"});
#line 213
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1399, "And ");
#line hidden
#line 216
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1400 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1400.AddRow(new string[] {
                            "Does your business have a USDOT Number?",
                            "Yes"});
                table1400.AddRow(new string[] {
                            "Do you have or plan on applying for an operating authority from the Federal Motor" +
                                " Carrier Safety Administration (FMCSA)?",
                            "No"});
#line 217
 testRunner.Then("user fills out the Operations page:", ((string)(null)), table1400, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1401 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1401.AddRow(new string[] {
                            "GA-Authority",
                            "Error"});
#line 221
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table1401, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CA Operations Page Help Error Text Roadside Assistance In TX")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CA_OperationsPageHelpErrorText_U")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Transportation")]
        public void CAOperationsPageHelpErrorTextRoadsideAssistanceInTX()
        {
            string[] tagsOfScenario = new string[] {
                    "Unit",
                    "CA",
                    "Transportation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CA Operations Page Help Error Text Roadside Assistance In TX", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 226
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1402 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1402.AddRow(new string[] {
                            "Roadside Assistance",
                            "3",
                            "I Work at a Job Site",
                            "Vehicles",
                            "75662",
                            "CA"});
#line 227
 testRunner.Given("user starts a quote with:", ((string)(null)), table1402, "Given ");
#line hidden
#line 230
 testRunner.Then("user verifies the appearance of the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1403 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name of Business",
                            "DBA",
                            "Policy Start Date"});
                table1403.AddRow(new string[] {
                            "TEST CA QUOTE",
                            "TEST CA DBA",
                            ""});
#line 231
 testRunner.Then("user fills in the Start Your Quote page with these values:", ((string)(null)), table1403, "Then ");
#line hidden
#line 237
 testRunner.Then("user clicks continue from the Start Your Quote page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 238
 testRunner.Then("user verifies the appearance of the Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1404 = new TechTalk.SpecFlow.Table(new string[] {
                            "Year Business Started",
                            "How Business Structured",
                            "Address1",
                            "Address2",
                            "City",
                            "Select an Address"});
                table1404.AddRow(new string[] {
                            "2000",
                            "Corporation",
                            "906 US Highwy 259 N",
                            "",
                            "Kilgore",
                            "Original"});
#line 239
 testRunner.And("user fills in the Introduction page with these values:", ((string)(null)), table1404, "And ");
#line hidden
#line 242
 testRunner.Then("user clicks continue from CA Introduction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 243
 testRunner.Then("user verifies the appearance of the Vehicles page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1405 = new TechTalk.SpecFlow.Table(new string[] {
                            "VIN",
                            "Parking Address",
                            "Vehicle Worth",
                            "Plowing Snow"});
                table1405.AddRow(new string[] {
                            "1FUBA5CG83LL10209",
                            "Texas",
                            "9000",
                            "Yes"});
#line 244
 testRunner.And("user creates a vehicle or trailer with variable values:", ((string)(null)), table1405, "And ");
#line hidden
#line 247
 testRunner.Then("user clicks Let\'s Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
 testRunner.Then("User verifies appearance of the Drivers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1406 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "DLState",
                            "DOB",
                            "CDL",
                            "Accident",
                            "DLNumber"});
                table1406.AddRow(new string[] {
                            "TEST FN",
                            "TEST LN",
                            "TX",
                            "08/08/1988",
                            "Yes 3 or more years",
                            "No",
                            "12345678"});
#line 249
 testRunner.And("user creates a driver with these values:", ((string)(null)), table1406, "And ");
#line hidden
#line 252
 testRunner.Then("user clicks continue from the Drivers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1407 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Alias",
                            "Type"});
                table1407.AddRow(new string[] {
                            "TXAuth",
                            "Error"});
#line 253
 testRunner.Then("user verifies each help and error element on the CA Operations page for the follo" +
                        "wing questions:", ((string)(null)), table1407, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
