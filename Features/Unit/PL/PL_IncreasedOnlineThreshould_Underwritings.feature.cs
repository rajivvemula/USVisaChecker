// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.Unit.PL
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PL_IncreasedOnlineThreshould_UnderwritingsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "PL_IncreasedOnlineThreshould_Underwritings.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Unit/PL", "PL_IncreasedOnlineThreshould_Underwritings", "Verify the increased Online threshold for Underwritings for PL - US110277\r\nPL -> " +
                    "Premium increased from $25000 to $30000\r\nPL -> Revenue increased from $6 million" +
                    " to $7.5 million", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PL_IncreasedOnlineThreshould_Underwritings")))
            {
                global::ApolloQAAutomation.Features.Unit.PL.PL_IncreasedOnlineThreshould_UnderwritingsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL Quote gets Referred when premium is more than $30000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_IncreasedOnlineThreshould_Underwritings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Referred")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PA")]
        public void PLQuoteGetsReferredWhenPremiumIsMoreThan30000()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Referred",
                    "PA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL Quote gets Referred when premium is more than $30000", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 8
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1765 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1765.AddRow(new string[] {
                            "Attorney",
                            "12",
                            "I Lease a Space From Others",
                            "",
                            "17404",
                            "PL"});
#line 9
 testRunner.Given("user starts a quote with:", ((string)(null)), table1765, "Given ");
#line hidden
#line 12
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1766 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table1766.AddRow(new string[] {
                            "Partnership",
                            "Test LPL Quote Only Title Agent",
                            "1060 Church Rd",
                            "TLPLQOTA"});
#line 13
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table1766, "Then ");
#line hidden
#line 16
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1767 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1767.AddRow(new string[] {
                            "What year was your business started?",
                            "2020"});
                table1767.AddRow(new string[] {
                            "How many attorneys does your firm have?",
                            "12"});
                table1767.AddRow(new string[] {
                            "Do you use any of counsel or independent contractor attorneys?",
                            "Yes"});
                table1767.AddRow(new string[] {
                            "Number of full-time of counsel/independent contractor attorneys:",
                            "8"});
                table1767.AddRow(new string[] {
                            "Number of part-time of counsel/independent contractor attorneys:",
                            "0"});
#line 17
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table1767, "Then ");
#line hidden
#line 24
 testRunner.Then("user verifies the appearance of the PL Coverage Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1768 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1768.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table1768.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table1768.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "Yes"});
                table1768.AddRow(new string[] {
                            "What is the retroactive date?",
                            "01/01/2022"});
                table1768.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 25
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table1768, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1769 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1769.AddRow(new string[] {
                            "Has your business, or any of its owners/officers been convicted of a felony in th" +
                                "e past 5 years?",
                            "No"});
                table1769.AddRow(new string[] {
                            "Has your business, or any of its owners/officers declared bankruptcy in the past " +
                                "3 years?",
                            "No"});
                table1769.AddRow(new string[] {
                            "Do you practice in these areas of law?",
                            "Real Estate"});
                table1769.AddRow(new string[] {
                            "Does your business own a Title Agency?",
                            "Yes"});
                table1769.AddRow(new string[] {
                            "Do you practice in Securities Law (financial transactions)?",
                            "No"});
                table1769.AddRow(new string[] {
                            "Have any members of your firm been suspended or disbarred in the past 5 years?",
                            "No"});
                table1769.AddRow(new string[] {
                            "Have any members of your firm engaged in mass tort or class action cases in the p" +
                                "ast 5 years?",
                            "No"});
                table1769.AddRow(new string[] {
                            "Would you ever serve as a trustee or executor?",
                            "No"});
                table1769.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
                table1769.AddRow(new string[] {
                            "Do you want to save up to 35% with a soft credit check?",
                            "No"});
#line 32
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table1769, "Then ");
#line hidden
#line 44
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1770 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1770.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table1770.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table1770.AddRow(new string[] {
                            "Address",
                            "60 Lincoln Street"});
                table1770.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table1770.AddRow(new string[] {
                            "City",
                            "York"});
                table1770.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table1770.AddRow(new string[] {
                            "Email",
                            "Test@biBERK.com"});
                table1770.AddRow(new string[] {
                            "Business Phone",
                            "1231231321"});
                table1770.AddRow(new string[] {
                            "Ext",
                            "1234"});
                table1770.AddRow(new string[] {
                            "Website/Social",
                            ""});
                table1770.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 45
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table1770, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1771 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1771.AddRow(new string[] {
                            "Title Agency",
                            "Test Title Agency"});
#line 58
 testRunner.Then("user verifies the appearance of the PL Attorneys - Nearly Finished page with thes" +
                        "e values:", ((string)(null)), table1771, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1772 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1772.AddRow(new string[] {
                            "Business name",
                            "Whitestone Titles"});
                table1772.AddRow(new string[] {
                            "DBA",
                            "ROL"});
                table1772.AddRow(new string[] {
                            "Contact first name",
                            "Marty"});
                table1772.AddRow(new string[] {
                            "Contact last name",
                            "Mailbox"});
                table1772.AddRow(new string[] {
                            "Email",
                            "test@biz.com"});
                table1772.AddRow(new string[] {
                            "Phone",
                            "(317) 249-1913"});
#line 61
 testRunner.When("user fills out the PL refer page with these values:", ((string)(null)), table1772, "When ");
#line hidden
#line 69
 testRunner.Then("user verifies the PL refer confirmation appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL Quote gets Issued when premium is more than $25000 and less than $30000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_IncreasedOnlineThreshould_Underwritings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OK")]
        public void PLQuoteGetsIssuedWhenPremiumIsMoreThan25000AndLessThan30000()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Issued",
                    "OK"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL Quote gets Issued when premium is more than $25000 and less than $30000", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 72
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1773 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1773.AddRow(new string[] {
                            "Lawyer",
                            "10",
                            "I Lease a Space From Others",
                            "",
                            "74110",
                            "PL"});
#line 73
 testRunner.Given("user starts a quote with:", ((string)(null)), table1773, "Given ");
#line hidden
#line 76
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1774 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table1774.AddRow(new string[] {
                            "Corporation",
                            "Lawyers R Us",
                            "15872 Co Rd 29",
                            "LRU"});
#line 77
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table1774, "Then ");
#line hidden
#line 80
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1775 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1775.AddRow(new string[] {
                            "What year was your business started?",
                            "2000"});
                table1775.AddRow(new string[] {
                            "How many attorneys does your firm have?",
                            "10"});
                table1775.AddRow(new string[] {
                            "Do you use any of counsel or independent contractor attorneys?",
                            "Yes"});
                table1775.AddRow(new string[] {
                            "Number of full-time of counsel/independent contractor attorneys:",
                            "5"});
                table1775.AddRow(new string[] {
                            "Number of part-time of counsel/independent contractor attorneys:",
                            "0"});
#line 81
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table1775, "Then ");
#line hidden
#line 88
 testRunner.Then("user verifies the appearance of the PL Coverage Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1776 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1776.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table1776.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table1776.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "Yes"});
                table1776.AddRow(new string[] {
                            "What is the retroactive date?",
                            ""});
                table1776.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 89
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table1776, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1777 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1777.AddRow(new string[] {
                            "Has your business, or any of its owners/officers been convicted of a felony in th" +
                                "e past 5 years?",
                            "No"});
                table1777.AddRow(new string[] {
                            "Has your business, or any of its owners/officers declared bankruptcy in the past " +
                                "3 years?",
                            "No"});
                table1777.AddRow(new string[] {
                            "Do you practice in these areas of law?",
                            "Intellectual Property (copyright/patent/trademark);Environmental;Real Estate"});
                table1777.AddRow(new string[] {
                            "Do you file patents on behalf of clients?",
                            "No"});
                table1777.AddRow(new string[] {
                            "Does your business own a Title Agency?",
                            "Yes"});
                table1777.AddRow(new string[] {
                            "Do you practice in Securities Law (financial transactions)?",
                            "No"});
                table1777.AddRow(new string[] {
                            "Have any members of your firm been suspended or disbarred in the past 5 years?",
                            "No"});
                table1777.AddRow(new string[] {
                            "Have any members of your firm engaged in mass tort or class action cases in the p" +
                                "ast 5 years?",
                            "No"});
                table1777.AddRow(new string[] {
                            "Would you ever serve as a trustee or executor?",
                            "No"});
                table1777.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
                table1777.AddRow(new string[] {
                            "Do you want to save up to 35% with a soft credit check?",
                            "No"});
#line 96
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table1777, "Then ");
#line hidden
#line 109
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1778 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1778.AddRow(new string[] {
                            "First Name",
                            "Teddy"});
                table1778.AddRow(new string[] {
                            "Last Name",
                            "Treebark"});
                table1778.AddRow(new string[] {
                            "Address",
                            "4123 S Harvard Ave"});
                table1778.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table1778.AddRow(new string[] {
                            "City",
                            "Tulsa"});
                table1778.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table1778.AddRow(new string[] {
                            "Email",
                            "test@biz.com"});
                table1778.AddRow(new string[] {
                            "Business Phone",
                            "4321234423"});
#line 110
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table1778, "Then ");
#line hidden
#line 120
 testRunner.Then("user verifies the appearance of the PL Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 121
 testRunner.Then("user selects their Yearly - Standard Quote", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1779 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1779.AddRow(new string[] {
                            "Title Agency",
                            "Test Title Agency"});
#line 122
 testRunner.Then("user verifies the appearance of the PL Attorneys - Almost Done page with these va" +
                        "lues:", ((string)(null)), table1779, "Then ");
#line hidden
#line 125
 testRunner.Then("user verifies the PL purchase page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1780 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1780.AddRow(new string[] {
                            "Autopay",
                            "On"});
                table1780.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table1780.AddRow(new string[] {
                            "CC Number",
                            "4111 1111 1111 1111"});
                table1780.AddRow(new string[] {
                            "CC Expiration",
                            "03/30"});
                table1780.AddRow(new string[] {
                            "Street Address",
                            "4123 S Harvard Ave"});
                table1780.AddRow(new string[] {
                            "ZIP Code",
                            "17404"});
                table1780.AddRow(new string[] {
                            "City",
                            "York"});
                table1780.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table1780.AddRow(new string[] {
                            "Extension",
                            ""});
#line 126
 testRunner.When("user fills out the PL purchase page with these values:", ((string)(null)), table1780, "When ");
#line hidden
#line 137
 testRunner.Then("user verifies the PL how would you rate our service? page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 138
 testRunner.Then("user verifies the PL thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL Quote gets Referred when Revenue is greater than $7.5 million")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_IncreasedOnlineThreshould_Underwritings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Referred")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("IL")]
        public void PLQuoteGetsReferredWhenRevenueIsGreaterThan7_5Million()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Referred",
                    "IL"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL Quote gets Referred when Revenue is greater than $7.5 million", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 141
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1781 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1781.AddRow(new string[] {
                            "Accountant",
                            "2",
                            "I Lease a Space From Others",
                            "",
                            "60606",
                            "PL"});
#line 142
 testRunner.Given("user starts a quote with:", ((string)(null)), table1781, "Given ");
#line hidden
#line 145
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1782 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table1782.AddRow(new string[] {
                            "Corporation",
                            "Accountants R Us",
                            "15872 Co Rd 29",
                            "No"});
#line 146
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table1782, "Then ");
#line hidden
#line 149
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1783 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1783.AddRow(new string[] {
                            "What year was your business started?",
                            "2000"});
                table1783.AddRow(new string[] {
                            "What is your estimated gross annual revenue?",
                            "770,7700"});
                table1783.AddRow(new string[] {
                            "Do you use a written contract or statement of work (SOW)?",
                            "Always"});
                table1783.AddRow(new string[] {
                            "Who signs off on the terms & conditions for written contracts or statements of wo" +
                                "rk (SOW)?",
                            "Outside"});
#line 150
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table1783, "Then ");
#line hidden
#line 156
 testRunner.Then("user verifies the appearance of the PL Coverage Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1784 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1784.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table1784.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table1784.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "Yes"});
                table1784.AddRow(new string[] {
                            "What is the retroactive date?",
                            "06/24/2022"});
                table1784.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 157
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table1784, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1785 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1785.AddRow(new string[] {
                            "Do you provide financial investment advice?",
                            "No"});
                table1785.AddRow(new string[] {
                            "Do you provide forensic accounting including litigation support or investigative " +
                                "services?",
                            "No"});
                table1785.AddRow(new string[] {
                            "Do you provide tax services?",
                            "Business and Individual – No Estate"});
                table1785.AddRow(new string[] {
                            "Do you serve as a trustee or executor?",
                            "No"});
                table1785.AddRow(new string[] {
                            "Do you provide business valuations or aid in mergers & acquisitions?",
                            "No"});
                table1785.AddRow(new string[] {
                            "Do you help set up tax shelters or Limited Partnerships?",
                            "No"});
                table1785.AddRow(new string[] {
                            "Do you perform auditing/attestation services?",
                            "No"});
                table1785.AddRow(new string[] {
                            "Do you do any work that requires licensed engineers?",
                            "No"});
                table1785.AddRow(new string[] {
                            "Do you audit or consult on workplace safety for occupational hazards?",
                            "No"});
                table1785.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 164
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table1785, "Then ");
#line hidden
#line 176
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1786 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1786.AddRow(new string[] {
                            "First Name",
                            "Teddy"});
                table1786.AddRow(new string[] {
                            "Last Name",
                            "Treebark"});
                table1786.AddRow(new string[] {
                            "Address",
                            "4100 S Ashland Ave"});
                table1786.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table1786.AddRow(new string[] {
                            "City",
                            "Chicago"});
                table1786.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table1786.AddRow(new string[] {
                            "Email",
                            "accountant@biz.com"});
                table1786.AddRow(new string[] {
                            "Business Phone",
                            "9198857474"});
                table1786.AddRow(new string[] {
                            "Ext",
                            ""});
                table1786.AddRow(new string[] {
                            "Website/Social",
                            ""});
                table1786.AddRow(new string[] {
                            "Have Broker",
                            "No"});
#line 177
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table1786, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1787 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1787.AddRow(new string[] {
                            "Business name",
                            "Whitestone Titles"});
                table1787.AddRow(new string[] {
                            "DBA",
                            "ROL"});
                table1787.AddRow(new string[] {
                            "Contact first name",
                            "Marty"});
                table1787.AddRow(new string[] {
                            "Contact last name",
                            "Mailbox"});
                table1787.AddRow(new string[] {
                            "Email",
                            "test@biz.com"});
                table1787.AddRow(new string[] {
                            "Phone",
                            "(317) 249-1913"});
#line 190
 testRunner.When("user fills out the PL refer page with these values:", ((string)(null)), table1787, "When ");
#line hidden
#line 198
 testRunner.Then("user verifies the PL refer confirmation appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL Quote gets Issued when Revenue is greater than $6 million and less than $7.5 m" +
            "illion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_IncreasedOnlineThreshould_Underwritings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PA")]
        public void PLQuoteGetsIssuedWhenRevenueIsGreaterThan6MillionAndLessThan7_5Million()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Issued",
                    "PA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL Quote gets Issued when Revenue is greater than $6 million and less than $7.5 m" +
                    "illion", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 201
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1788 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1788.AddRow(new string[] {
                            "Hair Stylist",
                            "0",
                            "I Lease a Space From Others",
                            "",
                            "17404",
                            "PL"});
#line 202
 testRunner.Given("user starts a quote with:", ((string)(null)), table1788, "Given ");
#line hidden
#line 205
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1789 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Name of Business",
                            "Business Address",
                            "DBA"});
                table1789.AddRow(new string[] {
                            "Limited Liability Co. (LLC)",
                            "Test",
                            "15872 Co Rd 29",
                            "No"});
#line 206
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table1789, "Then ");
#line hidden
#line 209
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1790 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1790.AddRow(new string[] {
                            "What year was your business started?",
                            "2000"});
                table1790.AddRow(new string[] {
                            "What is your estimated gross annual revenue?",
                            "7,499,999"});
#line 210
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table1790, "Then ");
#line hidden
#line 214
 testRunner.Then("user verifies the appearance of the PL Coverage Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1791 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1791.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table1791.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table1791.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "Yes"});
                table1791.AddRow(new string[] {
                            "What is the retroactive date?",
                            "06/24/2022"});
                table1791.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 215
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table1791, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1792 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1792.AddRow(new string[] {
                            "Do you provide body massage services?",
                            "No"});
                table1792.AddRow(new string[] {
                            "Do you provide tattoo services?",
                            "No"});
                table1792.AddRow(new string[] {
                            "Do you operate tanning beds?",
                            "No"});
                table1792.AddRow(new string[] {
                            "Do you do keratin hair-straightening procedures or brazilian blowouts?",
                            "No"});
                table1792.AddRow(new string[] {
                            "Do you do body piercings?",
                            "No"});
                table1792.AddRow(new string[] {
                            "Do you do any body sculpting or cosmetic medical procedures?",
                            "No"});
                table1792.AddRow(new string[] {
                            "Do you provide acupuncture, facial injection, fillers, or laser treatment service" +
                                "s?",
                            "No"});
                table1792.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 222
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table1792, "Then ");
#line hidden
#line 232
 testRunner.Then("user verifies the appearance of the PL About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1793 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1793.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table1793.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table1793.AddRow(new string[] {
                            "Address",
                            "60 Lincoln Street"});
                table1793.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table1793.AddRow(new string[] {
                            "City",
                            "York"});
                table1793.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table1793.AddRow(new string[] {
                            "Email",
                            "Automation@biBERK.com"});
                table1793.AddRow(new string[] {
                            "Business Phone",
                            "1231231321"});
                table1793.AddRow(new string[] {
                            "Ext",
                            "1234"});
#line 233
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table1793, "Then ");
#line hidden
#line 244
 testRunner.Then("user verifies the appearance of the PL Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 245
 testRunner.Then("user selects their Yearly - Plus Quote", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 246
 testRunner.Then("user verifies the PL purchase page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1794 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1794.AddRow(new string[] {
                            "Autopay",
                            "On"});
                table1794.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table1794.AddRow(new string[] {
                            "CC Number",
                            "4111 1111 1111 1111"});
                table1794.AddRow(new string[] {
                            "CC Expiration",
                            "03/30"});
                table1794.AddRow(new string[] {
                            "Street Address",
                            "60 Lincoln Street"});
                table1794.AddRow(new string[] {
                            "ZIP Code",
                            "17404"});
                table1794.AddRow(new string[] {
                            "City",
                            "York"});
                table1794.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table1794.AddRow(new string[] {
                            "Extension",
                            ""});
#line 247
 testRunner.When("user fills out the PL purchase page with these values:", ((string)(null)), table1794, "When ");
#line hidden
#line 258
 testRunner.Then("user verifies the PL how would you rate our service? page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 259
 testRunner.Then("user verifies the PL thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
 testRunner.And("user verifies that the following LOBs are recommended: WC, BP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PL Quote gets Issued when Revenue is equal to $7.5 million")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PL_IncreasedOnlineThreshould_Underwritings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PA")]
        public void PLQuoteGetsIssuedWhenRevenueIsEqualTo7_5Million()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PL",
                    "Issued",
                    "PA"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PL Quote gets Issued when Revenue is equal to $7.5 million", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 263
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1795 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1795.AddRow(new string[] {
                            "Etailer",
                            "0",
                            "I Lease a Space From Others",
                            "",
                            "17404",
                            "PL"});
#line 264
 testRunner.Given("user starts a quote with:", ((string)(null)), table1795, "Given ");
#line hidden
#line 267
 testRunner.Then("user verifies the appearance of the PL A Quick Introduction page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1796 = new TechTalk.SpecFlow.Table(new string[] {
                            "Business Structure",
                            "Insured First Name",
                            "Insured Last Name",
                            "Business Address",
                            "DBA"});
                table1796.AddRow(new string[] {
                            "Individual/Sole Proprietor",
                            "TestF",
                            "TestL",
                            "1060 Church Rd",
                            "Test PL Quote Double Bundle"});
#line 268
 testRunner.Then("user fills out A Quick Introduction page with these values:", ((string)(null)), table1796, "Then ");
#line hidden
#line 271
 testRunner.Then("user verifies the appearance of the PL Business Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1797 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1797.AddRow(new string[] {
                            "What year was your business started?",
                            "2020"});
                table1797.AddRow(new string[] {
                            "What is your estimated gross annual revenue?",
                            "7,500,000"});
                table1797.AddRow(new string[] {
                            "Do you use a written contract or statement of work (SOW)?",
                            "Always"});
                table1797.AddRow(new string[] {
                            "Who signs off on the terms & conditions for written contracts or statements of wo" +
                                "rk (SOW)?",
                            "Outside"});
#line 272
 testRunner.Then("user fills out the PL Business Details page with these values:", ((string)(null)), table1797, "Then ");
#line hidden
#line 278
 testRunner.Then("user verifies the appearance of the PL Coverage Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1798 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1798.AddRow(new string[] {
                            "When should your policy start?",
                            ""});
                table1798.AddRow(new string[] {
                            "Do you currently have a Professional Liability (E&O) policy in effect?",
                            "Yes"});
                table1798.AddRow(new string[] {
                            "Does your current policy have a retroactive date?",
                            "I Don\'t Know"});
                table1798.AddRow(new string[] {
                            "How many Professional Liability (E&O) claims have you had in the past 3 years, if" +
                                " any?",
                            "0"});
#line 279
 testRunner.Then("user fills out the PL Coverage Details page with these values:", ((string)(null)), table1798, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1799 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1799.AddRow(new string[] {
                            "Can users upload content to websites you own or operate?",
                            "No"});
                table1799.AddRow(new string[] {
                            "Do you develop software that provides or assists with medical diagnoses?",
                            "No"});
                table1799.AddRow(new string[] {
                            "Do you develop software that aids architects or engineers in product design?",
                            "No"});
                table1799.AddRow(new string[] {
                            "Do you electronically store private data?",
                            "No"});
                table1799.AddRow(new string[] {
                            "Do you design, integrate, or maintain networks for clients?",
                            "No"});
                table1799.AddRow(new string[] {
                            "Do you provide website hosting or domain registration?",
                            "No"});
                table1799.AddRow(new string[] {
                            "Do you design any hardware?",
                            "No"});
                table1799.AddRow(new string[] {
                            "In the past 3 years, has any party threatened or made claims for damages or other" +
                                " legal remedies against you or against any business entity with which you or any" +
                                " other business owner have been associated as owner, principal, officer, or empl" +
                                "oyee?",
                            "No"});
#line 285
 testRunner.Then("user fills out the PL Your Services page", ((string)(null)), table1799, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1800 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1800.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table1800.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table1800.AddRow(new string[] {
                            "Address",
                            "225 E Princess St"});
                table1800.AddRow(new string[] {
                            "Apt/Suite",
                            ""});
                table1800.AddRow(new string[] {
                            "City",
                            "York"});
                table1800.AddRow(new string[] {
                            "Use as Mailing Address",
                            "Yes"});
                table1800.AddRow(new string[] {
                            "Email",
                            "Automation@biBERK.com"});
                table1800.AddRow(new string[] {
                            "Business Phone",
                            "1231231321"});
                table1800.AddRow(new string[] {
                            "Ext",
                            "1234"});
#line 295
 testRunner.Then("user fills out About You page with these values:", ((string)(null)), table1800, "Then ");
#line hidden
#line 306
 testRunner.Then("user verifies the appearance of the PL Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 307
 testRunner.Then("user verifies that the following coverages are displayed in the details of their " +
                        "PL Plus Quote: PL,Cyber,Copyright Plus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 308
 testRunner.Then("user selects their Yearly - Plus Quote", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 309
 testRunner.Then("user verifies the PL purchase page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1801 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1801.AddRow(new string[] {
                            "Autopay",
                            "Off"});
                table1801.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table1801.AddRow(new string[] {
                            "CC Number",
                            "4111 1111 1111 1111"});
                table1801.AddRow(new string[] {
                            "CC Expiration",
                            "03/30"});
                table1801.AddRow(new string[] {
                            "Street Address",
                            "225 E Princess St"});
                table1801.AddRow(new string[] {
                            "ZIP Code",
                            "17403"});
                table1801.AddRow(new string[] {
                            "City",
                            "York"});
                table1801.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table1801.AddRow(new string[] {
                            "Extension",
                            ""});
#line 310
 testRunner.When("user fills out the PL purchase page with these values:", ((string)(null)), table1801, "When ");
#line hidden
#line 321
 testRunner.Then("user verifies the PL how would you rate our service? page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 322
 testRunner.Then("user verifies the PL thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 323
 testRunner.And("user verifies that the following LOBs are recommended: BOP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
