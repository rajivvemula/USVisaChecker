// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Declined.ConstructionAndSpecialtyTradeContractors_D
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_SidingInstallation_DFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_SidingInstallation_D.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Declined/ConstructionAndSpecialtyTradeContractors_D", "WC_SidingInstallation_D", @"Ineligible quote - response to carrier question;
Decline Reason: Policy premium exceeds max allowable value for sales/online..
Keyword: Siding Installation
Yes I have Employee
Number of employee : 5
Business Operation: I Lease a Space From Others
Included Officer: 0
Business started year : Started 4 years ago
Business Structured: LLC
The second test on this page declines due to ""Payroll is less than Guard Minimum threshold for Bad state.""", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_SidingInstallation_D")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Declined.ConstructionAndSpecialtyTradeContractors_D.WC_SidingInstallation_DFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Siding Installation gets declined due premium exceeding max allowable value fo" +
            "r sales/online")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_SidingInstallation_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Construction")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        public void WCSidingInstallationGetsDeclinedDuePremiumExceedingMaxAllowableValueForSalesOnline()
        {
            string[] tagsOfScenario = new string[] {
                    "Construction",
                    "WC",
                    "Declined",
                    "NC",
                    "Regression"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Siding Installation gets declined due premium exceeding max allowable value fo" +
                    "r sales/online", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 14
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1883 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1883.AddRow(new string[] {
                            "Siding Installation",
                            "5",
                            "I Lease a Space From Others",
                            "",
                            "27007",
                            "WC"});
#line 15
 testRunner.Given("user starts a quote with:", ((string)(null)), table1883, "Given ");
#line hidden
#line 18
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1884 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1884.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table1884.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 4 years ago"});
                table1884.AddRow(new string[] {
                            "How is your business structured?",
                            "Limited Liability Co. (LLC)"});
                table1884.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "45000"});
                table1884.AddRow(new string[] {
                            "Are there employees that do not do any actual physical work but travel to job sit" +
                                "es?",
                            "no"});
                table1884.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table1884.AddRow(new string[] {
                            "Do you use any subcontractors or pay any workers using IRS Form 1099?",
                            "no"});
                table1884.AddRow(new string[] {
                            "Business",
                            "Siding Installation"});
                table1884.AddRow(new string[] {
                            "Address",
                            "1421 Little Mountain Church Rd;Ararat"});
                table1884.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table1884.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table1884.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table1884.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table1884.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 19
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table1884, "Then ");
#line hidden
#line 35
 testRunner.And("user verifies the Wage Calculator page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("user clicks continue from the Wage Calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1885 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1885.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
                table1885.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "0"});
#line 38
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table1885, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1886 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name"});
                table1886.AddRow(new string[] {
                            "OneF",
                            "OneL"});
#line 42
 testRunner.Then("user handles the WC Excluded OO with these values:", ((string)(null)), table1886, "Then ");
#line hidden
#line 45
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1887 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1887.AddRow(new string[] {
                            "What percentage of work done is framing (rough carpentry)?",
                            "60"});
                table1887.AddRow(new string[] {
                            "Do you ever transport six or more workers in the same vehicle?",
                            "no"});
                table1887.AddRow(new string[] {
                            "Do you do roofing work?",
                            "no"});
                table1887.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table1887.AddRow(new string[] {
                            "Do you perform any work over 30 feet above ground level?",
                            "yes"});
                table1887.AddRow(new string[] {
                            "What is the max height, in feet, you work above ground level?",
                            "45"});
                table1887.AddRow(new string[] {
                            "Do you perform any work underground including in trenches, holes, or tunnels?",
                            "yes"});
                table1887.AddRow(new string[] {
                            "What is the max depth, in feet, you work underground?",
                            "25"});
                table1887.AddRow(new string[] {
                            "Do you do any water damage, fire damage, or mold restoration?",
                            "no"});
                table1887.AddRow(new string[] {
                            "Do you do any demolition or wrecking of entire buildings or homes?",
                            "no"});
                table1887.AddRow(new string[] {
                            "Do the business owner(s) of this business have a combined majority ownership in a" +
                                "ny other construction business?",
                            "no"});
                table1887.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table1887.AddRow(new string[] {
                            "Do you agree to submit proof of insurance claims history, also called loss runs, " +
                                "for the prior 3 years within 30 days of the effective date of the policy?",
                            "yes"});
                table1887.AddRow(new string[] {
                            "Do you do any construction work in New York?",
                            "yes"});
                table1887.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
                table1887.AddRow(new string[] {
                            "Does your business have a state-issued experience modification factor (XMOD)?",
                            "no"});
#line 46
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table1887, "Then ");
#line hidden
#line 64
 testRunner.Then("user verifies the WC decline page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Siding Installation gets declined in WI due to Pay roll under 15K")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_SidingInstallation_D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Construction")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Declined")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        public void WCSidingInstallationGetsDeclinedInWIDueToPayRollUnder15K()
        {
            string[] tagsOfScenario = new string[] {
                    "Construction",
                    "WC",
                    "Declined",
                    "WI",
                    "Regression"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Siding Installation gets declined in WI due to Pay roll under 15K", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 67
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1888 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1888.AddRow(new string[] {
                            "Siding Installation",
                            "15",
                            "I Lease a Space From Others",
                            "",
                            "53093",
                            "WC"});
#line 68
 testRunner.Given("user starts a quote with:", ((string)(null)), table1888, "Given ");
#line hidden
#line 71
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1889 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1889.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table1889.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 2 years ago"});
                table1889.AddRow(new string[] {
                            "How is your business structured?",
                            "Limited Liability Co. (LLC)"});
                table1889.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "12000"});
                table1889.AddRow(new string[] {
                            "Are there employees that do not do any actual physical work but travel to job sit" +
                                "es?",
                            "no"});
                table1889.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table1889.AddRow(new string[] {
                            "Do you use any subcontractors or pay any workers using IRS Form 1099?",
                            "no"});
                table1889.AddRow(new string[] {
                            "Business",
                            "Wisconsin Siding Installations"});
                table1889.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table1889.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table1889.AddRow(new string[] {
                            "Address",
                            "Gulfport W5062 County Rd F;Waldo"});
                table1889.AddRow(new string[] {
                            "Email",
                            "sidinginstall@gmail.com"});
                table1889.AddRow(new string[] {
                            "Phone",
                            "9194844411"});
#line 72
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table1889, "Then ");
#line hidden
#line 87
 testRunner.And("user verifies the Wage Calculator page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1890 = new TechTalk.SpecFlow.Table(new string[] {
                            "Average Employee Wage",
                            "Number of Employees",
                            "Hours per Week"});
                table1890.AddRow(new string[] {
                            "7.25",
                            "5",
                            "5"});
#line 88
 testRunner.Then("user fills out the Payroll Calculator with these values:", ((string)(null)), table1890, "Then ");
#line hidden
#line 91
 testRunner.Then("user clicks continue from the Wage Calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 92
 testRunner.And("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1891 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1891.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
                table1891.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "0"});
#line 93
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table1891, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1892 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name"});
                table1892.AddRow(new string[] {
                            "OneF",
                            "OneL"});
#line 97
 testRunner.Then("user handles the WC Excluded OO with these values:", ((string)(null)), table1892, "Then ");
#line hidden
#line 100
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1893 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table1893.AddRow(new string[] {
                            "What percentage of work done is framing (rough carpentry)?",
                            "60"});
                table1893.AddRow(new string[] {
                            "Do you ever transport six or more workers in the same vehicle?",
                            "no"});
                table1893.AddRow(new string[] {
                            "Do you do roofing work?",
                            "no"});
                table1893.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table1893.AddRow(new string[] {
                            "Do you perform any work over 30 feet above ground level?",
                            "no"});
                table1893.AddRow(new string[] {
                            "Do you perform any work underground including in trenches, holes, or tunnels?",
                            "no"});
                table1893.AddRow(new string[] {
                            "Do you do any water damage, fire damage, or mold restoration?",
                            "no"});
                table1893.AddRow(new string[] {
                            "Do you do any demolition or wrecking of entire buildings or homes?",
                            "no"});
                table1893.AddRow(new string[] {
                            "Do the business owner(s) of this business have a combined majority ownership in a" +
                                "ny other construction business?",
                            "no"});
                table1893.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "no"});
                table1893.AddRow(new string[] {
                            "When was your last policy in effect?",
                            "Never no prior insurance"});
                table1893.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
                table1893.AddRow(new string[] {
                            "Do you do any construction work in New York?",
                            "no"});
#line 101
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table1893, "Then ");
#line hidden
#line 116
 testRunner.Then("user verifies the WC decline page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
