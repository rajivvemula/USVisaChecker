// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Issued.RestaurantTaverns_I
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_Restaurant_WithDineIn_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_Restaurant_WithDineIn_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Issued/RestaurantTaverns_I", "WC_Restaurant_WithDineIn_I", "WC issued policy for Restaurant: With Dine In", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_Restaurant_WithDineIn_I")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Issued.RestaurantTaverns_I.WC_Restaurant_WithDineIn_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Restaurant With Dine In issued policy for GA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_Restaurant_WithDineIn_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Restaurant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("YourServices")]
        public void WCRestaurantWithDineInIssuedPolicyForGA()
        {
            string[] tagsOfScenario = new string[] {
                    "WC",
                    "Issued",
                    "Restaurant",
                    "GA",
                    "Regression",
                    "YourServices"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Restaurant With Dine In issued policy for GA", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2444 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2444.AddRow(new string[] {
                            "Restaurant: With Dine In",
                            "4",
                            "I Lease a Space From Others",
                            "",
                            "30033",
                            "WC"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table2444, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2445 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2445.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2445.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 3 years ago"});
                table2445.AddRow(new string[] {
                            "How is your business structured?",
                            "Individual/Sole Proprietor"});
                table2445.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "440440"});
                table2445.AddRow(new string[] {
                            "Are there any delivery drivers on staff (includes bicycles)?",
                            "no"});
                table2445.AddRow(new string[] {
                            "Insured First Name",
                            "Madden"});
                table2445.AddRow(new string[] {
                            "Insured Last Name",
                            "Ali"});
                table2445.AddRow(new string[] {
                            "Address",
                            "1750 Decatur Hwy;Decatur"});
                table2445.AddRow(new string[] {
                            "Email",
                            "Madden@gmail.com"});
                table2445.AddRow(new string[] {
                            "Phone",
                            "8329890445"});
#line 11
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2445, "Then ");
#line hidden
#line 23
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2446 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2446.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "1"});
#line 24
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2446, "Then ");
#line hidden
#line 27
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.Then("user verifies the appearance of the WC Your Services Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2447 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2447.AddRow(new string[] {
                            "What percentage of your overall sales involve alcohol?",
                            "10"});
                table2447.AddRow(new string[] {
                            "What percentage of your overall sales involve off-premises catering, lunch wagons" +
                                ", or food trucks?",
                            "10"});
                table2447.AddRow(new string[] {
                            "What percentage of your overall sales involve delivery?",
                            "10"});
                table2447.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2447.AddRow(new string[] {
                            "Do you use bouncers or security guards?",
                            "Yes - via our employees"});
                table2447.AddRow(new string[] {
                            "Do you provide any private adult entertainment including escorts and/or strippers" +
                                "?",
                            "no"});
                table2447.AddRow(new string[] {
                            "Are you open after 2 A.M.?",
                            "no"});
                table2447.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "no"});
                table2447.AddRow(new string[] {
                            "When was your last policy in effect?",
                            "Never no prior insurance"});
                table2447.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
                table2447.AddRow(new string[] {
                            "Do you deliver any food or goods by bicycle?",
                            "no"});
#line 29
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2447, "Then ");
#line hidden
#line 42
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 44
    testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2448 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2448.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 45
 testRunner.When("user selects a Plus plan quote with the following customizations from the WC your" +
                        " quote page:", ((string)(null)), table2448, "When ");
#line hidden
#line 48
    testRunner.Then("user verifies the appearance of the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.Then("user begins the WC AI page setting the FEIN with value 06-2671064", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.And("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table2449 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2449.AddRow(new string[] {
                            "Payment Option",
                            "15% Down + 9 Monthly Installments"});
                table2449.AddRow(new string[] {
                            "CC Name",
                            "Test Pay"});
                table2449.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2449.AddRow(new string[] {
                            "CC Expiration Month",
                            "11"});
                table2449.AddRow(new string[] {
                            "CC Expiration Year",
                            "25"});
                table2449.AddRow(new string[] {
                            "Autopay",
                            "No"});
                table2449.AddRow(new string[] {
                            "First Name",
                            "FN"});
                table2449.AddRow(new string[] {
                            "Last Name",
                            "LN"});
                table2449.AddRow(new string[] {
                            "Email",
                            "FNLN@gmail.com"});
                table2449.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2449.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 51
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2449, "Then ");
#line hidden
#line 64
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
