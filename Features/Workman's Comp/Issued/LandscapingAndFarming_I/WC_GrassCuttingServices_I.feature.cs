// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Issued.LandscapingAndFarming_I
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_GrassCuttingServices_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_GrassCuttingServices_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Issued/LandscapingAndFarming_I", "WC_GrassCuttingServices_I", "Issuing a Grass Cutting Policy in NH", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_GrassCuttingServices_I")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Issued.LandscapingAndFarming_I.WC_GrassCuttingServices_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Grass Cutting Services policy gets Issued for NH state")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_GrassCuttingServices_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Landscaping")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NH")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("YourServices")]
        public void WCGrassCuttingServicesPolicyGetsIssuedForNHState()
        {
            string[] tagsOfScenario = new string[] {
                    "WC",
                    "Issued",
                    "Regression",
                    "Landscaping",
                    "NH",
                    "YourServices"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Grass Cutting Services policy gets Issued for NH state", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2261 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2261.AddRow(new string[] {
                            "Grass Cutting Services",
                            "3",
                            "I Work at a Job Site",
                            "",
                            "03103",
                            "WC"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table2261, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2262 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2262.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2262.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 7 years ago"});
                table2262.AddRow(new string[] {
                            "How is your business structured?",
                            "Limited Liability Co. (LLC)"});
                table2262.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "70000"});
                table2262.AddRow(new string[] {
                            "Do you use any subcontractors or pay any workers using IRS Form 1099?",
                            "no"});
                table2262.AddRow(new string[] {
                            "Business",
                            "Test refer"});
                table2262.AddRow(new string[] {
                            "Address",
                            "340 COMMERCIAL ST STE 401;Manchester"});
                table2262.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2262.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2262.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2262.AddRow(new string[] {
                            "Phone",
                            "2551234587"});
                table2262.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 11
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2262, "Then ");
#line hidden
#line 25
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2263 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2263.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "2"});
                table2263.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "2"});
#line 26
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2263, "Then ");
#line hidden
#line 30
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2264 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2264.AddRow(new string[] {
                            "Do you trim trees above ground level or remove trees/stumps?",
                            "no"});
                table2264.AddRow(new string[] {
                            "Do you do any new landscaping such as laying down bricks,  sod, or stones or plan" +
                                "ting work?",
                            "no"});
                table2264.AddRow(new string[] {
                            "Do you do any roofing work?",
                            "no"});
                table2264.AddRow(new string[] {
                            "Do you ever transport six or more workers in the same vehicle?",
                            "no"});
                table2264.AddRow(new string[] {
                            "Do you do any framing work?",
                            "no"});
                table2264.AddRow(new string[] {
                            "Do you provide any lot or land clearing services?",
                            "no"});
                table2264.AddRow(new string[] {
                            "Do you do any construction work such as carpentry, decking, handyman jobs, or pai" +
                                "nting?",
                            "no"});
                table2264.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2264.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2264.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
                table2264.AddRow(new string[] {
                            "Federal Employer Identification Number (FEIN)",
                            "23-1326967"});
#line 31
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2264, "Then ");
#line hidden
#line 44
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 45
 testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2265 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2265.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 46
 testRunner.When("user selects a plus plan quote with the following customizations from the WC your" +
                        " quote page:", ((string)(null)), table2265, "When ");
#line hidden
#line 49
 testRunner.Then("user begins the WC AI page having the FEIN with value 23-1326965", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.And("wc user handles 2 covered oo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table2266 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2266.AddRow(new string[] {
                            "CC Name",
                            "Funky Chicken-cheese"});
                table2266.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2266.AddRow(new string[] {
                            "CC Expiration Month",
                            "11"});
                table2266.AddRow(new string[] {
                            "CC Expiration Year",
                            "25"});
                table2266.AddRow(new string[] {
                            "Autopay",
                            "N/A"});
                table2266.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2266.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2266.AddRow(new string[] {
                            "Email",
                            "TestFTestL@Test123.com"});
                table2266.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2266.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 52
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2266, "Then ");
#line hidden
#line 64
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
 testRunner.And("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("user verifies that these LOBs are recommended: GL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Grass Cutting Services policy gets Issued for NY state")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_GrassCuttingServices_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Landscaping")]
        public void WCGrassCuttingServicesPolicyGetsIssuedForNYState()
        {
            string[] tagsOfScenario = new string[] {
                    "WC",
                    "Issued",
                    "Regression",
                    "NY",
                    "Landscaping"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Grass Cutting Services policy gets Issued for NY state", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 71
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2267 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2267.AddRow(new string[] {
                            "Grass Cutting Services",
                            "2",
                            "I Work at a Job Site",
                            "",
                            "10001",
                            "WC"});
#line 72
 testRunner.Given("user starts a quote with:", ((string)(null)), table2267, "Given ");
#line hidden
#line 75
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2268 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2268.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2268.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 7 years ago"});
                table2268.AddRow(new string[] {
                            "How is your business structured?",
                            "Limited Liability Co. (LLC)"});
                table2268.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "9500"});
                table2268.AddRow(new string[] {
                            "Do you use any subcontractors or pay any workers using IRS Form 1099?",
                            "no"});
                table2268.AddRow(new string[] {
                            "Business",
                            "Test refer"});
                table2268.AddRow(new string[] {
                            "Address",
                            "93 ELLIOTT AVE;New York"});
                table2268.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2268.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2268.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2268.AddRow(new string[] {
                            "Phone",
                            "2551234587"});
                table2268.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 76
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2268, "Then ");
#line hidden
#line 90
 testRunner.Then("user verifies the Wage Calculator page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2269 = new TechTalk.SpecFlow.Table(new string[] {
                            "Average Employee Wage",
                            "Number of Employees",
                            "Hours per Week"});
                table2269.AddRow(new string[] {
                            "15",
                            "1",
                            "13"});
#line 91
 testRunner.Then("user fills out the Wage Calculator with these values:", ((string)(null)), table2269, "Then ");
#line hidden
#line 94
 testRunner.Then("user clicks continue from the Wage Calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2270 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2270.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
                table2270.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "1"});
#line 96
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2270, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2271 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name",
                            "W2 payroll",
                            "Annual Payroll"});
                table2271.AddRow(new string[] {
                            "Billy",
                            "Bob",
                            "yes",
                            "5000"});
#line 100
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table2271, "Then ");
#line hidden
#line 103
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2272 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2272.AddRow(new string[] {
                            "Do you trim trees above ground level or remove trees/stumps?",
                            "no"});
                table2272.AddRow(new string[] {
                            "Do you do any new landscaping such as laying down bricks,  sod, or stones or plan" +
                                "ting work?",
                            "no"});
                table2272.AddRow(new string[] {
                            "Do you do any roofing work?",
                            "no"});
                table2272.AddRow(new string[] {
                            "Do you ever transport six or more workers in the same vehicle?",
                            "no"});
                table2272.AddRow(new string[] {
                            "Do you do any framing work?",
                            "no"});
                table2272.AddRow(new string[] {
                            "Do you provide any lot or land clearing services?",
                            "no"});
                table2272.AddRow(new string[] {
                            "Do you do any construction work such as carpentry, decking, handyman jobs, or pai" +
                                "nting?",
                            "no"});
                table2272.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2272.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2272.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 104
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2272, "Then ");
#line hidden
#line 116
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 117
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2273 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2273.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 118
 testRunner.When("user selects a plus plan quote with the following customizations from the WC your" +
                        " quote page:", ((string)(null)), table2273, "When ");
#line hidden
#line 121
 testRunner.Then("user begins the WC AI page setting the FEIN with value 23-1326965", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
 testRunner.And("wc user handles 2 covered oo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table2274 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2274.AddRow(new string[] {
                            "CC Name",
                            "Funky Chicken-cheese"});
                table2274.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2274.AddRow(new string[] {
                            "CC Expiration Month",
                            "11"});
                table2274.AddRow(new string[] {
                            "CC Expiration Year",
                            "25"});
                table2274.AddRow(new string[] {
                            "Autopay",
                            "N/A"});
                table2274.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2274.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2274.AddRow(new string[] {
                            "Email",
                            "TestFTestL@Test123.com"});
                table2274.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2274.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 124
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2274, "Then ");
#line hidden
#line 136
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 137
 testRunner.And("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 138
 testRunner.And("user verifies that these LOBs are recommended: GL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
