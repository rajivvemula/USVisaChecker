// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Issued.ServiceIndustries_I
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_FloorInstallationNoCarpeting_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_FloorInstallationNoCarpeting_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Issued/ServiceIndustries_I", "WC_FloorInstallationNoCarpeting_I", "Issuing a Floor Installation: No Carpeting in KY", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_FloorInstallationNoCarpeting_I")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Issued.ServiceIndustries_I.WC_FloorInstallationNoCarpeting_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Floor Installation: No Carpeting Issuing a policy for Kentucky")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_FloorInstallationNoCarpeting_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("KY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("YourServices")]
        public void WCFloorInstallationNoCarpetingIssuingAPolicyForKentucky()
        {
            string[] tagsOfScenario = new string[] {
                    "Service",
                    "WC",
                    "Issued",
                    "KY",
                    "Regression",
                    "YourServices"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Floor Installation: No Carpeting Issuing a policy for Kentucky", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2742 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2742.AddRow(new string[] {
                            "Floor Installation: No Carpeting",
                            "4",
                            "I Own a Property & Lease to Others",
                            "",
                            "42724",
                            "WC"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table2742, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2743 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2743.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2743.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 5 years ago"});
                table2743.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table2743.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "100,000"});
                table2743.AddRow(new string[] {
                            "Are there any retail store employees that do not do any installation, maintenance" +
                                ", or contracting work?",
                            "no"});
                table2743.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table2743.AddRow(new string[] {
                            "Do you use any subcontractors or pay any workers using IRS Form 1099?",
                            "no"});
                table2743.AddRow(new string[] {
                            "Business",
                            "KY Floor Installation"});
                table2743.AddRow(new string[] {
                            "Address",
                            "10471 Leitchfield Rd;Cecilia"});
                table2743.AddRow(new string[] {
                            "Fill Contact",
                            ""});
#line 11
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2743, "Then ");
#line hidden
#line 23
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2744 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2744.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
                table2744.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "0"});
#line 24
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2744, "Then ");
#line hidden
#line 28
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2745 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2745.AddRow(new string[] {
                            "Do you ever transport six or more workers in the same vehicle?",
                            "no"});
                table2745.AddRow(new string[] {
                            "What percentage of work done is drywall/sheetrock?",
                            "10"});
                table2745.AddRow(new string[] {
                            "Do you do any framing work?",
                            "no"});
                table2745.AddRow(new string[] {
                            "Do you do roofing work?",
                            "no"});
                table2745.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2745.AddRow(new string[] {
                            "Do you perform any work over 30 feet above ground level?",
                            "no"});
                table2745.AddRow(new string[] {
                            "Do you do any water damage, fire damage, or mold restoration?",
                            "no"});
                table2745.AddRow(new string[] {
                            "Do you do any demolition or wrecking of entire buildings or homes?",
                            "no"});
                table2745.AddRow(new string[] {
                            "Do the business owner(s) of this business have a combined majority ownership in a" +
                                "ny other construction business?",
                            "no"});
                table2745.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2745.AddRow(new string[] {
                            "Do you do any construction work in New York?",
                            "no"});
                table2745.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
                table2745.AddRow(new string[] {
                            "Federal Employer Identification Number (FEIN)",
                            "23-1326965"});
#line 29
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2745, "Then ");
#line hidden
#line 44
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 45
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2746 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization"});
                table2746.AddRow(new string[] {
                            "N/A"});
#line 46
 testRunner.When("user selects a Standard Single-Bundle plan quote with the following customization" +
                        "s from the WC your quote page:", ((string)(null)), table2746, "When ");
#line hidden
#line 49
 testRunner.Then("user begins the WC AI page having the FEIN with value 23-1326965", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2747 = new TechTalk.SpecFlow.Table(new string[] {
                            "Set Name"});
                table2747.AddRow(new string[] {
                            "John Black"});
#line 50
 testRunner.Then("wc user handles 1 excluded oo with these values:", ((string)(null)), table2747, "Then ");
#line hidden
#line 53
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2748 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2748.AddRow(new string[] {
                            "Payment Option",
                            "15% Down + 9 Monthly Installments"});
                table2748.AddRow(new string[] {
                            "CC Name",
                            "Boiler Inspector Guys"});
                table2748.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2748.AddRow(new string[] {
                            "CC Expiration Month",
                            "11"});
                table2748.AddRow(new string[] {
                            "CC Expiration Year",
                            "25"});
                table2748.AddRow(new string[] {
                            "Autopay",
                            "N/A"});
                table2748.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2748.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2748.AddRow(new string[] {
                            "Email",
                            "TestFTestL@Test123.com"});
                table2748.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2748.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 54
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2748, "Then ");
#line hidden
#line 67
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
