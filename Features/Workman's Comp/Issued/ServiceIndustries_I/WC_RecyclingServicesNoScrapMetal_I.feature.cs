// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Issued.ServiceIndustries_I
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_RecyclingServicesNoScrapMetal_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_RecyclingServicesNoScrapMetal_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Issued/ServiceIndustries_I", "WC_RecyclingServicesNoScrapMetal_I", "Issuing a WC Recycling Services No Scrap Metal Issued Policy", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_RecyclingServicesNoScrapMetal_I")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Issued.ServiceIndustries_I.WC_RecyclingServicesNoScrapMetal_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Recycling Services: No Scrap Metal policy issued for Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_RecyclingServicesNoScrapMetal_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WI")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("YourServices")]
        public void WCRecyclingServicesNoScrapMetalPolicyIssuedForWisconsin()
        {
            string[] tagsOfScenario = new string[] {
                    "Service",
                    "WC",
                    "Issued",
                    "WI",
                    "Regression",
                    "YourServices"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Recycling Services: No Scrap Metal policy issued for Wisconsin", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2804 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2804.AddRow(new string[] {
                            "Recycling Services: No Scrap Metal",
                            "3",
                            "I Lease a Space From Others",
                            "",
                            "53093",
                            "WC"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table2804, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2805 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2805.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2805.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 9 years ago"});
                table2805.AddRow(new string[] {
                            "How is your business structured?",
                            "Limited Liability Co. (LLC)"});
                table2805.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "57000"});
                table2805.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table2805.AddRow(new string[] {
                            "Business",
                            "2Nite Events LLC;CE"});
                table2805.AddRow(new string[] {
                            "Address",
                            "Gulfport W5062 County Rd F;Waldo"});
                table2805.AddRow(new string[] {
                            "Fill Contact",
                            ""});
#line 11
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2805, "Then ");
#line hidden
#line 21
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2806 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2806.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
                table2806.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy?",
                            "0"});
#line 22
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2806, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2807 = new TechTalk.SpecFlow.Table(new string[] {
                            "Option"});
                table2807.AddRow(new string[] {
                            "please choose"});
                table2807.AddRow(new string[] {
                            "0"});
                table2807.AddRow(new string[] {
                            "1"});
#line 26
 testRunner.Then("user verifies that the How many owners/officers do you want to cover with this po" +
                        "licy? dropdown options are equivalent to the following:", ((string)(null)), table2807, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2808 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name"});
                table2808.AddRow(new string[] {
                            "TestF",
                            "TestL"});
#line 31
 testRunner.Then("user handles the WC Excluded OO with these values:", ((string)(null)), table2808, "Then ");
#line hidden
#line 34
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2809 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2809.AddRow(new string[] {
                            "Do you collect or handle any scrap iron or steel?",
                            "no"});
                table2809.AddRow(new string[] {
                            "Do you offer any bulk removal services such as furniture, mattresses, or large ap" +
                                "pliances?",
                            "no"});
                table2809.AddRow(new string[] {
                            "Do you travel to pick up any garbage or recycling?",
                            "No"});
                table2809.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2809.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2809.AddRow(new string[] {
                            "Do you use any volunteers or donated labor?",
                            "no"});
                table2809.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
                table2809.AddRow(new string[] {
                            "Federal Employer Identification Number (FEIN)",
                            "23-1326965"});
#line 35
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2809, "Then ");
#line hidden
#line 45
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
    testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2810 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2810.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 48
 testRunner.When("user selects a standard single-bundle plan quote with the following customization" +
                        "s from the WC your quote page:", ((string)(null)), table2810, "When ");
#line hidden
#line 51
 testRunner.Then("user begins the WC AI page having the FEIN with value 23-1326965", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2811 = new TechTalk.SpecFlow.Table(new string[] {
                            "Have Name"});
                table2811.AddRow(new string[] {
                            "Vera Angel"});
#line 52
 testRunner.Then("wc user handles 1 excluded oo with these values:", ((string)(null)), table2811, "Then ");
#line hidden
#line 55
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2812 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2812.AddRow(new string[] {
                            "Payment Option",
                            "One Pay Plan"});
                table2812.AddRow(new string[] {
                            "CC Name",
                            "Young Mens Christian Association"});
                table2812.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2812.AddRow(new string[] {
                            "CC Expiration Month",
                            "11"});
                table2812.AddRow(new string[] {
                            "CC Expiration Year",
                            "25"});
                table2812.AddRow(new string[] {
                            "Autopay",
                            "N/A"});
                table2812.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2812.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2812.AddRow(new string[] {
                            "Email",
                            "TestFTestL@Test123.com"});
                table2812.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2812.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 56
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2812, "Then ");
#line hidden
#line 69
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 70
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
