// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Issued.Manufacturing_I
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_BoxManufacturing_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_BoxManufacturing_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Issued/Manufacturing_I", "WC_BoxManufacturing_I", "NOTE: Verifying the OO rules for the following States as mentioned in the US 1045" +
                    "59\r\n KS (Corporation)\r\n MA (Corporation)\r\n MS (Corporation)\r\n NE (Corporation)", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_BoxManufacturing_I")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Issued.Manufacturing_I.WC_BoxManufacturing_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Box Manufacturing creates issued policy in KS for Biz type Corporation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_BoxManufacturing_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manufacturing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("KS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OwnerOfficer")]
        public void WCBoxManufacturingCreatesIssuedPolicyInKSForBizTypeCorporation()
        {
            string[] tagsOfScenario = new string[] {
                    "Manufacturing",
                    "WC",
                    "Issued",
                    "KS",
                    "Regression",
                    "OwnerOfficer"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Box Manufacturing creates issued policy in KS for Biz type Corporation", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2352 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2352.AddRow(new string[] {
                            "Box Manufacturing",
                            "15",
                            "I Lease a Space From Others",
                            "",
                            "66103",
                            "WC"});
#line 10
 testRunner.Given("user starts a quote with:", ((string)(null)), table2352, "Given ");
#line hidden
#line 13
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2353 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2353.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2353.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 3 years ago"});
                table2353.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table2353.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "50000"});
                table2353.AddRow(new string[] {
                            "Are there any delivery drivers on staff?",
                            "no"});
                table2353.AddRow(new string[] {
                            "Are there any travelling sales staff that are not involved at all in the manufact" +
                                "uring process?",
                            "no"});
                table2353.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table2353.AddRow(new string[] {
                            "Business",
                            "Test OO rules"});
                table2353.AddRow(new string[] {
                            "Address",
                            "4215 Rainbow Blvd;Kansas City"});
                table2353.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2353.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2353.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2353.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table2353.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 14
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2353, "Then ");
#line hidden
#line 30
 testRunner.And("user verifies the Wage Calculator page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And("user clicks continue from the Wage Calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2354 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2354.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "3"});
                table2354.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy? State law require" +
                                "s owners/officers with less than 10% ownership to be covered.",
                            "2"});
#line 33
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2354, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2355 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name",
                            "Job Duty"});
                table2355.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "Manufacturer"});
                table2355.AddRow(new string[] {
                            "TestFN",
                            "TestLN",
                            "Manufacturer"});
#line 37
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table2355, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2356 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Checkbox"});
                table2356.AddRow(new string[] {
                            "",
                            "Yes"});
#line 41
 testRunner.Then("user handles the WC Excluded OO with these values:", ((string)(null)), table2356, "Then ");
#line hidden
#line 44
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2357 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2357.AddRow(new string[] {
                            "Do you operate a sawmill?",
                            "no"});
                table2357.AddRow(new string[] {
                            "Other than hand-held power tools, do you use any equipment or machinery?",
                            "no"});
                table2357.AddRow(new string[] {
                            "Do your employees deliver any of your finished product?",
                            "Never - 3rd party/Postal Service delivers all"});
                table2357.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2357.AddRow(new string[] {
                            "Are any employees required to physically lift/move more than 50 lbs?",
                            "no"});
                table2357.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2357.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 45
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2357, "Then ");
#line hidden
#line 54
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
    testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2358 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2358.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 57
 testRunner.When("user selects a Plus plan quote with the following customizations from the WC your" +
                        " quote page:", ((string)(null)), table2358, "When ");
#line hidden
#line 60
 testRunner.Then("user begins the WC AI page setting the FEIN with value 23-3456789", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2359 = new TechTalk.SpecFlow.Table(new string[] {
                            "Have Name",
                            "Set SSN"});
                table2359.AddRow(new string[] {
                            "",
                            "221-11-3434"});
#line 61
 testRunner.Then("wc user handles 1 excluded oo with these values:", ((string)(null)), table2359, "Then ");
#line hidden
#line 64
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2360 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2360.AddRow(new string[] {
                            "Payment Option",
                            "One Pay Plan"});
                table2360.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table2360.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2360.AddRow(new string[] {
                            "CC Expiration Month",
                            "03"});
                table2360.AddRow(new string[] {
                            "CC Expiration Year",
                            "30"});
                table2360.AddRow(new string[] {
                            "Autopay",
                            "Yes"});
                table2360.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2360.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2360.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2360.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2360.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 65
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2360, "Then ");
#line hidden
#line 78
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Box Manufacturing creates issued policy in MA for Biz type Corporation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_BoxManufacturing_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manufacturing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OwnerOfficer")]
        public void WCBoxManufacturingCreatesIssuedPolicyInMAForBizTypeCorporation()
        {
            string[] tagsOfScenario = new string[] {
                    "Manufacturing",
                    "WC",
                    "Issued",
                    "MA",
                    "Regression",
                    "OwnerOfficer"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Box Manufacturing creates issued policy in MA for Biz type Corporation", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 82
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2361 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2361.AddRow(new string[] {
                            "Box Manufacturing",
                            "3",
                            "I Lease a Space From Others",
                            "",
                            "01105",
                            "WC"});
#line 83
 testRunner.Given("user starts a quote with:", ((string)(null)), table2361, "Given ");
#line hidden
#line 86
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2362 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2362.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2362.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 3 years ago"});
                table2362.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table2362.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "50000"});
                table2362.AddRow(new string[] {
                            "Are there any delivery drivers on staff?",
                            "no"});
                table2362.AddRow(new string[] {
                            "Are there any travelling sales staff that are not involved at all in the manufact" +
                                "uring process?",
                            "no"});
                table2362.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table2362.AddRow(new string[] {
                            "Business",
                            "Test OO rules"});
                table2362.AddRow(new string[] {
                            "Address",
                            "3363 Grant Valley Rd NW;Springfield"});
                table2362.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2362.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2362.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2362.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table2362.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 87
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2362, "Then ");
#line hidden
#line 103
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2363 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2363.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "2"});
                table2363.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy? State law require" +
                                "s owners/officers with less than 10% ownership to be covered.",
                            "1"});
#line 104
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2363, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2364 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name",
                            "W2 payroll",
                            "Annual Payroll",
                            "Job Duty"});
                table2364.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "yes",
                            "80000",
                            "Manufacturer"});
#line 108
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table2364, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2365 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Checkbox"});
                table2365.AddRow(new string[] {
                            "",
                            "Yes"});
#line 111
 testRunner.Then("user handles the WC Excluded OO with these values:", ((string)(null)), table2365, "Then ");
#line hidden
#line 114
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2366 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2366.AddRow(new string[] {
                            "Do you operate a sawmill?",
                            "no"});
                table2366.AddRow(new string[] {
                            "Other than hand-held power tools, do you use any equipment or machinery?",
                            "no"});
                table2366.AddRow(new string[] {
                            "Do your employees deliver any of your finished product?",
                            "Never - 3rd party/Postal Service delivers all"});
                table2366.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2366.AddRow(new string[] {
                            "Are any employees required to physically lift/move more than 50 lbs?",
                            "no"});
                table2366.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2366.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 115
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2366, "Then ");
#line hidden
#line 124
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
    testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2367 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2367.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 127
 testRunner.When("user selects a Plus plan quote with the following customizations from the WC your" +
                        " quote page:", ((string)(null)), table2367, "When ");
#line hidden
#line 130
 testRunner.Then("user begins the WC AI page setting the FEIN with value 23-3456789", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2368 = new TechTalk.SpecFlow.Table(new string[] {
                            "Have Name"});
                table2368.AddRow(new string[] {
                            ""});
#line 131
 testRunner.Then("wc user handles 1 excluded oo with these values:", ((string)(null)), table2368, "Then ");
#line hidden
#line 134
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2369 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2369.AddRow(new string[] {
                            "Payment Option",
                            "One Pay Plan"});
                table2369.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table2369.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2369.AddRow(new string[] {
                            "CC Expiration Month",
                            "03"});
                table2369.AddRow(new string[] {
                            "CC Expiration Year",
                            "30"});
                table2369.AddRow(new string[] {
                            "Autopay",
                            "Yes"});
                table2369.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2369.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2369.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2369.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2369.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 135
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2369, "Then ");
#line hidden
#line 148
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Box Manufacturing creates issued policy in MS for Biz type Corporation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_BoxManufacturing_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manufacturing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OwnerOfficer")]
        public void WCBoxManufacturingCreatesIssuedPolicyInMSForBizTypeCorporation()
        {
            string[] tagsOfScenario = new string[] {
                    "Manufacturing",
                    "WC",
                    "Issued",
                    "MS",
                    "Regression",
                    "OwnerOfficer"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Box Manufacturing creates issued policy in MS for Biz type Corporation", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 152
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2370 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2370.AddRow(new string[] {
                            "Box Manufacturing",
                            "3",
                            "I Lease a Space From Others",
                            "",
                            "39503",
                            "WC"});
#line 153
 testRunner.Given("user starts a quote with:", ((string)(null)), table2370, "Given ");
#line hidden
#line 156
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2371 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2371.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2371.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 3 years ago"});
                table2371.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table2371.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "50000"});
                table2371.AddRow(new string[] {
                            "Are there any delivery drivers on staff?",
                            "no"});
                table2371.AddRow(new string[] {
                            "Are there any travelling sales staff that are not involved at all in the manufact" +
                                "uring process?",
                            "no"});
                table2371.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table2371.AddRow(new string[] {
                            "Business",
                            "Test OO rules"});
                table2371.AddRow(new string[] {
                            "Address",
                            "11236 Lorraine Rd;Gulfport"});
                table2371.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2371.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2371.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2371.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table2371.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 157
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2371, "Then ");
#line hidden
#line 173
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2372 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2372.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "2"});
                table2372.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy? State law require" +
                                "s owners/officers with less than 10% ownership to be covered.",
                            "1"});
#line 174
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2372, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2373 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name",
                            "Job Duty"});
                table2373.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "Manufacturer"});
#line 178
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table2373, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2374 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Checkbox"});
                table2374.AddRow(new string[] {
                            "",
                            "Yes"});
#line 181
 testRunner.Then("user handles the WC Excluded OO with these values:", ((string)(null)), table2374, "Then ");
#line hidden
#line 184
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2375 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2375.AddRow(new string[] {
                            "Do you operate a sawmill?",
                            "no"});
                table2375.AddRow(new string[] {
                            "Other than hand-held power tools, do you use any equipment or machinery?",
                            "no"});
                table2375.AddRow(new string[] {
                            "Do your employees deliver any of your finished product?",
                            "Never - 3rd party/Postal Service delivers all"});
                table2375.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2375.AddRow(new string[] {
                            "Are any employees required to physically lift/move more than 50 lbs?",
                            "no"});
                table2375.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2375.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 185
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2375, "Then ");
#line hidden
#line 194
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 195
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 196
    testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2376 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2376.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 197
 testRunner.When("user selects a Plus plan quote with the following customizations from the WC your" +
                        " quote page:", ((string)(null)), table2376, "When ");
#line hidden
#line 200
 testRunner.Then("user begins the WC AI page setting the FEIN with value 23-3456789", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2377 = new TechTalk.SpecFlow.Table(new string[] {
                            "Have Name"});
                table2377.AddRow(new string[] {
                            ""});
#line 201
 testRunner.Then("wc user handles 1 excluded oo with these values:", ((string)(null)), table2377, "Then ");
#line hidden
#line 204
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2378 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2378.AddRow(new string[] {
                            "Payment Option",
                            "One Pay Plan"});
                table2378.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table2378.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2378.AddRow(new string[] {
                            "CC Expiration Month",
                            "03"});
                table2378.AddRow(new string[] {
                            "CC Expiration Year",
                            "30"});
                table2378.AddRow(new string[] {
                            "Autopay",
                            "Yes"});
                table2378.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2378.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2378.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2378.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2378.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 205
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2378, "Then ");
#line hidden
#line 218
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 219
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Box Manufacturing creates issued policy in NE for Biz type Corporation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_BoxManufacturing_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manufacturing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OwnerOfficer")]
        public void WCBoxManufacturingCreatesIssuedPolicyInNEForBizTypeCorporation()
        {
            string[] tagsOfScenario = new string[] {
                    "Manufacturing",
                    "WC",
                    "Issued",
                    "NE",
                    "Regression",
                    "OwnerOfficer"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Box Manufacturing creates issued policy in NE for Biz type Corporation", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 222
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2379 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2379.AddRow(new string[] {
                            "Box Manufacturing",
                            "3",
                            "I Lease a Space From Others",
                            "",
                            "68516",
                            "WC"});
#line 223
 testRunner.Given("user starts a quote with:", ((string)(null)), table2379, "Given ");
#line hidden
#line 226
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2380 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2380.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2380.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 3 years ago"});
                table2380.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table2380.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "50000"});
                table2380.AddRow(new string[] {
                            "Are there any delivery drivers on staff?",
                            "no"});
                table2380.AddRow(new string[] {
                            "Are there any travelling sales staff that are not involved at all in the manufact" +
                                "uring process?",
                            "no"});
                table2380.AddRow(new string[] {
                            "Do any employees only do general office work and rarely travel?",
                            "no"});
                table2380.AddRow(new string[] {
                            "Business",
                            "Test OO rules"});
                table2380.AddRow(new string[] {
                            "Address",
                            "1823 Test Rd;Lincoln"});
                table2380.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2380.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2380.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2380.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table2380.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 227
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2380, "Then ");
#line hidden
#line 243
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2381 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2381.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "2"});
                table2381.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy? State law require" +
                                "s owners/officers with less than 10% ownership to be covered.",
                            "1"});
#line 244
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2381, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2382 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name",
                            "Job Duty"});
                table2382.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "Manufacturer"});
#line 248
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table2382, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2383 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Checkbox"});
                table2383.AddRow(new string[] {
                            "",
                            "Yes"});
#line 251
 testRunner.Then("user handles the WC Excluded OO with these values:", ((string)(null)), table2383, "Then ");
#line hidden
#line 254
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2384 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2384.AddRow(new string[] {
                            "Do you operate a sawmill?",
                            "no"});
                table2384.AddRow(new string[] {
                            "Other than hand-held power tools, do you use any equipment or machinery?",
                            "no"});
                table2384.AddRow(new string[] {
                            "Do your employees deliver any of your finished product?",
                            "Never - 3rd party/Postal Service delivers all"});
                table2384.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2384.AddRow(new string[] {
                            "Are any employees required to physically lift/move more than 50 lbs?",
                            "no"});
                table2384.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2384.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 255
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2384, "Then ");
#line hidden
#line 264
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 265
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
    testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2385 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2385.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 267
 testRunner.When("user selects a Plus plan quote with the following customizations from the WC your" +
                        " quote page:", ((string)(null)), table2385, "When ");
#line hidden
#line 270
 testRunner.Then("user begins the WC AI page setting the FEIN with value 23-3456789", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2386 = new TechTalk.SpecFlow.Table(new string[] {
                            "Have Name"});
                table2386.AddRow(new string[] {
                            ""});
#line 271
 testRunner.Then("wc user handles 1 excluded oo with these values:", ((string)(null)), table2386, "Then ");
#line hidden
#line 274
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2387 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2387.AddRow(new string[] {
                            "Payment Option",
                            "One Pay Plan"});
                table2387.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table2387.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2387.AddRow(new string[] {
                            "CC Expiration Month",
                            "03"});
                table2387.AddRow(new string[] {
                            "CC Expiration Year",
                            "30"});
                table2387.AddRow(new string[] {
                            "Autopay",
                            "Yes"});
                table2387.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2387.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2387.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2387.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2387.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 275
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2387, "Then ");
#line hidden
#line 288
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 289
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
