// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BiBerkLOB.Features.WorkmansComp.Issued.RetailWholesaleStoresInclFoodStores_I
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_IssuedPolicy_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_IssuedPolicy_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Issued/RetailWholesaleStoresInclFoodStores_I", "WC_IssuedPolicy_I", @"Navigate UW page, Quote details page and payment page
Using reusable steps and create common steps for other test cases
Keyword: Bagel Shop: Retail
Yes I have Employee
Number of employee : 8
Business Operation: I Lease a Space From Others
Included Officer: 2
Business started year : Started 7 years ago
Business Structured: LLC
EechAccidentPolicyEachEmpLimit: 100,000/500,000/100,000  
Payment Option: 40% Down + 2 Quarterly Installments ", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_IssuedPolicy_I")))
            {
                global::BiBerkLOB.Features.WorkmansComp.Issued.RetailWholesaleStoresInclFoodStores_I.WC_IssuedPolicy_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02_Submit UW questions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_IssuedPolicy_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _02_SubmitUWQuestions()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Submit UW questions", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1376 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table1376.AddRow(new string[] {
                            "Bagel Shop: Retail",
                            "8",
                            "I Lease a Space From Others",
                            "",
                            "06001",
                            "WC"});
#line 16
 testRunner.Given("user starts a quote with:", ((string)(null)), table1376, "Given ");
#line hidden
#line 19
testRunner.Given("user selects Policy start date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1377 = new TechTalk.SpecFlow.Table(new string[] {
                            "WhenDidYouStartYourBusiness"});
                table1377.AddRow(new string[] {
                            "Brand new venture or Started earlier this year"});
                table1377.AddRow(new string[] {
                            "Started last year"});
                table1377.AddRow(new string[] {
                            "Started 2 years ago"});
                table1377.AddRow(new string[] {
                            "Started 3 years ago"});
                table1377.AddRow(new string[] {
                            "Started 4 years ago"});
                table1377.AddRow(new string[] {
                            "Started 5 years ago"});
                table1377.AddRow(new string[] {
                            "Started 6 years ago"});
                table1377.AddRow(new string[] {
                            "Started 7 years ago"});
                table1377.AddRow(new string[] {
                            "Started 8 years ago"});
                table1377.AddRow(new string[] {
                            "Started 9 years ago"});
                table1377.AddRow(new string[] {
                            "Been around a while, started 10 or more years ago"});
#line 20
testRunner.And("user selects When did you start your business Started 7 years ago", ((string)(null)), table1377, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1378 = new TechTalk.SpecFlow.Table(new string[] {
                            "HowIsYourBusinessStructured"});
                table1378.AddRow(new string[] {
                            "Corporation"});
                table1378.AddRow(new string[] {
                            "Partnership"});
                table1378.AddRow(new string[] {
                            "Individual/Sole Proprietor"});
                table1378.AddRow(new string[] {
                            "Sub-Chapter Corp"});
                table1378.AddRow(new string[] {
                            "Limited Liability Co. (LLC)"});
#line 33
testRunner.And("user selects How is your business structured Limited Liability Co. (LLC)", ((string)(null)), table1378, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1379 = new TechTalk.SpecFlow.Table(new string[] {
                            "CoverageForAnyOwnersOfficers"});
                table1379.AddRow(new string[] {
                            "No"});
                table1379.AddRow(new string[] {
                            "Yes - buy coverage for 1 owner/officer"});
                table1379.AddRow(new string[] {
                            "Yes - buy coverage for 2 owners/officers"});
                table1379.AddRow(new string[] {
                            "Yes - buy coverage for 3 owners/officers"});
                table1379.AddRow(new string[] {
                            "Yes - buy coverage for 4 owners/officers"});
                table1379.AddRow(new string[] {
                            "Yes - buy coverage for 5 or more owners/officers"});
#line 40
testRunner.And("user selects Do you want to include coverage for any owners/officers Yes - buy co" +
                        "verage for 2 owners/officers", ((string)(null)), table1379, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1380 = new TechTalk.SpecFlow.Table(new string[] {
                            "option"});
                table1380.AddRow(new string[] {
                            "No"});
                table1380.AddRow(new string[] {
                            "Yes - 1"});
                table1380.AddRow(new string[] {
                            "Yes - 2"});
                table1380.AddRow(new string[] {
                            "Yes - 3"});
                table1380.AddRow(new string[] {
                            "Yes - 4"});
                table1380.AddRow(new string[] {
                            "Yes - 5 or more"});
#line 48
testRunner.And("user select on Yes - 2 option for Do any owners/officers only do general office w" +
                        "ork and do not work a cash register", ((string)(null)), table1380, "And ");
#line hidden
#line 56
testRunner.And("user enters What is the total annual payroll for W-2 employees 650000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
testRunner.And("user selects Yes option for Do any employees only work at a retail store where no" +
                        " baking is done on premises", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
testRunner.And("user clicks on Yes CTA for Do any employees only do general office work and do no" +
                        "t work a cash register", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
testRunner.And("user verify Tax ID title and enters FEIN number 126787201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
testRunner.And("user enters 20 for What percentage of your overall sales involve delivery", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1381 = new TechTalk.SpecFlow.Table(new string[] {
                            "ClaimsWereReported"});
                table1381.AddRow(new string[] {
                            "None"});
                table1381.AddRow(new string[] {
                            "1"});
                table1381.AddRow(new string[] {
                            "2"});
                table1381.AddRow(new string[] {
                            "3"});
                table1381.AddRow(new string[] {
                            "4"});
                table1381.AddRow(new string[] {
                            "5"});
                table1381.AddRow(new string[] {
                            "6 or more"});
#line 61
testRunner.And("user clicks In the past 3 years how many Workers Compensation claims were reporte" +
                        "d None", ((string)(null)), table1381, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1382 = new TechTalk.SpecFlow.Table(new string[] {
                            "WhenWasLastPolicyInEffect",
                            "HasThereBeenAnyWorkersInjuries"});
                table1382.AddRow(new string[] {
                            "Never  no prior insurance",
                            "Yes there has been injuries or accidents"});
                table1382.AddRow(new string[] {
                            "Within the last 30 days",
                            "No to the best of my knowledge"});
                table1382.AddRow(new string[] {
                            "30 days to 6 months ago",
                            ""});
                table1382.AddRow(new string[] {
                            "More than 6 months ago",
                            ""});
#line 72
testRunner.And(@"user clicks No for Do you currently have a Workers Compensation insurance policy in effect and user select Within the last 30 days from the When was your last policy in effect dropdown and user select option (.*) for Has there been any worker injuries or accidents since the last policy was in effect General", ((string)(null)), table1382, "And ");
#line hidden
#line 78
testRunner.And("user selects No and enters 0 for Do you use any volunteers or donated labor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
testRunner.And("user clicks No for Do you have multiple locations in more than one state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
testRunner.And("user enters Business name Simit Bagel, DBA Simit Bagel and website www.simitbagel" +
                        ".com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
testRunner.And("user enters their Business address line 1 is 120 Simit rd, and City is Avon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
testRunner.And("user enters their Contact first name, Contact last name is Amanda, Certification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
testRunner.And("user enters their Contact email simitbagel@Plan.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
testRunner.And("user enters their Contact phone 25245615482525", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
testRunner.And("user submits WC questions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03_User verifies quote details and enters email General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_IssuedPolicy_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _03_UserVerifiesQuoteDetailsAndEntersEmailGeneral()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_User verifies quote details and enters email General", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 88
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 89
testRunner.When("user landed quote details page then user verifies qoute number, down payment and " +
                        "TTL estimated cost General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
testRunner.And("user cliks on Email CTA and user enters numbers of emails 1 email1 Kilamats@pool." +
                        "com and email2 (.*) and user remove second email and send propsal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
testRunner.Then("user verifies coverage details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 92
testRunner.And("user enters number of 2 included owner/officers name1 Oliver Tureng, name2 Hakan " +
                        "Simit, name3 (.*), name4 (.*) and name5 (.*)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
testRunner.And("user clicks on Add Another Name CTA for excluded owner/officer enters number 2 of" +
                        " excluded owner/officers name1 Brad Simit, name2 Justin Mugal, name3 {name3}, na" +
                        "me4 {name4} and name5 {name5}", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
testRunner.And("user delete second excluded owner officers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1383 = new TechTalk.SpecFlow.Table(new string[] {
                            "EechAccidentPolicyEachEmpLimit"});
                table1383.AddRow(new string[] {
                            "100,000/500,000/100,000"});
                table1383.AddRow(new string[] {
                            "1,000,000/1,000,000/1,000,000"});
#line 95
testRunner.And("user selects Each Accident/Policy/Each Employee Limit from the dropdown 100,000/5" +
                        "00,000/100,000", ((string)(null)), table1383, "And ");
#line hidden
#line 99
testRunner.And("user clicks on Continue CTA General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04_User performs payment")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_IssuedPolicy_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _04_UserPerformsPayment()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_User performs payment", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 103
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1384 = new TechTalk.SpecFlow.Table(new string[] {
                            "PaymentInfo"});
                table1384.AddRow(new string[] {
                            "Product"});
                table1384.AddRow(new string[] {
                            "Policy Term"});
                table1384.AddRow(new string[] {
                            "Starting Date"});
                table1384.AddRow(new string[] {
                            "Total Premium"});
                table1384.AddRow(new string[] {
                            "Payment option"});
#line 104
testRunner.Given("user landed Payment Information then user verifies <\"PaymentInfo\"> General", ((string)(null)), table1384, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1385 = new TechTalk.SpecFlow.Table(new string[] {
                            "PaymentOption"});
                table1385.AddRow(new string[] {
                            "15% Down + 9 Monthly Installments"});
                table1385.AddRow(new string[] {
                            "25% Down + 6 Monthly Installments"});
                table1385.AddRow(new string[] {
                            "40% Down + 2 Quarterly Installments"});
                table1385.AddRow(new string[] {
                            "One Pay Plan"});
#line 111
testRunner.And("user selects payment option 40% Down + 2 Quarterly Installments from the DD then " +
                        "user verifies Due Now, Future Install amount and per installment fee General", ((string)(null)), table1385, "And ");
#line hidden
#line 117
testRunner.Then("user enters name on card and credit card number for Discover and expiration with " +
                        "MM 08 and YY 25 General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 118
 testRunner.And("user verifies Business information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
testRunner.Then("user verifies contact infromation Fisrt Name, Last Name, Email address and Phone " +
                        "number General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 120
 testRunner.And("user clicks on checkbox for agree terms and condition and clicks on Purchase CTA " +
                        "General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05_User submit feedback and navigate Thank you page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_IssuedPolicy_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _05_UserSubmitFeedbackAndNavigateThankYouPage()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_User submit feedback and navigate Thank you page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 123
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 124
testRunner.Given("user landed Thank you page and user performs feedback Star5 and submit the feedba" +
                        "ck and user clicks on Close CTA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 125
testRunner.Then("user verifies Order Summary on the Thank you page based on selected Payment optio" +
                        "n (.*)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
