// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Issued.RetailWholesaleStoresInclFoodStores_I
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_JewelryRepair_IFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_JewelryRepair_I.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Issued/RetailWholesaleStoresInclFoodStores_I", "WC_JewelryRepair_I", "Verifying that the Jewelry Repair keyword can be issued when officers have 50% an" +
                    "d 10% ownership of the business.", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_JewelryRepair_I")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Issued.RetailWholesaleStoresInclFoodStores_I.WC_JewelryRepair_IFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Jewelry Repair _ 2 Officers With 10% Ownership")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_JewelryRepair_I")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Retail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Issued")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OwnerOfficer")]
        public void JewelryRepair_2OfficersWith10Ownership()
        {
            string[] tagsOfScenario = new string[] {
                    "Retail",
                    "WC",
                    "Issued",
                    "AZ",
                    "Regression",
                    "OwnerOfficer"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Jewelry Repair _ 2 Officers With 10% Ownership", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2598 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2598.AddRow(new string[] {
                            "Jewelry Repair",
                            "",
                            "I Work at a Job Site",
                            "",
                            "69120",
                            "WC"});
#line 7
 testRunner.Given("user starts a quote with:", ((string)(null)), table2598, "Given ");
#line hidden
#line 10
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2599 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2599.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2599.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 2 years ago"});
                table2599.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table2599.AddRow(new string[] {
                            "Business",
                            "Jewelry Repair"});
                table2599.AddRow(new string[] {
                            "Address",
                            "119 E Jackson Ave;Arnold"});
                table2599.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2599.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2599.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2599.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table2599.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 11
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2599, "Then ");
#line hidden
#line 23
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2600 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2600.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "2"});
                table2600.AddRow(new string[] {
                            "How many owners/officers do you want to cover with this policy? State law require" +
                                "s owners/officers with less than 10% ownership to be covered.",
                            "2"});
#line 24
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2600, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2601 = new TechTalk.SpecFlow.Table(new string[] {
                            "first name",
                            "last name"});
                table2601.AddRow(new string[] {
                            "OneF",
                            "OneL"});
                table2601.AddRow(new string[] {
                            "TwoF",
                            "TwoL"});
#line 28
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table2601, "Then ");
#line hidden
#line 32
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2602 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2602.AddRow(new string[] {
                            "Do you use armed security officers?",
                            "yes"});
                table2602.AddRow(new string[] {
                            "What percentage of your overall sales involve delivery?",
                            "0"});
                table2602.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "None"});
                table2602.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2602.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 33
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2602, "Then ");
#line hidden
#line 40
 testRunner.Then("user verifies the appearance of the WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
    testRunner.Then("user clicks continue from WC Summary page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
    testRunner.Then("user verifies the WC your quote page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2603 = new TechTalk.SpecFlow.Table(new string[] {
                            "Customization",
                            "Value"});
                table2603.AddRow(new string[] {
                            "ELL - Each Accident / Total Policy / Each Employee",
                            "100,000/500,000/100,000"});
#line 43
 testRunner.When("user selects a standard single-bundle plan quote with the following customization" +
                        "s from the WC your quote page:", ((string)(null)), table2603, "When ");
#line hidden
#line 46
 testRunner.Then("user begins the WC AI page setting the FEIN with value 23-1234567", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.Then("wc user handles 2 covered oo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2604 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2604.AddRow(new string[] {
                            "Payment Option",
                            "25% Down + 6 Monthly Installments"});
                table2604.AddRow(new string[] {
                            "CC Name",
                            "TestF TestL"});
                table2604.AddRow(new string[] {
                            "CC Number",
                            "4111111111111111"});
                table2604.AddRow(new string[] {
                            "CC Expiration Month",
                            "03"});
                table2604.AddRow(new string[] {
                            "CC Expiration Year",
                            "30"});
                table2604.AddRow(new string[] {
                            "Autopay",
                            "N/A"});
                table2604.AddRow(new string[] {
                            "First Name",
                            "TestF"});
                table2604.AddRow(new string[] {
                            "Last Name",
                            "TestL"});
                table2604.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2604.AddRow(new string[] {
                            "Phone",
                            "7777777777"});
                table2604.AddRow(new string[] {
                            "Same Billing Info?",
                            "Yes"});
#line 49
 testRunner.Then("user fills out the WC purchase page with these values:", ((string)(null)), table2604, "Then ");
#line hidden
#line 62
 testRunner.Then("user verifies the WC how would you rate our service modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
 testRunner.Then("user verifies the WC thank you page appearance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
