// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApolloQAAutomation.Features.WorkmansComp.Referred.EducationAndPublicWorksOrganizations_R
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WC_BoysAndGirlsClub_RFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "WC_BoysAndGirlsClub_R.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Workman\'s Comp/Referred/EducationAndPublicWorksOrganizations_R", "WC_BoysAndGirlsClub_R", @"Reason: Number of claims specified 2 >= threshold number 2.
Description: Total number of claims in past three years exceeds the threshold based on class, state, and payroll amount.
Ineligible quote for the 
Keyword: Boys and Girls Club
Employee option: 10
ZIP code: 07043
Business Structured: LLC
Business Operation: I Lease a Space From Others
Business started year : Been around a while, started 10 or more years ago", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WC_BoysAndGirlsClub_R")))
            {
                global::ApolloQAAutomation.Features.WorkmansComp.Referred.EducationAndPublicWorksOrganizations_R.WC_BoysAndGirlsClub_RFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("WC Boys And Girls Club gets referred due to number of claims greater than two")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WC_BoysAndGirlsClub_R")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Referred")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Education")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NJ")]
        public void WCBoysAndGirlsClubGetsReferredDueToNumberOfClaimsGreaterThanTwo()
        {
            string[] tagsOfScenario = new string[] {
                    "WC",
                    "Regression",
                    "Referred",
                    "Education",
                    "NJ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WC Boys And Girls Club gets referred due to number of claims greater than two", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 13
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2955 = new TechTalk.SpecFlow.Table(new string[] {
                            "Industry",
                            "Employees",
                            "Location",
                            "Own or Lease",
                            "ZIP Code",
                            "LOB"});
                table2955.AddRow(new string[] {
                            "Boys and Girls Club",
                            "10",
                            "I Lease a Space From Others",
                            "",
                            "07043",
                            "WC"});
#line 14
 testRunner.Given("user starts a quote with:", ((string)(null)), table2955, "Given ");
#line hidden
#line 17
 testRunner.Then("user verifies the appearance of the WC About You Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2956 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2956.AddRow(new string[] {
                            "When do you want your policy to start?",
                            ""});
                table2956.AddRow(new string[] {
                            "When did you start your business?",
                            "Started 6 years ago"});
                table2956.AddRow(new string[] {
                            "How is your business structured?",
                            "Corporation"});
                table2956.AddRow(new string[] {
                            "What is the total annual payroll for W-2 employees? (exclude business owners/offi" +
                                "cers)",
                            "800000"});
                table2956.AddRow(new string[] {
                            "Business",
                            "Test Number Of Claims"});
                table2956.AddRow(new string[] {
                            "Address",
                            "117 Mt Hebron Rd;Montclair"});
                table2956.AddRow(new string[] {
                            "Contact First Name",
                            "TestF"});
                table2956.AddRow(new string[] {
                            "Contact Last Name",
                            "TestL"});
                table2956.AddRow(new string[] {
                            "Email",
                            "Test@Test123.com"});
                table2956.AddRow(new string[] {
                            "Phone",
                            "1231231321"});
                table2956.AddRow(new string[] {
                            "Business website",
                            "test.com"});
#line 18
 testRunner.Then("user fills out the WC About You page with these values:", ((string)(null)), table2956, "Then ");
#line hidden
#line 31
 testRunner.Then("user verifies the appearance of the WC Owners and Officers Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2957 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2957.AddRow(new string[] {
                            "How many owners/officers does your business have?",
                            "1"});
#line 32
 testRunner.Then("user handles the WC OO kickoff questions with these values:", ((string)(null)), table2957, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2958 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Last Name",
                            "W2 payroll",
                            "Annual Payroll"});
                table2958.AddRow(new string[] {
                            "TestF",
                            "TestL",
                            "yes",
                            "50000"});
#line 35
 testRunner.Then("user handles the WC Covered OO with these values:", ((string)(null)), table2958, "Then ");
#line hidden
#line 38
 testRunner.Then("user continues on from the WC OO page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2959 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question",
                            "Answer"});
                table2959.AddRow(new string[] {
                            "In the past 3 years how many Workers\' Compensation claims were reported?",
                            "2"});
                table2959.AddRow(new string[] {
                            "Are any children or students younger than five years old?",
                            "No"});
                table2959.AddRow(new string[] {
                            "Do you currently have a Workers\' Compensation insurance policy in effect?",
                            "yes"});
                table2959.AddRow(new string[] {
                            "Do you use any volunteers or donated labor?",
                            "no"});
                table2959.AddRow(new string[] {
                            "Do you have multiple locations in more than one state?",
                            "no"});
#line 39
 testRunner.Then("user fills out the WC Your Services page", ((string)(null)), table2959, "Then ");
#line hidden
#line 46
 testRunner.Then("user begins the WC AI page setting the FEIN with value 63-1212123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.Then("user continues on from the WC Additional Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2960 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table2960.AddRow(new string[] {
                            "Business name",
                            "Test Number Of Claims"});
                table2960.AddRow(new string[] {
                            "Contact first name",
                            "TestF"});
                table2960.AddRow(new string[] {
                            "Contact last name",
                            "TestL"});
                table2960.AddRow(new string[] {
                            "Email",
                            "TestCert@Plan.com"});
                table2960.AddRow(new string[] {
                            "Phone",
                            "(123) 123-1321"});
                table2960.AddRow(new string[] {
                            "Business website",
                            "www.TestPartnerCert.com"});
#line 48
 testRunner.When("user fills out the WC refer page with these values:", ((string)(null)), table2960, "When ");
#line hidden
#line 56
 testRunner.Then("user verifies the refer thank you page appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
