// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BiBerkLOB.Features.SmokeTest
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Attorney_TermsConditionsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "Attorney_TermsConditions.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SmokeTest", "Attorney_TermsConditions", "Issued Policy for;\r\nKeyword: Attorney\r\nThis is to verify that you can agree to th" +
                    "e terms and conditions successfully", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Attorney_TermsConditions")))
            {
                global::BiBerkLOB.Features.SmokeTest.Attorney_TermsConditionsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01_User performs Business Information for Keyword: Attorney Issued policy")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Attorney_TermsConditions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _01_UserPerformsBusinessInformationForKeywordAttorneyIssuedPolicy()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_User performs Business Information for Keyword: Attorney Issued policy", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
   testRunner.Given("user lands biBerk Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table447 = new TechTalk.SpecFlow.Table(new string[] {
                            "Options"});
                table447.AddRow(new string[] {
                            "Top Quote CTA"});
                table447.AddRow(new string[] {
                            "Dark Blue Banner WC CTA"});
                table447.AddRow(new string[] {
                            "Explore Our Insurance Products WC"});
                table447.AddRow(new string[] {
                            "Get a Quote Today"});
                table447.AddRow(new string[] {
                            "Footer WCCTA"});
#line 9
     testRunner.And("user clicks on Top Quote CTA Home page WC option", ((string)(null)), table447, "And ");
#line hidden
#line 16
 testRunner.Then("user landed on What\'s your industry page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
 testRunner.Then("user enters Attorney for the question What\'s your industry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("user landed on Do you have any employees page General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.Then("user clicks Yes for Do you have any employees and for How many employees do you h" +
                        "ave enters 12", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table448 = new TechTalk.SpecFlow.Table(new string[] {
                            "WhereDoesYourBusinessOperatePage"});
                table448.AddRow(new string[] {
                            "I Run My Business Out of My Home"});
                table448.AddRow(new string[] {
                            "I Lease a Space From Others"});
                table448.AddRow(new string[] {
                            "I Work at a Job Site"});
                table448.AddRow(new string[] {
                            "I Run My Business From Property I Own"});
                table448.AddRow(new string[] {
                            "I Own a Property & Lease to Others"});
#line 20
 testRunner.Then("user enters for Where does your business operate that I Run My Business From Prop" +
                        "erty I Own", ((string)(null)), table448, "Then ");
#line hidden
#line 27
 testRunner.Then("user enters Where is your business located as 60623", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.Then("user landed Select a Product page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
 testRunner.Then("user clicks on Workers Compensation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02_User performs UW Questions for Keyword: Attorney Issued policy")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Attorney_TermsConditions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _02_UserPerformsUWQuestionsForKeywordAttorneyIssuedPolicy()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_User performs UW Questions for Keyword: Attorney Issued policy", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 32
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 33
   testRunner.Given("user selects Policy start date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table449 = new TechTalk.SpecFlow.Table(new string[] {
                            "WhenDidYouStartYourBusiness"});
                table449.AddRow(new string[] {
                            "Brand new venture or Started earlier this year"});
                table449.AddRow(new string[] {
                            "Started last year"});
                table449.AddRow(new string[] {
                            "Started 2 years ago"});
                table449.AddRow(new string[] {
                            "Started 3 years ago"});
                table449.AddRow(new string[] {
                            "Started 4 years ago"});
                table449.AddRow(new string[] {
                            "Started 5 years ago"});
                table449.AddRow(new string[] {
                            "Started 6 years ago"});
                table449.AddRow(new string[] {
                            "Started 7 years ago"});
                table449.AddRow(new string[] {
                            "Started 8 years ago"});
                table449.AddRow(new string[] {
                            "Started 9 years ago"});
                table449.AddRow(new string[] {
                            "Been around a while, started 10 or more years ago"});
#line 34
 testRunner.And("user selects When did you start your business Been around a while, started 10 or " +
                        "more years ago", ((string)(null)), table449, "And ");
#line hidden
                TechTalk.SpecFlow.Table table450 = new TechTalk.SpecFlow.Table(new string[] {
                            "HowIsYourBusinessStructured"});
                table450.AddRow(new string[] {
                            "Corporation"});
                table450.AddRow(new string[] {
                            "Partnership"});
                table450.AddRow(new string[] {
                            "Individual/Sole Proprietor"});
                table450.AddRow(new string[] {
                            "Sub-Chapter Corp"});
                table450.AddRow(new string[] {
                            "Limited Liability Co. (LLC)"});
#line 47
 testRunner.And("user selects How is your business structured Limited Liability Co. (LLC)", ((string)(null)), table450, "And ");
#line hidden
                TechTalk.SpecFlow.Table table451 = new TechTalk.SpecFlow.Table(new string[] {
                            "CoverageForAnyOwnersOfficers"});
                table451.AddRow(new string[] {
                            "Yes - buy coverage for 1 owner/officer"});
                table451.AddRow(new string[] {
                            "Yes - buy coverage for 2 owners/officers"});
                table451.AddRow(new string[] {
                            "Yes - buy coverage for 3 owners/officers"});
                table451.AddRow(new string[] {
                            "Yes - buy coverage for 4 owners/officers"});
                table451.AddRow(new string[] {
                            "Yes - buy coverage for 5 or more owners/officers"});
#line 54
 testRunner.And("user selects Do you want to include coverage for any owners/officers Yes - buy co" +
                        "verage for 2 owners/officers", ((string)(null)), table451, "And ");
#line hidden
#line 61
 testRunner.And("user enters What is the total annual payroll for W-2 employees 1250000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("user enters percentage 25 for the Question What percentage of work involves Bankr" +
                        "uptcy, Corporate, Intellectual Property, or Real Estate law", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table452 = new TechTalk.SpecFlow.Table(new string[] {
                            "ClaimsWereReported"});
                table452.AddRow(new string[] {
                            "None"});
                table452.AddRow(new string[] {
                            "1"});
                table452.AddRow(new string[] {
                            "2"});
                table452.AddRow(new string[] {
                            "3"});
                table452.AddRow(new string[] {
                            "4"});
                table452.AddRow(new string[] {
                            "5"});
                table452.AddRow(new string[] {
                            "6 or more"});
#line 63
 testRunner.And("user clicks In the past 3 years how many Workers Compensation claims were reporte" +
                        "d 1", ((string)(null)), table452, "And ");
#line hidden
#line 72
 testRunner.And("user selects No and enters 0 for Do you use any volunteers or donated labor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.And("user clicks No for Do you have multiple locations in more than one state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.And("user enters Business name Justice IL Law, DBA DBA18 and website www.justicelaw7.c" +
                        "om", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And("user enters their Business address line 1 is 540 Justice rd, and City is Chicago", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.And("user enters their Contact first name, Contact last name is Justin, Certification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.And("user enters their Contact email justicelaw7@Plan.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And("user enters their Contact phone 25265487871245", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("user submits WC questions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03_User verifies quote details and perform related information for Keyword: Attor" +
            "ney Issued policy")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Attorney_TermsConditions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _03_UserVerifiesQuoteDetailsAndPerformRelatedInformationForKeywordAttorneyIssuedPolicy()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_User verifies quote details and perform related information for Keyword: Attor" +
                    "ney Issued policy", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 82
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 83
   testRunner.When("user landed quote details page then user verifies qoute number, down payment and " +
                        "TTL estimated cost General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 84
 testRunner.And("user cliks on Email CTA and user enters numbers of emails 1 email1 justicelaw7@Pl" +
                        "an.com and email2 (.*) and user remove second email and send propsal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.Then("user verifies coverage details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
 testRunner.Then("user enters number of 2 included owner/officers name1 Daren Makes, name2 Justin J" +
                        "ust, name3 {name3}, name4 {name4} and name5 {name5}", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.And("user clicks on Add Another Name CTA for excluded owner/officer enters number 1 of" +
                        " excluded owner/officers name1 Meli Justice, name2 {name2}, name3 {name3}, name4" +
                        " {name4} and name5 {name5}", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table453 = new TechTalk.SpecFlow.Table(new string[] {
                            "EachAccidentPolicyEachEmpLimit"});
                table453.AddRow(new string[] {
                            "100,000/500,000/100,000"});
                table453.AddRow(new string[] {
                            "1,000,000/1,000,000/1,000,000"});
#line 88
 testRunner.And("user selects Each Accident/Policy/Each Employee Limit from the dropdown 100,000/5" +
                        "00,000/100,000", ((string)(null)), table453, "And ");
#line hidden
#line 92
 testRunner.And("user clicks on Continue CTA General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04_User performs payment for Keyword: Attorney Issued policy")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Attorney_TermsConditions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _04_UserPerformsPaymentForKeywordAttorneyIssuedPolicy()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_User performs payment for Keyword: Attorney Issued policy", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 96
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table454 = new TechTalk.SpecFlow.Table(new string[] {
                            "PaymentInfo"});
                table454.AddRow(new string[] {
                            "Product"});
                table454.AddRow(new string[] {
                            "Policy Term"});
                table454.AddRow(new string[] {
                            "Starting Date"});
                table454.AddRow(new string[] {
                            "Total Premium"});
                table454.AddRow(new string[] {
                            "Payment option"});
#line 97
   testRunner.Given("user landed Payment Information then user verifies <\"PaymentInfo\"> General", ((string)(null)), table454, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table455 = new TechTalk.SpecFlow.Table(new string[] {
                            "PaymentOption"});
                table455.AddRow(new string[] {
                            "15% Down + 9 Monthly Installments"});
                table455.AddRow(new string[] {
                            "25% Down + 6 Monthly Installments"});
                table455.AddRow(new string[] {
                            "40% Down + 2 Quarterly Installments"});
                table455.AddRow(new string[] {
                            "65% Down + Balnce in 6 Months"});
                table455.AddRow(new string[] {
                            "One Pay Plan"});
#line 104
 testRunner.And("user selects payment option 25% Down + 6 Monthly Installments from the DD then us" +
                        "er verifies Due Now, Future Install amount and per installment fee General", ((string)(null)), table455, "And ");
#line hidden
#line 111
 testRunner.Then("user enters name on card and credit card number for AmericanExpress and expiratio" +
                        "n with MM 11 and YY 24 General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 112
  testRunner.And("user enters verifies TAX ID type FEIN and user enters TAX ID Number 158004109", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
 testRunner.Then("user verifies contact infromation Fisrt Name, Last Name, Email address and Phone " +
                        "number General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 114
  testRunner.And("user clicks on checkbox for agree terms and condition then verifies agree terms d" +
                        "etails and clicks on Purchase CTA General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05_User submits feedback and verifies Thank You page details for Keyword: Attorne" +
            "y Issued policy")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Attorney_TermsConditions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _05_UserSubmitsFeedbackAndVerifiesThankYouPageDetailsForKeywordAttorneyIssuedPolicy()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_User submits feedback and verifies Thank You page details for Keyword: Attorne" +
                    "y Issued policy", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 118
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 119
   testRunner.Given("user landed Thank you page and user performs feedback Star5 and submit the feedba" +
                        "ck and user clicks on Close CTA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 120
 testRunner.Then("user verifies Order Summary on the Thank you page based on selected Payment optio" +
                        "n (.*)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
