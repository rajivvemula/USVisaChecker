// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BiBerkLOB.Features.SmokeTest
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SubmitBusinessInformationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "SubmitBusinessInformation.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SmokeTest", "SubmitBusinessInformation", "User progresses through the Worker\'s Compensation purchase path until they succes" +
                    "sfully get a quote id\r\nMeant to verify the successful arrival at the quote", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "SubmitBusinessInformation")))
            {
                global::BiBerkLOB.Features.SmokeTest.SubmitBusinessInformationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01_User performs Business Information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubmitBusinessInformation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _01_UserPerformsBusinessInformation()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_User performs Business Information", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
   testRunner.Given("user lands biBerk Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table476 = new TechTalk.SpecFlow.Table(new string[] {
                            "Options"});
                table476.AddRow(new string[] {
                            "Top Quote CTA"});
                table476.AddRow(new string[] {
                            "Dark Blue Banner WC CTA"});
                table476.AddRow(new string[] {
                            "Explore Our Insurance Products WC"});
                table476.AddRow(new string[] {
                            "Get a Quote Today"});
                table476.AddRow(new string[] {
                            "Footer WCCTA"});
#line 8
     testRunner.And("user clicks on Top Quote CTA Home page WC option", ((string)(null)), table476, "And ");
#line hidden
#line 15
 testRunner.Then("user landed on What\'s your industry page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
 testRunner.Then("user enters Hair Salon for the question What\'s your industry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
 testRunner.Then("user landed on Do you have any employees page General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("user clicks Yes for Do you have any employees and for How many employees do you h" +
                        "ave enters 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table477 = new TechTalk.SpecFlow.Table(new string[] {
                            "WhereDoesYourBusinessOperatePage"});
                table477.AddRow(new string[] {
                            "I Run My Business Out of My Home"});
                table477.AddRow(new string[] {
                            "I Lease a Space From Others"});
                table477.AddRow(new string[] {
                            "I Work at a Job Site"});
                table477.AddRow(new string[] {
                            "I Run My Business From Property I Own"});
                table477.AddRow(new string[] {
                            "I Own a Property & Lease to Others"});
#line 19
 testRunner.Then("user enters for Where does your business operate that I Run My Business Out of My" +
                        " Home", ((string)(null)), table477, "Then ");
#line hidden
#line 26
 testRunner.Then("user enters Where is your business located as 60647", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
 testRunner.Then("user landed Select a Product page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.Then("user clicks on Workers Compensation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02_User performs UW Questions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubmitBusinessInformation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _02_UserPerformsUWQuestions()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_User performs UW Questions", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 31
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 32
   testRunner.Given("user selects Policy start date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table478 = new TechTalk.SpecFlow.Table(new string[] {
                            "WhenDidYouStartYourBusiness"});
                table478.AddRow(new string[] {
                            "Brand new venture or Started earlier this year"});
                table478.AddRow(new string[] {
                            "Started last year"});
                table478.AddRow(new string[] {
                            "Started 2 years ago"});
                table478.AddRow(new string[] {
                            "Started 3 years ago"});
                table478.AddRow(new string[] {
                            "Started 4 years ago"});
                table478.AddRow(new string[] {
                            "Started 5 years ago"});
                table478.AddRow(new string[] {
                            "Started 6 years ago"});
                table478.AddRow(new string[] {
                            "Started 7 years ago"});
                table478.AddRow(new string[] {
                            "Started 8 years ago"});
                table478.AddRow(new string[] {
                            "Started 9 years ago"});
                table478.AddRow(new string[] {
                            "Been around a while, started 10 or more years ago"});
#line 33
 testRunner.And("user selects When did you start your business Started 2 years ago", ((string)(null)), table478, "And ");
#line hidden
                TechTalk.SpecFlow.Table table479 = new TechTalk.SpecFlow.Table(new string[] {
                            "HowIsYourBusinessStructured"});
                table479.AddRow(new string[] {
                            "Corporation"});
                table479.AddRow(new string[] {
                            "Partnership"});
                table479.AddRow(new string[] {
                            "Individual/Sole Proprietor"});
                table479.AddRow(new string[] {
                            "Sub-Chapter Corp"});
                table479.AddRow(new string[] {
                            "Limited Liability Co. (LLC)"});
#line 46
 testRunner.And("user selects How is your business structured Limited Liability Co. (LLC)", ((string)(null)), table479, "And ");
#line hidden
                TechTalk.SpecFlow.Table table480 = new TechTalk.SpecFlow.Table(new string[] {
                            "CoverageForAnyOwnersOfficers"});
                table480.AddRow(new string[] {
                            "No"});
                table480.AddRow(new string[] {
                            "Yes - buy coverage for 1 owner/officer"});
                table480.AddRow(new string[] {
                            "Yes - buy coverage for 2 owners/officers"});
                table480.AddRow(new string[] {
                            "Yes - buy coverage for 3 owners/officers"});
                table480.AddRow(new string[] {
                            "Yes - buy coverage for 4 owners/officers"});
                table480.AddRow(new string[] {
                            "Yes - buy coverage for 5 or more owners/officers"});
#line 53
 testRunner.And("user selects Do you want to include coverage for any owners/officers Yes - buy co" +
                        "verage for 2 owners/officers", ((string)(null)), table480, "And ");
#line hidden
#line 61
 testRunner.And("user enters What is the total annual payroll for W-2 employees 300000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table481 = new TechTalk.SpecFlow.Table(new string[] {
                            "WCClaimsWereReported"});
                table481.AddRow(new string[] {
                            "None"});
                table481.AddRow(new string[] {
                            "1"});
                table481.AddRow(new string[] {
                            "2"});
                table481.AddRow(new string[] {
                            "3"});
                table481.AddRow(new string[] {
                            "4"});
                table481.AddRow(new string[] {
                            "5"});
                table481.AddRow(new string[] {
                            "6 or more"});
#line 62
 testRunner.And("user clicks In the past 3 years how many Workers Compensation claims were reporte" +
                        "d None", ((string)(null)), table481, "And ");
#line hidden
                TechTalk.SpecFlow.Table table482 = new TechTalk.SpecFlow.Table(new string[] {
                            "WhenWasLastPolicyInEffect",
                            "HasThereBeenAnyWorkersInjuries"});
                table482.AddRow(new string[] {
                            "Never no prior insurance",
                            "Yes there has been injuries or accidents"});
                table482.AddRow(new string[] {
                            "Within the last 30 days",
                            "No to the best of my knowledge"});
                table482.AddRow(new string[] {
                            "30 days to 6 months ago",
                            ""});
                table482.AddRow(new string[] {
                            "More than 6 months ago",
                            ""});
#line 71
 testRunner.And(@"user clicks Yes for Do you currently have a Workers Compensation insurance policy in effect and user select option from the When was your last policy in effect dropdown and user select option optin for Has there been any worker injuries or accidents since the last policy was in effect General", ((string)(null)), table482, "And ");
#line hidden
#line 77
 testRunner.And("user clicks No for Do you have multiple locations in more than one state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And("user enters bussiness name, DBA, website, adress", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.Then("user verify city,state and zipcode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 80
 testRunner.And("user enters Firstname, lastName, email and phone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
 testRunner.And("user clicks on Submit CTA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03_User verifies landing successfully on the quote details page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubmitBusinessInformation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        public void _03_UserVerifiesLandingSuccessfullyOnTheQuoteDetailsPage()
        {
            string[] tagsOfScenario = new string[] {
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_User verifies landing successfully on the quote details page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 84
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 85
   testRunner.When("user landed quote details page then user verifies qoute number, down payment and " +
                        "TTL estimated cost General", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
